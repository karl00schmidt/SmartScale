
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _miot = _$$_REQUIRE(_dependencyMap[7]);

  var _ui = _$$_REQUIRE(_dependencyMap[8]);

  var _Main = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _DataNotes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _MyCookbook = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _CommonSetting2 = _$$_REQUIRE(_dependencyMap[14]);

  var _WaterFlooding = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _FinishCoffee = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Preview = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _CookbookDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  _miot.PackageEvent.packageAuthorizationCancel.addListener(function () {
    _miot.Package.exit();
  });

  var RootStack = (0, _reactNavigation.createStackNavigator)({
    Home: _Main.default,
    CommonSetting: _CommonSetting.default,
    MoreSetting: _CommonSetting2.MoreSetting,
    FirmwareUpgrade: _CommonSetting2.FirmwareUpgrade,
    DataNotes: _DataNotes.default,
    MyCookbook: _MyCookbook.default,
    WaterFlooding: _WaterFlooding.default,
    FinishCoffee: _FinishCoffee.default,
    Preview: _Preview.default,
    CookbookDetail: _CookbookDetail.default
  }, {
    initialRouteName: 'Home',
    navigationOptions: function navigationOptions(_ref) {
      var navigation = _ref.navigation;
      return {
        header: _react.default.createElement(_ui.TitleBarBlack, {
          title: navigation.state.params ? navigation.state.params.title : _miot.Device.name,
          style: {
            backgroundColor: '#fff'
          },
          onPressLeft: function onPressLeft() {
            _miot.Package.exit();
          },
          onPressRight: function onPressRight() {}
        })
      };
    }
  });

  var App = function (_React$Component) {
    (0, _inherits2.default)(App, _React$Component);

    function App() {
      (0, _classCallCheck2.default)(this, App);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));
    }

    (0, _createClass2.default)(App, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(RootStack, null);
      }
    }]);
    return App;
  }(_react.default.Component);

  _miot.Package.entry(App, function () {});

  console.ignoredYellowBox = function () {};

  console.disableYellowBox = function () {};
},10001,[14305,14320,14323,14371,14377,14386,10297,10074,10230,10004,10208,10217,10253,10918,10353,10256,10298,10304,10313]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[9]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var _toast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _DataHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _ui = _$$_REQUIRE(_dependencyMap[17]);

  var bt = _miotSdk.Device.getBluetoothLE();

  var statusEnable = false;
  var that;
  var show = false;

  var _showDot1;

  var SCROLLVIEW_DIRECTION_UP = 0;
  var SCROLLVIEW_DIRECTION_DOWN = 1;
  var UUID_SERVICE = '00000100-0065-6C62-2E74-6F696D2E696D';
  var UUID_LED_READ_WRITE = '00000101-0065-6C62-2E74-6F696D2E696D';
  var UUID_BUTTON_READ_WRITE_NOTIFY = '00000102-0065-6C62-2E74-6F696D2E696D';
  var menuAllData = [];
  var temp_coffee_ratio;

  var Main = function (_BaseComponent) {
    (0, _inherits2.default)(Main, _BaseComponent);

    function Main(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Main);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Main).call(this, props));
      _this.scrollViewStartOffsetY = 0;
      _this.scrollViewScrollDirection = 0;

      _this.onTopLayout = function (event) {
        var viewWidth = event.nativeEvent.layout.width;
        var viewHeight = event.nativeEvent.layout.height;

        _this.setState({
          topViewHeight: viewHeight
        });
      };

      _this._onScrollBeginDrag = function (event) {
        var offsetY = event.nativeEvent.contentOffset.y;
        _this.scrollViewStartOffsetY = offsetY;
      };

      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        fault: 0,
        weight: 0,
        weightOver: false,
        selectTab: 1,
        battery: 0,
        negative: false,
        unit: 'g',
        coffee_ratio: 15,
        coffee_ratio_dialog_visible: false,
        input_food_dialog_visible: false,
        food_name: _HomeLocalizableString.default.no_name,
        no_name: _HomeLocalizableString.default.no_name,
        lastSaveWeight: '',
        lastSaveUnit: '',
        lastSelectItemId: 0,
        did: _miotSdk.Device.deviceID,
        chars: {},
        services: [],
        isEnable: false,
        connectState: '未连接',
        btConnect: false,
        blueConnecting: false,
        testCharNotify: false,
        scType: 4,
        buttonText: _miotSdk.Device.mac,
        log: '',
        coffee_step: 1,
        menuAllArray: [],
        menuArray: [],
        menuClassifyArray: [{
          name: '全部'
        }, {
          name: '中餐'
        }, {
          name: '咖啡'
        }, {
          name: '健康餐'
        }, {
          name: '烘焙'
        }, {
          name: '西餐'
        }],
        classifyViewShow: true,
        menuEdit: false,
        topViewHeight: 0,
        loadingVis: false,
        licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
        policyUrl: _$$_REQUIRE(_dependencyMap[19])
      };
      return _this;
    }

    (0, _createClass2.default)(Main, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.SyncNotesListener = _reactNative.DeviceEventEmitter.addListener('syncNotes', function (message) {
          _this2._getLastSaveData();
        });
        this.SyncClassifyListener = _reactNative.DeviceEventEmitter.addListener('syncClassify', function (message) {
          _this2._getClassifyData();
        });
        this.SyncMenuListener = _reactNative.DeviceEventEmitter.addListener('syncMenu', function (message) {
          _this2._getMenuData();
        });

        _DataHelper.default._fetchFDSDataNotesFileName();

        _DataHelper.default._fetchFDSClassifyFileName();

        _DataHelper.default._fetchFDSMenuFileName();

        var key = "coffee_ratio___" + _miotSdk.Device.deviceID;

        var value = _miotSdk.Host.storage.get(key).then(function (value) {
          if (value != '' && value != null && value != NaN) {
            _this2.setState({
              coffee_ratio: parseInt(value)
            });
          }
        });

        this._getMenuData();

        this._getClassifyData();

        this.scrollViewStartOffsetY = 0;
        this.scrollViewScrollDirection = 0;

        this._showPrivacyDialog();

        this.subscription = _miotSdk.DeviceEvent.deviceNameChanged.addListener(function (device) {
          _this2.props.navigation.setParams({
            title: device.name
          });
        });

        this._ble();

        this.listenerMenu = _reactNative.DeviceEventEmitter.addListener('refresh_menu', function (message) {
          _this2._getMenuData();

          _this2._getClassifyData();
        });
        this.listenerGUnit = _reactNative.DeviceEventEmitter.addListener('changeToGUnit', function (message) {
          _this2.setTogUnit();

          _this2.setTogUnit();
        });
        this.listenerRefresh = _reactNative.DeviceEventEmitter.addListener('refreshLastData', function (message) {
          _this2._getLastSaveData();
        });

        this._getLastSaveData();
      }
    }, {
      key: "_readFileList",
      value: function _readFileList() {
        _miotSdk.Host.file.readFileList().then(function (result) {}).catch(function (error, msg) {});
      }
    }, {
      key: "addLog",
      value: function addLog(string) {}
    }, {
      key: "_ble",
      value: function _ble() {
        var _this3 = this;

        this.showing = true;

        _miotSdk.Bluetooth.checkBluetoothIsEnabled().then(function (result) {
          _this3.state.isEnable = result;

          if (result) {
            _this3.addLog("蓝牙已开启");

            _this3.connect();
          } else {
            _this3.addLog("蓝牙未开启，请检查开启蓝牙后再试");

            if (_reactNative.Platform.OS === 'android') {
              _miotSdk.Host.ui.openPhoneBluSettingPage();
            } else {
              _miotSdk.Host.ui.showBLESwitchGuide();
            }
          }
        });

        this._s5 = _miotSdk.BluetoothEvent.bluetoothStatusChanged.addListener(function (isOn) {
          _this3.addLog("\u84DD\u7259\u72B6\u6001\u53D1\u751F\u53D8\u5316 \uFF1A " + JSON.stringify(isOn));

          if (_this3.state.btConnect && !isOn) {
            _this3.addLog('蓝牙连接已断开');

            _this3.setState({
              connectState: '未连接',
              testCharNotify: false,
              btConnect: false,
              chars: {},
              services: []
            });

            _this3._ble();
          }
        });
        this._s7 = _miotSdk.BluetoothEvent.bluetoothDeviceDiscovered.addListener(function (result) {
          if (result.mac === bt.mac) {
            _this3.addLog("\u53D1\u73B0\u8BBE\u5907" + JSON.stringify(result));

            _this3.connect(result.mac);
          }
        });
        this._s1 = _miotSdk.BluetoothEvent.bluetoothSeviceDiscovered.addListener(function (blut, services) {
          if (services.length <= 0) {
            return;
          }

          _this3.addLog("\u53D1\u73B0\u84DD\u7259\u670D\u52A1\u66F4\u65B0\uFF1A" + JSON.stringify(services.map(function (s) {
            return s.UUID;
          })));

          var s = services.map(function (s) {
            return {
              uuid: s.UUID,
              char: []
            };
          });

          _this3.setState({
            services: s
          });

          if (bt.isConnected) {
            _this3.addLog('开始扫描特征值');

            services.forEach(function (s) {
              _this3.state.services[s.UUID] = s;
              s.startDiscoverCharacteristics();
            });
          }

          _miotSdk.Device.getBluetoothLE().getVersion(true, true).then(function (version) {}).catch(function (err) {});
        });
        this._s2 = _miotSdk.BluetoothEvent.bluetoothCharacteristicDiscovered.addListener(function (bluetooth, service, characters) {
          var services = _this3.state.services;
          services.forEach(function (s) {
            if (s.uuid === service.UUID) {
              s.char = characters.map(function (s) {
                return s.UUID;
              });
            }
          });

          _this3.setState({
            services: services
          });

          if (bt.isConnected) {
            characters.forEach(function (c) {
              _this3.state.chars[c.UUID] = c;
            });
          }

          if (service.UUID.toUpperCase() == UUID_SERVICE) {
            _this3.enableNotify();
          }
        });
        this._s3 = _miotSdk.BluetoothEvent.bluetoothCharacteristicValueChanged.addListener(function (bluetooth, service, character, value) {
          if (character.UUID.toUpperCase() === UUID_BUTTON_READ_WRITE_NOTIFY) {
            bt.securityLock.decryptMessage(value).then(function (res) {
              _this3._parseChar(_this3.convertStringToByteArray(res));
            });
          }
        });
        this._s4 = _miotSdk.BluetoothEvent.bluetoothSeviceDiscoverFailed.addListener(function (blut, data) {});
        this._s5 = _miotSdk.BluetoothEvent.bluetoothCharacteristicDiscoverFailed.addListener(function (blut, data) {});
        this._s6 = _miotSdk.BluetoothEvent.bluetoothConnectionStatusChanged.addListener(function (blut, isConnect) {
          if (bt.mac === blut.mac) {
            _this3.setState({
              connectState: isConnect ? '已连接' : '未连接'
            });

            _this3.addLog("\u84DD\u7259" + JSON.stringify(blut) + "\u72B6\u6001\u53D8\u5316" + isConnect);

            _this3.addLog('蓝牙连接已断开');

            if (!isConnect) {
              _this3.setState({
                connectState: '未连接',
                testCharNotify: false,
                btConnect: false,
                chars: {},
                services: []
              });

              _this3.connect();
            }
          }
        });
        this._s8 = _miotSdk.DeviceEvent.bleDeviceFirmwareNeedUpgrade.addListener(function (device) {
          _this3.addLog("bleDeviceFirmwareNeedUpgrade " + device.needUpgrade + "," + device.latestVersion + "," + device.lastVersion);
        });
      }
    }, {
      key: "connect",
      value: function connect() {
        var _this4 = this;

        var mac = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        var disconnectOntimeOut = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

        if (_miotSdk.Host.isAndroid) {
          _miotSdk.Bluetooth.stopScan();
        }

        this.setState({
          blueConnecting: true,
          connectState: '连接中。。。'
        });
        this.addLog('准备开始蓝牙连接');

        if (bt.isConnected) {
          this.addLog('蓝牙设备已经连接');
          this.addLog('开始发先服务');
          this.setState({
            blueConnecting: false,
            connectState: '已连接',
            btConnect: true
          });
          bt.startDiscoverServices();
        } else if (bt.isConnecting) {
          this.addLog('蓝牙正处于连接中，请等待连接结果后再试');
        } else {
          var _that = this;

          this.addLog("" + _miotSdk.Host.isAndroid);

          if (_miotSdk.Host.isAndroid && mac === undefined) {
            this.setState({
              blueConnecting: true,
              connectState: "\u626B\u63CF\u8BBE\u5907\u4E2D" + bt.mac
            });

            _miotSdk.Bluetooth.startScan(300000);

            return;
          }

          bt.connect(this.state.scType, {
            did: _miotSdk.Device.deviceID
          }).then(function (data) {
            _this4.setState({
              blueConnecting: false,
              connectState: '已连接',
              btConnect: true
            });

            bt.startDiscoverServices();
          }).catch(function (data) {
            _this4.setState({
              blueConnecting: false,
              connectState: '连接失败',
              btConnect: false
            });

            _this4.addLog("ble connect failed: " + JSON.stringify(data));

            if (data.code === -7 && disconnectOntimeOut) {
              _miotSdk.Bluetooth.retrievePeripheralsWithServicesForIOS('FE95').then(function (res) {
                _that.addLog("\u83B7\u53D6\u5DF2\u8FDE\u63A5\u8BBE\u5907\uFF1A" + JSON.stringify(res));

                return new Promise(function (resolve, reject) {
                  for (var key in res) {
                    _that.addLog("\u51C6\u5907\u65AD\u5F00\u8FDE\u63A5\uFF1A" + key);

                    _miotSdk.Bluetooth.createBluetoothLE(key).disconnect();
                  }

                  resolve();
                });
              }).then(function () {
                _that.connect(mac, false);
              });
            }
          });
        }
      }
    }, {
      key: "disconnect",
      value: function disconnect() {
        this.setState({
          connectState: '断开连接中。。。'
        });
        bt.disconnect(0, true);
      }
    }, {
      key: "checkBluetoothIsEnabled",
      value: function checkBluetoothIsEnabled() {
        _miotSdk.Bluetooth.checkBluetoothIsEnabled().then(function (yes) {
          statusEnable = yes;
        });
      }
    }, {
      key: "enableBluetoothForAndroid",
      value: function enableBluetoothForAndroid() {
        _miotSdk.Bluetooth.enableBluetoothForAndroid(!statusEnable);
      }
    }, {
      key: "addLog",
      value: function addLog(string) {
        var log = this.state.log;
        log += "\n" + string;
        this.setState({
          log: log
        });
      }
    }, {
      key: "_parseChar",
      value: function _parseChar(value) {
        _reactNative.DeviceEventEmitter.emit('parseChar', value);

        if (value[0] == 0x55 && value[1] == 0xaa) {
          if (value[2] == 0x01) {
            if (value[3] == 0x07 || value[3] == 0x08) {
              this.setState({
                weightOver: false
              });
              var length = value[4];
              var weightValue = (value[6] & 0xff) << 8 | value[5] & 0xff;
              this.setState({
                weight: weightValue
              });
              this.setState({
                negative: (value[7] & 0xf0) >> 4 == 0 ? false : true
              });
              var unit = value[7] & 0x0f;

              if (unit == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (unit == 0x01) {
                this.setState({
                  unit: 'ml'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (unit == 0x02) {
                this.setState({
                  unit: 'oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (unit == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              }
            } else if (value[3] == 0x05) {
              this.setState({
                weight: 0
              });
              this.setState({
                negative: false
              });
            } else if (value[3] == 0x04) {
              var _length = value[4];

              if (value[5] == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (value[5] == 0x01) {
                this.setState({
                  unit: 'ml'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (value[5] == 0x02) {
                this.setState({
                  unit: 'oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (value[5] == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              }
            } else if (value[3] == 0x09) {
              var _length2 = value[4];

              if (value[5] == 0x00) {
                this.setState({
                  weightOver: false
                });
              } else if (value[5] == 0x01) {
                this.setState({
                  weightOver: true
                });
              } else if (value[5] == 0x02) {}
            } else if (value[3] == 0x81) {
              var _length3 = value[4];

              var _weightValue = (value[6] & 0xff) << 8 | value[5] & 0xff;

              this.setState({
                weight: _weightValue
              });
              this.setState({
                negative: (value[7] & 0xf0) >> 4 == 0 ? false : true
              });

              var _unit = value[7] & 0x0f;

              if (_unit == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (_unit == 0x01) {
                this.setState({
                  unit: 'ml'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (_unit == 0x02) {
                this.setState({
                  unit: 'oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              } else if (_unit == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });

                if (this.state.selectTab == 0) {
                  this.setTogUnit();
                }
              }

              if (value[8] == 0x00) {
                this.setState({
                  weightOver: false
                });
              } else if (value[8] == 0x01) {
                this.setState({
                  weightOver: true
                });
                (0, _toast.default)('设备超重');
              } else if (value[8] == 0x02) {
                (0, _toast.default)('设备已进入低功耗模式');
              }
            }
          }
        }
      }
    }, {
      key: "convertStringToByteArray",
      value: function convertStringToByteArray(str) {
        var array = str.split('');
        var tempArray = [];
        var testIndex = 0;
        array.map(function (item, index) {
          if (index == testIndex && index != array.length - 1) {
            tempArray.push("0x" + item + array[index + 1]);
            testIndex = testIndex + 2;
          }
        });
        return tempArray;
      }
    }, {
      key: "_getCharacValue",
      value: function _getCharacValue() {
        var _this5 = this;

        var service = bt.getService(UUID_SERVICE);
        service.getCharacteristic(UUID_BUTTON_READ_WRITE_NOTIFY).read().then(function (characteristic) {
          _this5._parseChar("this.convertStringToByteArray(characteristic.value)");
        }).catch(function (err) {});
      }
    }, {
      key: "_getBatteryValue",
      value: function _getBatteryValue() {
        var _this6 = this;

        if (_reactNative.Platform.OS === 'android') {
          var service = bt.getService('0000180f-0000-1000-8000-00805f9b34fb');
          service.getCharacteristic('00002a19-0000-1000-8000-00805f9b34fb').read().then(function (characteristic) {
            _this6.setState({
              battery: parseInt(characteristic.value, 16)
            });
          }).catch(function (err) {});
        } else {
          var _service = bt.getService('180F');

          _service.getCharacteristic('2A19').read().then(function (characteristic) {
            _this6.setState({
              battery: parseInt(characteristic.value, 16)
            });
          }).catch(function (err) {});
        }
      }
    }, {
      key: "enableNotify",
      value: function enableNotify() {
        var _this7 = this;

        bt.getService(UUID_SERVICE).getCharacteristic(UUID_BUTTON_READ_WRITE_NOTIFY).setNotify(true).then(function (res) {
          _this7.setState({
            testCharNotify: true
          });

          _this7.addLog("\u5F00\u542F\u7279\u5F81\u503C\u901A\u77E5\u6210\u529F");

          Alert.alert("\u5F00\u542F\u7279\u5F81\u503C\u901A\u77E5\u6210\u529F");
        }).catch(function (err) {
          _this7.setState({
            testCharNotify: false
          });

          _this7.addLog("\u5F00\u542F\u7279\u5F81\u503C\u901A\u77E5\u5931\u8D25\uFF1A" + JSON.stringify(err));
        });
      }
    }, {
      key: "resetWeight",
      value: function resetWeight() {
        var value = '55AA00050100';
        var check = 0;
        var byteArry = this.convertStringToByteArray(value);
        byteArry.map(function (item, index) {
          check += parseInt(item.replace('0x', ''), 16);
        });
        var checkValue = parseInt(check.toString(), 10);
        value += checkValue.toString(16).substr(checkValue.toString(16).length - 2, checkValue.toString(16).length);
        value += 'FE';
        bt.securityLock.encryptMessage(value).then(function (hex) {
          bt.getService(UUID_SERVICE).getCharacteristic(UUID_LED_READ_WRITE).writeWithoutResponse(hex);
        }).then(function (res) {}).catch(function (err) {});
      }
    }, {
      key: "setTogUnit",
      value: function setTogUnit() {
        var value = '55AA00040100';
        var check = 0;
        var byteArry = this.convertStringToByteArray(value);
        byteArry.map(function (item, index) {
          check += parseInt(item.replace('0x', ''), 16);
        });
        var checkValue = parseInt(check.toString(), 10);
        value += checkValue.toString(16).substr(checkValue.toString(16).length - 2, checkValue.toString(16).length);
        value += 'FE';
        bt.securityLock.encryptMessage(value).then(function (hex) {
          bt.getService(UUID_SERVICE).getCharacteristic(UUID_LED_READ_WRITE).writeWithoutResponse(hex);
        }).then(function (res) {}).catch(function (err) {});
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.subscription.remove();

        this._s1.remove();

        this._s2.remove();

        this._s3.remove();

        this._s4.remove();

        this._s5.remove();

        this._s6.remove();

        this._s7.remove();

        this._s8.remove();

        if (this.listenerMenu) {
          this.listenerMenu.remove();
        }

        if (this.listenerGUnit) {
          this.listenerGUnit.remove();
        }

        if (this.listenerRefresh) {
          this.listenerRefresh.remove();
        }

        if (this.SyncNotesListener) {
          this.SyncNotesListener.remove();
        }

        if (this.SyncClassifyListener) {
          this.SyncClassifyListener.remove();
        }

        if (this.SyncMenuListener) {
          this.SyncMenuListener.remove();
        }

        if (bt.isConnected) {
          this.disconnect();
        }

        this._s1.remove();

        this._s2.remove();

        this._s3.remove();

        this._s4.remove();

        this._s5.remove();

        this._s6.remove();

        this._s7.remove();

        this._s8.remove();
      }
    }, {
      key: "_showPrivacyDialog",
      value: function _showPrivacyDialog() {
        var _this8 = this;

        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.s_license_privacy"]
        };

        _miotSdk.Service.smarthome.batchGetDeviceDatas([params]).then(function (res) {
          Object.keys(res).map(function (key, index) {
            if (index == 0) {
              if (res[key]["prop.s_license_privacy"] == null || res[key]["prop.s_license_privacy"] == '') {
                _this8._LicenseAndPrivacy();
              }
            }
          });
        });
      }
    }, {
      key: "_LicenseAndPrivacy",
      value: function _LicenseAndPrivacy() {
        var _this9 = this;

        _miotSdk.Service.getServerName().then(function (country) {
          var language = _miotSdk.Resources.getLanguage();

          var countryCode = country.countryCode;

          if (!countryCode) {
            countryCode = 'GB';
          }

          if (!language) {
            language = 'en';
          }

          countryCode = countryCode.toUpperCase();
          language = language.toLowerCase();

          switch (countryCode) {
            case 'CN':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[20]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[21])
                  });
                }

                break;
              }

            case 'CA':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[22]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[23])
                  });
                }

                break;
              }

            case 'ES':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[24]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[25])
                  });
                }

                break;
              }

            case 'PT':
              {
                break;
              }

            case 'NL':
              {
                break;
              }

            case 'FR':
            case 'NG':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[26]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[27])
                  });
                }

                break;
              }

            case 'IT':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[28]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[29])
                  });
                }

                break;
              }

            case 'CH':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[30]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[31])
                  });
                }

                break;
              }

            case 'NO':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[32]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[33])
                  });
                }

                break;
              }

            case 'DK':
              {
                break;
              }

            case 'SE':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[34]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[35])
                  });
                }

                break;
              }

            case 'FI':
              {
                break;
              }

            case 'PL':
              {
                break;
              }

            case 'DE':
            case 'AT':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[36]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[37])
                  });
                }

                break;
              }

            case 'IE':
            case 'GB':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                }

                break;
              }

            case 'UA':
              {
                break;
              }

            case 'BE':
              {
                break;
              }

            case 'HR':
              {
                if (language === 'en') {} else {}

                break;
              }

            case 'CZ':
              {
                if (language === 'en') {} else {}

                break;
              }

            case 'GR':
            case 'CY':
              {
                break;
              }

            case 'BG':
              {
                break;
              }

            case 'LU':
              {
                break;
              }

            case 'HU':
              {
                break;
              }

            case 'LT':
              {
                break;
              }

            case 'RU':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[38]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[39])
                  });
                }

                break;
              }

            case 'BY':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[38]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[39])
                  });
                }

                break;
              }

            case 'JP':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[40]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[41])
                  });
                }

                break;
              }

            case 'KR':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[42]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[43])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[44]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[45])
                  });
                }

                break;
              }

            case 'ID':
              {
                break;
              }

            case 'MY':
              {
                break;
              }

            case 'SG':
              {
                break;
              }

            case 'TH':
              {
                break;
              }

            case 'VN':
              {
                break;
              }

            case 'MM':
              {
                break;
              }

            case 'PK':
            case 'PH':
            case 'AU':
            case 'NZ':
            case 'KE':
              {
                break;
              }

            case 'CL':
            case 'PE':
            case 'MX':
            case 'CO':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[46]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[47])
                  });
                }

                break;
              }

            case 'BR':
              {
                break;
              }

            case 'EG':
            case 'MA':
            case 'AE':
            case 'SA':
            case 'QA':
            case 'OM':
            case 'IQ':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[48]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[49])
                  });
                }

                break;
              }

            case 'IL':
              {
                break;
              }

            case 'TR':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[50]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[51])
                  });
                }

                break;
              }

            case 'TW':
              {
                if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[52]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[53])
                  });
                }

                break;
              }

            case 'US':
              {
                if (language === 'es') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[46]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[47])
                  });
                } else if (language === 'en') {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[54]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[55])
                  });
                } else {
                  _this9.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[56]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[57])
                  });
                }

                break;
              }

            case 'RO':
              {
                break;
              }

            case 'SK':
              {
                break;
              }

            case 'SI':
              {
                break;
              }

            case 'EE':
              {
                break;
              }

            case 'LV':
              {
                break;
              }

            default:
              {
                _this9.setState({
                  licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                  policyUrl: _$$_REQUIRE(_dependencyMap[19])
                });
              }
          }

          _miotSdk.Host.ui.openPrivacyLicense(_HomeLocalizableString.default.license, _this9.state.licenseUrl, _HomeLocalizableString.default.privacy, _this9.state.policyUrl).then(function (res) {
            if (res) {
              _miotSdk.Service.smarthome.batchSetDeviceDatas([{
                'did': _miotSdk.Device.deviceID,
                'props': {
                  "prop.s_license_privacy": "1"
                }
              }]).then(function (value) {});
            }
          }).catch(function (err) {});
        });
      }
    }, {
      key: "generateArrayFromRange",
      value: function generateArrayFromRange(start, finish) {
        return Array.apply(null, Array(finish - start + 1)).map(function (_, i) {
          return start + i;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this10 = this;

        var topView = this._topView();

        var menuEditTopView = this._menuEditTopView();

        return _react.default.createElement(_reactNative.ImageBackground, {
          style: styles.imageBg
        }, this.state.menuEdit ? menuEditTopView : topView, this.state.selectTab == 0 ? this._coffeeView() : this.state.selectTab == 1 ? this._measureView() : this._mineView(), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.coffee_ratio_dialog_visible,
          title: _HomeLocalizableString.default.enter_the_proportion_of_coffee,
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this10.setState({
                coffee_ratio_dialog_visible: false
              });
            }
          }, {
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            style: {
              color: '#FEC200'
            },
            text: _HomeLocalizableString.default.save,
            callback: function callback(result) {
              if (temp_coffee_ratio <= 30 && temp_coffee_ratio >= 5) {
                _this10.setState({
                  coffee_ratio: temp_coffee_ratio
                });

                var key = "coffee_ratio___" + _miotSdk.Device.deviceID;

                _miotSdk.Host.storage.set(key, temp_coffee_ratio);

                _this10.setState({
                  coffee_ratio_dialog_visible: false
                });
              }
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            height: 100,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'column'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, "1\uFF1A"), _react.default.createElement(_reactNative.TextInput, {
          maxLength: 2,
          style: {
            color: '#FEC200',
            textAlign: 'center',
            width: 50,
            borderBottomColor: '#aaa',
            borderBottomWidth: 1
          },
          returnKeyType: 'done',
          onChangeText: function onChangeText(text) {
            var newText = text.replace(' ', '');
            temp_coffee_ratio = parseInt(newText);
          },
          defaultValue: "" + this.state.coffee_ratio,
          keyboardType: 'numeric'
        })), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            marginTop: 10,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.range, "1:5 - 1:30"))), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.input_food_dialog_visible,
          title: _HomeLocalizableString.default.enter_the_name_of_food,
          onDismiss: function onDismiss(_) {
            _this10.setState({
              input_food_dialog_visible: false
            });
          },
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this10.setState({
                input_food_dialog_visible: false
              });
            }
          }, {
            text: _HomeLocalizableString.default.save,
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            callback: function callback(result) {
              _reactNative.Keyboard.dismiss();

              if (result.textInputArray[0] == '') {
                _this10._editDataNotes(_this10.state.no_name, _this10.state.lastSelectItemId);

                _this10.setState({
                  input_food_dialog_visible: false
                });

                return;
              }

              if (result.textInputArray[0].length > 7) {
                _this10.onShowToast(_HomeLocalizableString.default.name_is_to_long);

                return;
              }

              _this10._editDataNotes(result.textInputArray[0], _this10.state.lastSelectItemId);

              _this10.setState({
                input_food_dialog_visible: false
              });
            }
          }],
          inputs: [{
            textInputProps: {
              maxLength: 20,
              autoFocus: true,
              returnKeyType: 'done'
            },
            defaultValue: this.state.food_name,
            type: 'DELETE'
          }]
        }), _react.default.createElement(_ui.LoadingDialog, {
          title: _HomeLocalizableString.default.loading,
          visible: this.state.loadingVis,
          cancelable: true
        }));
      }
    }, {
      key: "_topView",
      value: function _topView() {
        var _this11 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            flexDirection: 'row',
            backgroundColor: '#fbfbfb',
            width: this.mScreenWidth
          },
          onLayout: function onLayout(event) {
            return _this11.onTopLayout(event);
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            flex: 1,
            alignItems: 'center'
          },
          onPress: function onPress() {
            _this11.setTogUnit();

            _this11.setState({
              selectTab: 0
            });

            _this11.setState({
              coffee_step: 1
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            margin: 15,
            color: this.state.selectTab == 0 ? '#000000' : '#d8d7d6'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.coffee), _react.default.createElement(_reactNative.View, {
          style: (0, _objectSpread2.default)({
            width: 50,
            height: 2,
            backgroundColor: this.state.selectTab == 0 ? '#ffc500' : '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            flex: 1,
            alignItems: 'center'
          },
          onPress: function onPress() {
            _this11.setState({
              selectTab: 1
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            margin: 15,
            color: this.state.selectTab == 1 ? '#000000' : '#d8d7d6'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.balance), _react.default.createElement(_reactNative.View, {
          style: (0, _objectSpread2.default)({
            width: 50,
            height: 2,
            backgroundColor: this.state.selectTab == 1 ? '#ffc500' : '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            flex: 1,
            alignItems: 'center'
          },
          onPress: function onPress() {
            _this11.setState({
              selectTab: 2
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            margin: 15,
            color: this.state.selectTab == 2 ? '#000000' : '#d8d7d6'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.mine), _react.default.createElement(_reactNative.View, {
          style: (0, _objectSpread2.default)({
            width: 50,
            height: 2,
            backgroundColor: this.state.selectTab == 2 ? '#ffc500' : '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        })));
      }
    }, {
      key: "_bottomView",
      value: function _bottomView() {
        var _this12 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this12.props.navigation.navigate('DataNotes');
          },
          style: {
            flex: 1,
            width: this.mScreenWidth,
            alignItems: 'center',
            borderRadius: 10,
            marginBottom: 40,
            flexDirection: 'row',
            paddingBottom: 35,
            paddingTop: 30
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth - 40,
            marginLeft: 20,
            marginRight: 20,
            resizeMode: 'contain',
            position: 'absolute'
          },
          source: _$$_REQUIRE(_dependencyMap[58])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            marginLeft: 40,
            marginRight: 40,
            flexDirection: 'row',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 32,
            color: '#403A35',
            justifyContent: 'center',
            fontWeight: 'bold'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.lastSaveWeight), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 19,
            color: '#403A35',
            justifyContent: 'center',
            fontWeight: 'bold',
            marginTop: 15,
            marginLeft: 3
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.lastSaveUnit), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this12.state.lastSelectItemId != 0) _this12.setState({
              input_food_dialog_visible: true
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 18,
            color: this.state.food_name == '未命名' || this.state.food_name == 'Unnamed' ? '#949290' : '#403A35',
            justifyContent: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.food_name.length > 10 ? this.state.food_name.slice(0, 10) + "..." : this.state.food_name))));
      }
    }, {
      key: "_onlineView",
      value: function _onlineView() {
        var _this13 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 3,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            alignItems: 'center',
            marginTop: 28,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[59])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'column',
            alignItems: 'center',
            paddingBottom: 40,
            position: 'absolute',
            justifyContent: 'center'
          }
        }, this.state.weightOver ? _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 60,
            fontWeight: 'bold',
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, "-- --") : _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 60,
            fontWeight: 'bold',
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.negative ? '-' : '', this.state.weight == 0 ? '0.0' : this.state.unit == 'g' ? this._doValue() : this.state.unit == 'ml' ? this._doValue() : this.state.unit == 'oz' ? this._getOzValue() : this._getLbOzValue()), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.unit))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            borderRadius: 30,
            alignItems: 'center',
            backgroundColor: '#ffb61b'
          },
          onPress: function onPress() {
            _this13._insertDataNotes(_this13._getWeight(), _this13.state.unit, escape(_this13.state.no_name), new Date().getTime());

            _this13._getLastSaveData();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            marginLeft: 50,
            marginRight: 50,
            marginTop: 15,
            marginBottom: 15,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.save)));
      }
    }, {
      key: "_getWeight",
      value: function _getWeight() {
        return (this.state.negative ? '-' : '') + (this.state.weight == 0 ? '0.0' : this.state.unit == 'g' ? this._doValue() : this.state.unit == 'ml' ? this._doValue() : this.state.unit == 'oz' ? this._getOzValue() : this._getLbOzValue());
      }
    }, {
      key: "_offlineView",
      value: function _offlineView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            alignItems: 'center',
            flex: 3,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[60])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: 240,
            flexDirection: 'column',
            alignItems: 'center',
            paddingBottom: 40,
            position: 'absolute',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            width: 240,
            fontSize: 25,
            color: '#a3a09e',
            textAlign: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.dev_not_connected), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            width: 240,
            fontSize: 15,
            color: '#a3a09e',
            textAlign: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.connect_tips)));
      }
    }, {
      key: "_measureView",
      value: function _measureView() {
        var mainView = this.state.btConnect ? this._onlineView() : this._offlineView();

        var bottomView = this._bottomView();

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, mainView, bottomView);
      }
    }, {
      key: "_coffeeView",
      value: function _coffeeView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.state.coffee_step == 1 ? null : this._coffeeView1(), this._coffeeView2(), this._coffeeView3(), this._coffeeView4());
      }
    }, {
      key: "_coffeeView1",
      value: function _coffeeView1() {
        var _this14 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            marginTop: 10,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.hand_made_coffee), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#ffd33d'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold',
            marginLeft: 5
          })
        }, "1:", this.state.coffee_ratio), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            temp_coffee_ratio = parseInt(_this14.state.coffee_ratio);

            _this14.setState({
              coffee_ratio_dialog_visible: true
            });
          },
          style: {
            marginLeft: 5
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            resizeMode: 'contain',
            width: 20,
            height: 20
          },
          source: _$$_REQUIRE(_dependencyMap[61])
        })));
      }
    }, {
      key: "_coffeeView2",
      value: function _coffeeView2() {
        return !this.state.btConnect ? _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            alignItems: 'center',
            marginTop: 55,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[60])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: 240,
            flexDirection: 'column',
            alignItems: 'center',
            paddingBottom: 40,
            position: 'absolute',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            width: 240,
            color: '#a3a09e',
            textAlign: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.dev_not_connected), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            width: 240,
            color: '#a3a09e',
            textAlign: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.connect_tips))) : _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            alignItems: 'center',
            marginTop: 28,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[59])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: 240,
            flexDirection: 'column',
            alignItems: 'center',
            paddingBottom: 40,
            position: 'absolute',
            justifyContent: 'center'
          }
        }, this.state.weightOver ? _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 60,
            fontWeight: 'bold',
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, "-- --") : _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 60,
            fontWeight: 'bold',
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.negative ? '-' : '', this.state.weight == 0 ? '0.0' : this._doValue()), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, "g")));
      }
    }, {
      key: "_coffeeView3",
      value: function _coffeeView3() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 100,
            height: 100,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[62])
        }), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          })
        }, this.state.coffee_step == 1 ? _HomeLocalizableString.default.add_coffee_tips : this.state.weight <= 0 ? _HomeLocalizableString.default.add_coffee_tips2 : _HomeLocalizableString.default.recommend_water_flow(parseInt(this.state.coffee_ratio * this._doValue()))));
      }
    }, {
      key: "_coffeeView4",
      value: function _coffeeView4() {
        var _this15 = this;

        return this.state.btConnect ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this15.state.coffee_step == 1) {
              _this15.resetWeight();

              _this15.setState({
                coffee_step: 2
              });
            } else {
              _this15.resetWeight();

              _this15.props.navigation.navigate('WaterFlooding', {
                weight: 0,
                weightOver: _this15.state.weightOver,
                negative: _this15.state.negative,
                unit: _this15.state.unit,
                coffee_weight: _this15._doValue(),
                coffee_ratio: _this15.state.coffee_ratio,
                recommend_water: parseInt(_this15.state.coffee_ratio * _this15._doValue())
              });

              _this15.setState({
                coffee_step: 1
              });
            }
          },
          style: {
            paddingTop: 15,
            paddingBottom: 15,
            width: '50%',
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 100,
            borderColor: '#ffd33d',
            borderWidth: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            textAlign: 'center',
            color: '#ffd33d'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.coffee_step == 1 ? _HomeLocalizableString.default.next : _HomeLocalizableString.default.start_add_water))) : null;
      }
    }, {
      key: "_doValue",
      value: function _doValue() {
        if (this.state.weight / 10.0 >= 1000) {
          return Math.round(this.state.weight / 10.0);
        } else {
          return this.state.weight / 10.0;
        }
      }
    }, {
      key: "_getOzValue",
      value: function _getOzValue() {
        return (this._doValue() / 28.35).toFixed(1);
      }
    }, {
      key: "_getLbValue",
      value: function _getLbValue() {
        return ((this._doValue() / 28.35).toFixed(1) / 16).toFixed(1);
      }
    }, {
      key: "_getLbValue2",
      value: function _getLbValue2() {
        return (this._doValue() / 28.35).toFixed(1) / 16;
      }
    }, {
      key: "_getLbOzValue",
      value: function _getLbOzValue() {
        var lb = this._getLbValue2();

        var lb2 = this._getLbValue();

        var lbInt = parseInt(lb.toString());
        var lbInt2 = parseInt(lb2.toString());

        if (lbInt2 == 0) {
          return lbInt2 + ":" + (lb * 16.0).toFixed(1);
        } else {
          return lbInt2 + ":" + (lb % lbInt * 16).toFixed(1);
        }
      }
    }, {
      key: "_mineView",
      value: function _mineView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#f2f2f2'
          }
        }, this.state.menuAllArray.length > 0 ? this._menuView() : this._menuNoneView());
      }
    }, {
      key: "_menuNoneView",
      value: function _menuNoneView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, this._menuAddBtnView(), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 20
          })
        }, _HomeLocalizableString.default.none_food_menu_data), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 15
          })
        }, _HomeLocalizableString.default.click_add_food_menu));
      }
    }, {
      key: "_menuView",
      value: function _menuView() {
        var _this16 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.ScrollView, {
          scrollEventThrottle: 16,
          onScroll: this._contentViewScroll.bind(this),
          onScrollBeginDrag: this._onScrollBeginDrag,
          style: {
            flex: 1
          }
        }, this.state.menuArray.map(function (item, index) {
          return _this16._menuItemView(item, index);
        })), this.state.menuEdit ? null : this._menuAddView(), this.state.menuEdit ? this._menuBoottomEditView() : this._menuBottomView());
      }
    }, {
      key: "_menuItemView",
      value: function _menuItemView(item, index) {
        var _this17 = this;

        var date = new Date(parseInt(item.time));
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            if (_this17.state.menuEdit) {
              var tempArray = _this17.state.menuArray;
              var selectItemO = tempArray[index];
              var selectItem = {
                menuName: selectItemO.menuName,
                imageBase64: selectItemO.imageBase64,
                classify: selectItemO.classify,
                dataArray: selectItemO.dataArray,
                timeArray: selectItemO.timeArray,
                evaluateLevel: selectItemO.evaluateLevel,
                evaluateValue: selectItemO.evaluateValue,
                time: selectItemO.time,
                check: !selectItemO.check
              };
              tempArray.splice(index, 1, selectItem);

              _this17.setState({
                menuArray: tempArray
              });
            } else {
              _this17.props.navigation.navigate('CookbookDetail', {
                itemData: item
              });
            }
          },
          onLongPress: function onLongPress() {
            if (!_this17.state.menuEdit) {
              _this17.setState({
                menuEdit: true
              });
            }
          },
          delayLongPress: 800,
          key: index,
          style: {
            width: this.mScreenWidth - 40,
            marginTop: 15,
            marginLeft: 20,
            marginRight: 20,
            borderRadius: 15,
            backgroundColor: '#fff',
            flexDirection: 'row',
            paddingTop: 10,
            paddingLeft: 10,
            paddingBottom: 10
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth / 4,
            height: this.mScreenWidth / 4,
            resizeMode: 'cover',
            borderRadius: 10,
            overflow: 'hidden'
          },
          source: item.imageBase64 ? item.imageBase64 == 'coffee' ? _$$_REQUIRE(_dependencyMap[63]) : item.imageBase64 : _$$_REQUIRE(_dependencyMap[64])
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: 10
          }
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            width: this.mScreenWidth * 0.3333333333333333
          })
        }, item.menuName), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 5
          })
        }, date.getFullYear() + "." + (date.getMonth() + 1) + "." + date.getDate()), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 10,
            width: this.mScreenWidth / 2
          })
        }, item.evaluateValue), this._getEvaluateLevelView(parseInt(item.evaluateLevel) + 1)), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            top: 10,
            right: 0,
            backgroundColor: item.classify ? item.classify.bgColor : '#443e39',
            borderBottomLeftRadius: 10,
            borderTopLeftRadius: 10,
            paddingLeft: 7,
            paddingRight: 7,
            paddingTop: 5,
            paddingBottom: 5
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 11,
            color: '#fff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          })),
          maxLength: 6
        }, item.classify ? unescape(item.classify.name).length > 6 ? unescape(item.classify.name).slice(0, 6) + "..." : unescape(item.classify.name) : _HomeLocalizableString.default.not_classify)), this.state.menuEdit ? _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            top: 15,
            left: 15
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            resizeMode: 'contain',
            width: 20,
            height: 20
          },
          source: item.check ? _$$_REQUIRE(_dependencyMap[65]) : _$$_REQUIRE(_dependencyMap[66])
        })) : null);
      }
    }, {
      key: "_getEvaluateLevelView",
      value: function _getEvaluateLevelView(level) {
        var array = [];

        for (var i = 0; i < level; i++) {
          array.push(i);
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            marginTop: 10
          }
        }, array.map(function (item, index) {
          return _react.default.createElement(_reactNative.Image, {
            style: {
              width: 25,
              height: 25,
              resizeMode: 'contain'
            },
            key: index,
            source: _$$_REQUIRE(_dependencyMap[67])
          });
        }));
      }
    }, {
      key: "_menuAddView",
      value: function _menuAddView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            right: 0,
            bottom: 0,
            flexDirection: 'row',
            paddingLeft: 10,
            paddingRight: 10,
            marginLeft: 10,
            marginBottom: 70
          }
        }, this._menuAddBtnView());
      }
    }, {
      key: "_menuBottomView",
      value: function _menuBottomView() {
        var _this18 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            bottom: 0,
            width: this.mScreenWidth
          }
        }, this.state.classifyViewShow ? _react.default.createElement(_reactNative.ScrollView, {
          style: {
            backgroundColor: '#fff',
            width: this.mScreenWidth
          },
          showsHorizontalScrollIndicator: false,
          horizontal: true
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 30,
            paddingTop: 5,
            paddingLeft: 10,
            paddingRight: 10,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, this.state.menuClassifyArray.map(function (item, index) {
          return _this18._menuClassifyItemView(item, index);
        }))) : null);
      }
    }, {
      key: "_menuBoottomEditView",
      value: function _menuBoottomEditView() {
        var _this19 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            bottom: 20,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this19.setState({
              menuEdit: false
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[68])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this19._deleteMenuData();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[69])
        })));
      }
    }, {
      key: "_menuClassifyItemView",
      value: function _menuClassifyItemView(item, index) {
        var _this20 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var array = _this20._getMenuDataByClassifyId(item.id);

            _this20.setState({
              menuArray: array
            });
          },
          key: index,
          style: {
            backgroundColor: item.bgColor,
            borderRadius: 25,
            paddingLeft: 15,
            paddingRight: 15,
            paddingTop: 5,
            paddingBottom: 5,
            marginRight: 10
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 13,
            color: '#fff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          })),
          numberOfLines: 1
        }, item.name.length > 6 ? item.name.slice(0, 6) + "..." : item.name));
      }
    }, {
      key: "_menuAddBtnView",
      value: function _menuAddBtnView() {
        var _this21 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 12
          },
          onPress: function onPress() {
            _this21.props.navigation.navigate('DataNotes');
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[70])
        }));
      }
    }, {
      key: "_menuEditTopView",
      value: function _menuEditTopView() {
        var _this22 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            width: this.mScreenWidth,
            height: this.state.topViewHeight,
            justifyContent: 'center',
            alignItems: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.delect_food_menu)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 20
          },
          onPress: function onPress() {
            var tempArray = [];

            _this22.state.menuArray.map(function (item, index) {
              tempArray.push({
                menuName: item.menuName,
                imageBase64: item.imageBase64,
                classify: item.classify,
                dataArray: item.dataArray,
                timeArray: item.timeArray,
                evaluateLevel: item.evaluateLevel,
                evaluateValue: item.evaluateValue,
                time: item.time,
                check: true
              });
            });

            _this22.setState({
              menuArray: tempArray
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.all_select))));
      }
    }, {
      key: "_contentViewScroll",
      value: function _contentViewScroll(e) {
        var offsetY = e.nativeEvent.contentOffset.y;

        if (this.scrollViewStartOffsetY > offsetY) {
          this.scrollViewScrollDirection = SCROLLVIEW_DIRECTION_UP;
          this.setState({
            classifyViewShow: true
          });
        } else if (this.scrollViewStartOffsetY < offsetY) {
          this.scrollViewScrollDirection = SCROLLVIEW_DIRECTION_DOWN;
          this.setState({
            classifyViewShow: false
          });
        }
      }
    }, {
      key: "_getMenuData",
      value: function _getMenuData() {
        var _this23 = this;

        var responseData = [];
        var tempArray = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.menuFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push({
              menuName: unescape(item.menuName),
              imageBase64: item.imageBase64,
              classify: item.classify,
              dataArray: item.dataArray,
              timeArray: item.timeArray,
              evaluateLevel: item.evaluateLevel,
              evaluateValue: unescape(item.evaluateValue),
              time: item.time,
              check: false
            });
          });
          tempArray.reverse();

          _this23.setState({
            menuArray: tempArray,
            menuAllArray: tempArray
          });

          menuAllData = tempArray;
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_deleteMenuData",
      value: function _deleteMenuData() {
        var _this24 = this;

        var dataKeyArray = [];
        this.state.menuArray.map(function (item, index) {
          if (item.check) {
            dataKeyArray.push(item.time);
          }
        });
        if (dataKeyArray.length == 0) return;
        this.setState({
          loadingVis: true
        });
        var responseData = [];
        var tempArray = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.menuFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            var flag = _this24._menuDataInArray(dataKeyArray, item.time);

            if (!flag) {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.menuFileName, saveData).then(function (r) {
            _this24._getMenuData();

            _this24.setState({
              loadingVis: false,
              menuEdit: false
            });

            _DataHelper.default._uploadDataMenuFileNameToFDS();
          }).catch(function (err) {
            _this24.onShowToast(_HomeLocalizableString.default.add_failed);

            _this24.setState({
              loadingVis: false
            });
          });
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_menuDataInArray",
      value: function _menuDataInArray(keyArray, time) {
        var flag = false;
        keyArray.map(function (item, index) {
          if (parseInt(item) == parseInt(time)) flag = true;
        });
        return flag;
      }
    }, {
      key: "_getClassifyData",
      value: function _getClassifyData() {
        var _this25 = this;

        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.classifyFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          var tempClassifyArray = [];
          tempClassifyArray.push({
            name: _HomeLocalizableString.default.all,
            bgColor: '#ffd33d',
            id: -1,
            check: true
          });
          var isHaveCoffee = false;
          responseData.map(function (item, index) {
            if (item.id == 999) {
              if (!isHaveCoffee) {
                tempClassifyArray.push({
                  name: unescape(_HomeLocalizableString.default.coffee),
                  bgColor: item.color,
                  id: item.id,
                  check: false
                });
              }

              isHaveCoffee = true;
            } else {
              tempClassifyArray.push({
                name: unescape(item.name),
                bgColor: item.color,
                id: item.id,
                check: false
              });
            }
          });

          _this25.setState({
            menuClassifyArray: tempClassifyArray
          });
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_getMenuDataByClassifyId",
      value: function _getMenuDataByClassifyId(id) {
        var tempArray = [];

        if (parseInt(id) == -1) {
          tempArray = menuAllData;
        } else {
          menuAllData.map(function (item, index) {
            if (item.classify != null) if (parseInt(item.classify.id) == parseInt(id)) {
              tempArray.push(item);
            }
          });
        }

        return tempArray;
      }
    }, {
      key: "_insertDataNotes",
      value: function _insertDataNotes(unitValue, unit, value, date) {
        var _this26 = this;

        var tempArray = [];
        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push(item);
          });
          tempArray.push({
            unitValue: unitValue,
            unit: unit,
            value: value,
            date: date
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.dataNotesFileName, saveData).then(function (r) {
            _this26._getLastSaveData();

            _DataHelper.default._uploadDataNotesFileNameToFDS();
          }).catch(function (err) {});
        }).catch(function (isSuccess) {
          tempArray.push({
            unitValue: unitValue,
            unit: unit,
            value: value,
            date: date
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.dataNotesFileName, saveData).then(function (r) {
            _this26._uploadFDSFile(_DataHelper.default.dataNotesFileName);

            _this26._getLastSaveData();
          }).catch(function (err) {});
        });
      }
    }, {
      key: "_getLastSaveData",
      value: function _getLastSaveData() {
        var _this27 = this;

        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          var dateArray = [];
          responseData.map(function (item, index) {
            dateArray.push(item);
          });

          if (dateArray.length > 0) {
            _this27.setState({
              lastSelectItemId: dateArray[dateArray.length - 1].date
            });

            _this27.setState({
              food_name: unescape(dateArray[dateArray.length - 1].value)
            });

            _this27.setState({
              lastSaveWeight: dateArray[dateArray.length - 1].unitValue
            });

            _this27.setState({
              lastSaveUnit: dateArray[dateArray.length - 1].unit
            });
          } else {
            _this27.setState({
              lastSelectItemId: 0
            });

            _this27.setState({
              food_name: _this27.state.no_name
            });

            _this27.setState({
              lastSaveWeight: '0.0'
            });

            _this27.setState({
              lastSaveUnit: 'g'
            });
          }
        }).catch(function (isSuccess) {
          _this27.setState({
            lastSelectItemId: 0
          });

          _this27.setState({
            food_name: _this27.state.no_name
          });

          _this27.setState({
            lastSaveWeight: '0.0'
          });

          _this27.setState({
            lastSaveUnit: 'g'
          });
        });
      }
    }, {
      key: "_editDataNotes",
      value: function _editDataNotes(name, selectItemId) {
        var _this28 = this;

        var responseData = [];
        var tempArray = [];
        var tagIndex = -1;

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            if (parseInt(selectItemId) == parseInt(item.date)) {
              tagIndex = index;
            }
          });
          responseData.map(function (item, index) {
            if (tagIndex == index) {
              item.value = escape(name);
              tempArray.push(item);
            } else {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this28._saveDateNotes(saveData);
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_saveDateNotes",
      value: function _saveDateNotes(saveData) {
        var _this29 = this;

        _miotSdk.Host.file.writeFile(_DataHelper.default.dataNotesFileName, saveData).then(function (r) {
          _this29._getLastSaveData();

          _DataHelper.default._uploadDataNotesFileNameToFDS();
        }).catch(function (err) {});
      }
    }]);
    return Main;
  }(_BaseComponent2.default);

  exports.default = Main;

  Main.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        backgroundColor: navigation.state.params ? navigation.state.params.backgroundColor : '#ffffff',
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: 'back',
          onPress: function onPress(_) {
            return _miotSdk.Package.exit();
          }
        }],
        right: [{
          key: 'more',
          showDot: false,
          onPress: function onPress(_) {
            show = false;
            navigation.navigate('CommonSetting', {
              showDot: _showDot1
            });
            that.setState({
              showDot1: false
            });
          }
        }],
        title: navigation.state.params ? navigation.state.params.title : _miotSdk.Device.name,
        onPressTitle: function onPressTitle(_) {
          return undefined;
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    imageBg: {
      backgroundColor: '#fff',
      flex: 1,
      flexDirection: 'column',
      marginTop: 0
    },
    numberBg: {
      marginTop: 0,
      paddingLeft: 5,
      paddingRight: 5,
      marginLeft: 5,
      marginRight: 5
    },
    lineView: {
      backgroundColor: '#c5dbda',
      height: 1,
      marginLeft: 10
    },
    bottomItemView: {
      flexDirection: 'row',
      marginTop: 15
    },
    bottomSwitch: {
      marginRight: 17
    }
  });
},10004,[14305,14314,14320,14323,14371,14377,14374,14386,10007,10074,10297,10033,10037,10719,10755,10043,10046,10230,10049,10052,10055,10058,10061,10064,10067,10070,10073,10076,10079,10082,10085,10088,10091,10094,10097,10100,10103,10106,10109,10112,10115,10118,10121,10124,10127,10130,10133,10136,10139,10142,10145,10148,10151,10154,10157,10160,10163,10166,10169,10172,10175,10178,10181,10184,10187,10190,10193,10196,10199,10202,10205]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var BaseComponent = function (_React$Component) {
    (0, _inherits2.default)(BaseComponent, _React$Component);

    function BaseComponent(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BaseComponent);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BaseComponent).call(this, props));
      _this.mScreenWidth = _reactNative.Dimensions.get('window').width;
      _this.mScreenHeight = _reactNative.Dimensions.get('window').height;
      _this.mOnePixel = (_reactNative.PixelRatio.get() == 3 ? 2 : 1) / _reactNative.PixelRatio.get();

      _this.onBackClicked = function () {
        return false;
      };

      _this.onShowToast = function (message) {
        _reactNativeRootToast.default.show(message, {
          duration: _reactNativeRootToast.default.durations.LONG,
          position: _reactNative.Platform.select({
            ios: _reactNativeRootToast.default.positions.BOTTOM,
            android: _reactNativeRootToast.default.positions.CENTER
          }),
          shadow: true,
          backgroundColor: 'rgba(122,122,122,0.9)',
          textColor: '#fff',
          onShow: function onShow() {},
          onShown: function onShown() {},
          onHide: function onHide() {},
          onHidden: function onHidden() {}
        });
      };

      return _this;
    }

    (0, _createClass2.default)(BaseComponent, [{
      key: "getSize",
      value: function getSize(size) {
        return parseInt(this.mScreenWidth * size / 375);
      }
    }, {
      key: "componentWillMount",
      value: function componentWillMount() {
        if (_reactNative.Platform.OS === 'android') {
          _reactNative.BackHandler.addEventListener("back", this.onBackClicked);
        } else {}
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (_reactNative.Platform.OS === 'android') {
          _reactNative.BackHandler.removeEventListener("back", this.onBackClicked);
        } else {}
      }
    }]);
    return BaseComponent;
  }(_react.default.Component);

  var _default = BaseComponent;
  exports.default = _default;
},10007,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10010,10776]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ToastContainer: true
  };
  Object.defineProperty(exports, "ToastContainer", {
    enumerable: true,
    get: function get() {
      return _ToastContainer.default;
    }
  });
  exports.default = undefined;

  var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  Object.keys(_Toast).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _Toast[key];
      }
    });
  });

  var _ToastContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Toast.default;
  exports.default = _default;
},10010,[14305,14308,10013,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _reactNativeRootSiblings.default;
    }
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var Toast = function (_Component) {
    (0, _inherits2.default)(Toast, _Component);

    function Toast() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Toast);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._toast = null;

      _this.componentWillMount = function () {
        _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
          duration: 0
        })));
      };

      _this.componentWillReceiveProps = function (nextProps) {
        _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
          duration: 0
        })));
      };

      _this.componentWillUnmount = function () {
        _this._toast.destroy();
      };

      return _this;
    }

    (0, _createClass2.default)(Toast, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Toast;
  }(_react.Component);

  Toast.displayName = 'Toast';
  Toast.propTypes = _ToastContainer.default.propTypes;
  Toast.positions = _ToastContainer.positions;
  Toast.durations = _ToastContainer.durations;

  Toast.show = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      position: _ToastContainer.positions.BOTTOM,
      duration: _ToastContainer.durations.SHORT
    };
    return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
      visible: true
    }), message));
  };

  Toast.hide = function (toast) {
    if (toast instanceof _reactNativeRootSiblings.default) {
      toast.destroy();
    } else {}
  };

  var _default = Toast;
  exports.default = _default;
},10013,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10016,10034]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setSiblingWrapper = setSiblingWrapper;
  exports.RootSiblingParent = RootSiblingParent;
  exports.RootSiblingPortal = RootSiblingPortal;
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _ChildrenWrapper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _wrapRootComponent3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var siblingWrapper = function siblingWrapper(sibling) {
    return sibling;
  };

  function renderSibling(sibling) {
    return siblingWrapper(sibling);
  }

  if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
    _reactNative.AppRegistry.setWrapperComponentProvider(function () {
      return Root;
    });

    global.__rootSiblingsInjected = true;
  }

  function setSiblingWrapper(wrapper) {
    siblingWrapper = wrapper;
  }

  var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
      Root = _wrapRootComponent.Root,
      defaultManager = _wrapRootComponent.manager;

  var uuid = 0;
  var managerStack = [defaultManager];
  var inactiveManagers = new Set();

  function getActiveManager() {
    for (var i = managerStack.length - 1; i >= 0; i--) {
      var manager = managerStack[i];

      if (!inactiveManagers.has(manager)) {
        return manager;
      }
    }

    return defaultManager;
  }

  var RootSiblingsManager = function () {
    function RootSiblingsManager(element, callback) {
      (0, _classCallCheck2.default)(this, RootSiblingsManager);
      this.id = "root-sibling-" + (uuid + 1);
      this.manager = getActiveManager();
      this.manager.update(this.id, element, callback);
      uuid++;
    }

    (0, _createClass2.default)(RootSiblingsManager, [{
      key: "update",
      value: function update(element, callback) {
        this.manager.update(this.id, element, callback);
      }
    }, {
      key: "destroy",
      value: function destroy(callback) {
        this.manager.destroy(this.id, callback);
      }
    }]);
    return RootSiblingsManager;
  }();

  exports.default = RootSiblingsManager;

  function RootSiblingParent(props) {
    var inactive = props.inactive;

    var _useState = (0, _react.useState)(function () {
      var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
          parentRoot = _wrapRootComponent2.Root,
          parentManager = _wrapRootComponent2.manager;

      managerStack.push(parentManager);

      if (inactive) {
        inactiveManagers.add(parentManager);
      }

      return {
        Root: parentRoot,
        manager: parentManager
      };
    }),
        _useState2 = (0, _slicedToArray2.default)(_useState, 1),
        sibling = _useState2[0];

    (0, _react.useEffect)(function () {
      return function () {
        if (sibling) {
          var index = managerStack.indexOf(sibling.manager);

          if (index > 0) {
            managerStack.splice(index, 1);
          }
        }
      };
    }, [sibling]);

    if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
      inactiveManagers.add(sibling.manager);
    } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
      inactiveManagers.delete(sibling.manager);
    }

    var Parent = sibling.Root;
    return _react.default.createElement(Parent, null, props.children);
  }

  function RootSiblingPortal(props) {
    var _useState3 = (0, _react.useState)(function () {
      return new RootSiblingsManager(null);
    }),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
        sibling = _useState4[0];

    sibling.update(props.children);
    (0, _react.useEffect)(function () {
      if (sibling) {
        return function () {
          return sibling.destroy();
        };
      }
    }, [sibling]);
    return null;
  }
},10016,[14308,14305,14347,14320,14323,10297,10033,10019,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ChildrenWrapper;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function ChildrenWrapper(props) {
    return _react.default.createElement(_react.default.Fragment, null, props.children);
  }
},10019,[14305,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = wrapRootComponent;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _RootController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _RootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function wrapRootComponent(_Root, renderSibling) {
    var controller = new _RootController.default();
    return {
      Root: function Root(props) {
        return _react.default.createElement(_RootSiblings.default, {
          controller: controller,
          renderSibling: renderSibling
        }, _react.default.createElement(_Root, props));
      },
      manager: {
        update: function update(id, element, callback) {
          controller.update(id, element, callback);
        },
        destroy: function destroy(id, callback) {
          controller.destroy(id, callback);
        }
      }
    };
  }
},10022,[14305,10297,10025,10028]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.RootControllerChanges = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var RootControllerChanges;
  exports.RootControllerChanges = RootControllerChanges;

  (function (RootControllerChanges) {
    RootControllerChanges[RootControllerChanges["Insert"] = 0] = "Insert";
    RootControllerChanges[RootControllerChanges["Update"] = 1] = "Update";
    RootControllerChanges[RootControllerChanges["Remove"] = 2] = "Remove";
  })(RootControllerChanges || (exports.RootControllerChanges = RootControllerChanges = {}));

  var RootController = function () {
    function RootController() {
      (0, _classCallCheck2.default)(this, RootController);
      this.siblings = new Set();
      this.pendingActions = [];
      this.callback = null;
    }

    (0, _createClass2.default)(RootController, [{
      key: "update",
      value: function update(id, element, callback) {
        if (!this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Insert,
            element: element,
            updateCallback: callback
          });
          this.siblings.add(id);
        } else {
          this.emit(id, {
            change: RootControllerChanges.Update,
            element: element,
            updateCallback: callback
          });
        }
      }
    }, {
      key: "destroy",
      value: function destroy(id, callback) {
        if (this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Remove,
            element: null,
            updateCallback: callback
          });
          this.siblings.delete(id);
        } else if (callback) {
          callback();
        }
      }
    }, {
      key: "setCallback",
      value: function setCallback(callback) {
        this.callback = callback;
        this.pendingActions.forEach(function (_ref) {
          var id = _ref.id,
              action = _ref.action;
          callback(id, action);
        });
      }
    }, {
      key: "emit",
      value: function emit(id, action) {
        if (this.callback) {
          this.callback(id, action);
        } else {
          this.pendingActions.push({
            action: action,
            id: id
          });
        }
      }
    }]);
    return RootController;
  }();

  exports.default = RootController;
},10025,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RootController = _$$_REQUIRE(_dependencyMap[9]);

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.updatedSiblings = new Set();
      _this.siblingsPool = [];
      _this.state = {
        siblings: []
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.controller.setCallback(function (id, change) {
          setImmediate(function () {
            return _this2.commitChange(id, change);
          });
        });
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updatedSiblings.clear();
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.default.Fragment, null, this.props.children, this.renderSiblings());
      }
    }, {
      key: "commitChange",
      value: function commitChange(id, _ref) {
        var _this3 = this;

        var change = _ref.change,
            element = _ref.element,
            updateCallback = _ref.updateCallback;
        var siblings = Array.from(this.siblingsPool);
        var index = siblings.findIndex(function (sibling) {
          return sibling.id === id;
        });

        if (change === _RootController.RootControllerChanges.Remove) {
          if (index > -1) {
            siblings.splice(index, 1);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else if (change === _RootController.RootControllerChanges.Update) {
          if (index > -1) {
            siblings.splice(index, 1, {
              element: element,
              id: id
            });
            this.updatedSiblings.add(id);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else {
          if (index > -1) {
            siblings.splice(index, 1);
          }

          siblings.push({
            element: element,
            id: id
          });
          this.updatedSiblings.add(id);
        }

        this.siblingsPool = siblings;
        this.setState({
          siblings: siblings
        }, function () {
          return _this3.invokeCallback(updateCallback);
        });
      }
    }, {
      key: "invokeCallback",
      value: function invokeCallback(callback) {
        if (callback) {
          callback();
        }
      }
    }, {
      key: "renderSiblings",
      value: function renderSiblings() {
        var _this4 = this;

        return this.state.siblings.map(function (_ref2) {
          var id = _ref2.id,
              element = _ref2.element;
          return _react.default.createElement(_staticContainer.default, {
            key: "root-sibling-" + id,
            shouldUpdate: _this4.updatedSiblings.has(id)
          }, _this4.wrapSibling(element));
        });
      }
    }, {
      key: "wrapSibling",
      value: function wrapSibling(element) {
        var renderSibling = this.props.renderSibling;

        if (renderSibling) {
          return renderSibling(element);
        } else {
          return element;
        }
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
},10028,[14308,14305,14320,14323,14371,14377,14386,10297,10031,10025]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default() {
      (0, _classCallCheck2.default)(this, _default);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
    }

    (0, _createClass2.default)(_default, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;
        return child === null || child === false ? null : _react.Children.only(child);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    shouldUpdate: _propTypes.default.bool.isRequired
  };
},10031,[14305,14320,14323,14371,14377,14386,10297,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.durations = exports.positions = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TOAST_MAX_WIDTH = 0.8;
  var TOAST_ANIMATION_DURATION = 200;
  var positions = {
    TOP: 20,
    BOTTOM: -20,
    CENTER: 0
  };
  exports.positions = positions;
  var durations = {
    LONG: 3500,
    SHORT: 2000
  };
  exports.durations = durations;

  var styles = _reactNative.StyleSheet.create({
    defaultStyle: {
      position: 'absolute',
      left: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    containerStyle: {
      padding: 10,
      backgroundColor: '#000',
      opacity: 0.8,
      borderRadius: 5
    },
    shadowStyle: {
      shadowColor: '#000',
      shadowOffset: {
        width: 4,
        height: 4
      },
      shadowOpacity: 0.8,
      shadowRadius: 6,
      elevation: 10
    },
    textStyle: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var ToastContainer = function (_Component) {
    (0, _inherits2.default)(ToastContainer, _Component);

    function ToastContainer() {
      var _this;

      (0, _classCallCheck2.default)(this, ToastContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

      _this.componentDidMount = function () {
        _reactNative.Dimensions.addEventListener('change', _this._windowChanged);

        if (_this.props.keyboardAvoiding) {
          _reactNative.Keyboard.addListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
        }

        if (_this.state.visible) {
          _this._showTimeout = setTimeout(function () {
            return _this._show();
          }, _this.props.delay);
        }
      };

      _this.componentDidUpdate = function (prevProps) {
        if (_this.props.visible !== prevProps.visible) {
          if (_this.props.visible) {
            clearTimeout(_this._showTimeout);
            clearTimeout(_this._hideTimeout);
            _this._showTimeout = setTimeout(function () {
              return _this._show();
            }, _this.props.delay);
          } else {
            _this._hide();
          }

          _this.setState({
            visible: _this.props.visible
          });
        }
      };

      _this.componentWillUnmount = function () {
        _this._hide();

        _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

        _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
      };

      _this._animating = false;
      _this._root = null;
      _this._hideTimeout = null;
      _this._showTimeout = null;
      _this._keyboardHeight = 0;

      _this._windowChanged = function (_ref) {
        var window = _ref.window;

        _this.setState({
          windowWidth: window.width,
          windowHeight: window.height
        });
      };

      _this._keyboardDidChangeFrame = function (_ref2) {
        var endCoordinates = _ref2.endCoordinates;

        _this.setState({
          keyboardScreenY: endCoordinates.screenY
        });
      };

      _this._show = function () {
        clearTimeout(_this._showTimeout);

        if (!_this._animating) {
          clearTimeout(_this._hideTimeout);
          _this._animating = true;

          _this._root.setNativeProps({
            pointerEvents: 'auto'
          });

          _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: _this.props.opacity,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.out(_reactNative.Easing.ease)
          }).start(function (_ref3) {
            var finished = _ref3.finished;

            if (finished) {
              _this._animating = !finished;
              _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

              if (_this.props.duration > 0) {
                _this._hideTimeout = setTimeout(function () {
                  return _this._hide();
                }, _this.props.duration);
              }
            }
          });
        }
      };

      _this._hide = function () {
        clearTimeout(_this._showTimeout);
        clearTimeout(_this._hideTimeout);

        if (!_this._animating) {
          if (_this._root) {
            _this._root.setNativeProps({
              pointerEvents: 'none'
            });
          }

          if (_this.props.onHide) {
            _this.props.onHide(_this.props.siblingManager);
          }

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: 0,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.in(_reactNative.Easing.ease)
          }).start(function (_ref4) {
            var finished = _ref4.finished;

            if (finished) {
              _this._animating = false;
              _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
            }
          });
        }
      };

      var _window = _reactNative.Dimensions.get('window');

      _this.state = {
        visible: _this.props.visible,
        opacity: new _reactNative.Animated.Value(0),
        windowWidth: _window.width,
        windowHeight: _window.height,
        keyboardScreenY: _window.height
      };
      return _this;
    }

    (0, _createClass2.default)(ToastContainer, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var props = this.props;
        var windowWidth = this.state.windowWidth;
        var offset = props.position;
        var _this$state = this.state,
            windowHeight = _this$state.windowHeight,
            keyboardScreenY = _this$state.keyboardScreenY;
        var keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
        var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? keyboardHeight - offset : offset) : {
          top: 0,
          bottom: keyboardHeight
        };
        return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
          style: [styles.defaultStyle, position],
          pointerEvents: "box-none"
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
            _this2.props.hideOnPress ? _this2._hide() : null;
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.containerStyle, {
            marginHorizontal: windowWidth * 0.09999999999999998
          }, props.containerStyle, props.backgroundColor && {
            backgroundColor: props.backgroundColor
          }, {
            opacity: this.state.opacity
          }, props.shadow && styles.shadowStyle, props.shadowColor && {
            shadowColor: props.shadowColor
          }],
          pointerEvents: "none",
          ref: function ref(ele) {
            return _this2._root = ele;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, props.textStyle, props.textColor && {
            color: props.textColor
          }]
        }, this.props.children)))) : null;
      }
    }]);
    return ToastContainer;
  }(_react.Component);

  ToastContainer.displayName = 'ToastContainer';
  ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
    containerStyle: _reactNative.ViewPropTypes.style,
    duration: _propTypes.default.number,
    visible: _propTypes.default.bool,
    position: _propTypes.default.number,
    animation: _propTypes.default.bool,
    shadow: _propTypes.default.bool,
    keyboardAvoiding: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    opacity: _propTypes.default.number,
    shadowColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    textStyle: _reactNative.Text.propTypes.style,
    delay: _propTypes.default.number,
    hideOnPress: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onHide: _propTypes.default.func,
    onHidden: _propTypes.default.func,
    onShow: _propTypes.default.func,
    onShown: _propTypes.default.func
  });
  ToastContainer.defaultProps = {
    visible: false,
    duration: durations.SHORT,
    animation: true,
    shadow: true,
    position: positions.BOTTOM,
    opacity: 0.8,
    delay: 0,
    hideOnPress: true,
    keyboardAvoiding: true
  };
  var _default = ToastContainer;
  exports.default = _default;
},10034,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _LocalizedStrings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = strings = new _LocalizedStrings.default({
    "en": {
      had_connected: 'Connected',
      unconnected: 'Unconnected',
      setting: 'Setting',
      more_setting: 'More settings',
      featureSetting: 'Feature settings',
      commonSetting: 'Common settings',
      device_more_activity_rename: 'Rename',
      locationManagement: 'Location management',
      shareDevice: 'Share device',
      device_more_activity_firmware_update: 'Check for firmware update',
      device_more_activity_unbind: 'Delete device',
      addToDesktop: 'Add desktop shortcut',
      licenseAndPolicy: 'Term of Use and Privacy Policy',
      device_more_activity_feedback: 'Feedback',
      device_more_activity_license: 'Term of Use ',
      device_more_activity_privacy: 'Privacy Policy ',
      delete_device: 'Delete device ',
      security_setting: "Security settings",
      faq: "FAQ",
      timing: 'Timing',
      custom: 'Custom',
      repeat: 'Repeat',
      device_action: 'Device action',
      execute_once: 'Execute once',
      every_day: 'Everyday',
      working_day: 'Working day',
      weekend: 'Weekend',
      Monday: 'Monday',
      Tuesday: 'Tuesday',
      Wednesday: 'Wednesday',
      Thursday: 'Thursday',
      Friday: 'Friday',
      Saturday: 'Saturday',
      Sunday: 'Sunday',
      setting_timing_tasks: 'Setting timing tasks',
      confirm: 'Confirm',
      cancel: 'Cancel',
      save: 'Save',
      close: 'Close',
      on: 'Open',
      off: 'Off ',
      gear: 'Gear',
      license: 'Software License and Service Agreement',
      privacy: 'Privacy Agreement',
      hour: 'Hour',
      min: 'Minute',
      cur_version: 'Current version：',
      coffee: 'Coffee',
      balance: 'Measure',
      mine: 'Mine',
      dev_not_connected: 'Device not connected ',
      connect_tips: 'Please make sure your phone\nBluetooth is turned on and\nbattery is fully charged',
      none_food_menu_data: 'No food menu data',
      click_add_food_menu: 'Click + to start creating your food menu',
      delect_food_menu: 'Delete food menu',
      all_select: 'Select all',
      data_notes: 'Data notes',
      data_notes_none: 'No measurement data',
      data_notes_none_tips: 'Return to measure page, weigh and save your data',
      create_food_menu: 'Create menu',
      my_cookbook: 'My cookbook',
      not_classify: 'Not Classified',
      click_to_evaluate: 'Click to leave a comment',
      add_classify: 'Add Category',
      hand_made_coffee: 'Handmade coffee',
      add_coffee_tips: 'Put on the device and reset',
      add_coffee_tips2: 'add coffee tips',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Recommended water flow " + x + "g";
      },
      start_add_water: 'Start to add water',
      count_down_after_add_water: 'Countdown after adding water',
      first_time_add_water: 'Adding water for the first time',
      second_time_add_water: 'Adding water for the second time',
      third_time_add_water: 'Adding water for the third time',
      steaming: 'Steaming',
      end: 'End',
      create_cookbook: 'Create menu',
      enter_the_proportion_of_coffee: 'Enter the proportion of coffee',
      finish: 'Finish',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'a',
      spoon: 'Spoon',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'hour：minute：second',
      please_input: 'Please input',
      hour_: 'Hour',
      min_: 'Minute ',
      second_: 'Second',
      preview: 'Preview',
      add_success: 'Operation successful',
      add_failed: 'Operation fail',
      permission_camera: 'Please go to settings to enable camera permission',
      permission_photo: 'Please go to settings to open photo permission',
      granted: 'Please go to settings to open permission',
      input_menu_name: 'Please enter the name of the recipe',
      loading: 'Loading……',
      all: 'All',
      permission_save: 'Please go to settings to open the storage permission of mobile phone',
      save_to_photo: 'Saved to album',
      enter_the_name_of_food: 'Enter food name',
      please_enter_the_name_of_food: 'Please enter the name of the food',
      please_enter_the_weight_of_food: 'Please enter the weight of the food',
      no_name: 'Unnamed',
      name_is_to_long: 'The name length is too long',
      next: 'Next',
      all_time: 'All time ',
      water: 'water',
      my_coffee: 'My hands make coffee',
      my_coffee_water_radio: 'Ratio of coffee powder to water',
      coffee2: 'Coffee powder',
      steam: 'Steaming',
      first_add_water: 'First water injection',
      second_add_water: 'Second water injection',
      ensure_delete: 'Are you sure you want to delete?',
      input_valid_weight: 'Please input valid weight',
      ota: 'Firmware update',
      range: 'Range'
    },
    "zh": {
      had_connected: '已连接',
      unconnected: '未连接',
      setting: '设置',
      more_setting: '更多设置',
      featureSetting: '功能设置',
      commonSetting: '通用设置',
      device_more_activity_rename: '重命名',
      locationManagement: '位置管理',
      shareDevice: '设备共享',
      device_more_activity_firmware_update: '检查固件更新',
      device_more_activity_unbind: '删除设备',
      addToDesktop: '添加桌面快捷方式',
      licenseAndPolicy: '使用条款和隐私政策',
      device_more_activity_feedback: '反馈',
      device_more_activity_license: '使用条款',
      device_more_activity_privacy: '隐私政策',
      delete_device: '删除设备',
      security_setting: "安全设置",
      faq: "常见问题",
      timing: '定时',
      custom: '自定义',
      repeat: '重复',
      device_action: '设备动作',
      execute_once: '执行一次',
      every_day: '每天',
      working_day: '工作日',
      weekend: '周末',
      Monday: '周一',
      Tuesday: '周二',
      Wednesday: '周三',
      Thursday: '周四',
      Friday: '周五',
      Saturday: '周六',
      Sunday: '周日',
      setting_timing_tasks: '设置定时任务',
      confirm: '确认',
      cancel: '取消',
      save: '保存',
      close: '关闭',
      on: '开机',
      off: '总关 ',
      gear: '档',
      license: '软件许可及服务协议',
      privacy: '隐私协议',
      remaining_air_dry_time: '风干剩余时间',
      remaining_dryer_time: '烘干剩余时间',
      remaining_disinfection_time: '消毒剩余时间',
      help_control: '辅助控制',
      light: '照明',
      air_dry: '风干',
      dryer: '烘干',
      dryer_tips: '关闭时会延迟10s后关闭烘干功能',
      uv: '消毒 ',
      run_time_set: '运行时间设定',
      air_dry_time: '风干时间',
      dryer_time: '烘干时间',
      uv_time: '消毒时间',
      light_time: '照明时间',
      no_set: '未设定',
      hour: '小时',
      min: '分钟',
      up: '上升',
      pause: '暂停',
      down: '下降',
      tips: '关闭时会开启10s左右的风干功能',
      cur_version: '当前版本：',
      power_failure: '电源故障',
      dev_failure: '设备故障',
      blocked_failure: '遇阻故障',
      overweight_failure: '超重故障',
      top_failure: '上限位',
      bottom_failure: '下限位',
      swtich_btn: '开关按键',
      coffee: '咖啡',
      balance: '测量',
      mine: '我的',
      dev_not_connected: '厨房称尚未连接',
      connect_tips: '请确认手机蓝牙开启，设备电量充足',
      none_food_menu_data: '尚无食谱数据',
      click_add_food_menu: '点击+开始创建您的食谱',
      delect_food_menu: '删除食谱',
      all_select: '全选',
      data_notes: '数据笔记',
      data_notes_none: '尚无测量数据',
      data_notes_none_tips: '返回测量页面，称重并保存您的数据',
      create_food_menu: '创建食谱',
      my_cookbook: '我的食谱',
      not_classify: '未分类',
      click_to_evaluate: '点击留下心得评论',
      add_classify: '新增类别',
      hand_made_coffee: '手冲咖啡',
      add_coffee_tips: '放上器具并归零',
      add_coffee_tips2: '添加咖啡粉',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u63A8\u8350\u6C34\u91CF" + x + "g";
      },
      start_add_water: '开始注水',
      count_down_after_add_water: '注水后开始计时',
      first_time_add_water: '第一次注水中',
      second_time_add_water: '第二次注水中',
      third_time_add_water: '第三次注水中',
      steaming: '闷蒸中',
      end: '结束',
      create_cookbook: '生成食谱',
      enter_the_proportion_of_coffee: '输入咖啡比例',
      finish: '完成',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: '个',
      spoon: '匙',
      c_degree: '℃',
      f_degree: '℉',
      format_time: '时：分：秒',
      please_input: '请输入',
      hour_: '时',
      min_: '分',
      second_: '秒',
      preview: '预览',
      add_success: '操作成功',
      add_failed: '操作失败',
      permission_camera: '请前往设置中开启相机权限',
      permission_photo: '请前往设置中开启照片权限',
      granted: '请前往设置中开启权限',
      input_menu_name: '请输入食谱名称',
      loading: '加载中……',
      all: '全部',
      permission_save: '请前往设置中开启手机存储权限',
      save_to_photo: '已保存到相册',
      enter_the_name_of_food: '输入食物名称',
      please_enter_the_name_of_food: '请输入食物名称',
      please_enter_the_weight_of_food: '请输入重量',
      no_name: '未命名',
      name_is_to_long: '名称长度过长',
      next: '下一步',
      all_time: '总时长',
      water: '水量',
      my_coffee: '我的手冲咖啡',
      my_coffee_water_radio: '咖啡粉与水的比例',
      coffee2: '咖啡粉',
      steam: '闷蒸',
      first_add_water: '第一次注水',
      second_add_water: '第二次注水',
      ensure_delete: '是否确认删除?',
      input_valid_weight: '请输入合法的重量',
      ota: '固件升级',
      range: '范围'
    },
    "ar": {
      had_connected: 'متصل',
      unconnected: 'غير متصل',
      setting: 'الإعداد',
      more_setting: 'مزيد من الإعدادات',
      featureSetting: 'إعدادات الميزة',
      commonSetting: 'الإعدادات المشتركة',
      device_more_activity_rename: 'إعادة تسمية',
      locationManagement: 'إدارة الموقع',
      shareDevice: 'مشاركة الجهاز',
      device_more_activity_firmware_update: 'التحقق من وجود تحديثات للبرنامج الثابت',
      device_more_activity_unbind: 'حذف الجهاز',
      addToDesktop: 'إضافة اختصار سطح مكتب',
      licenseAndPolicy: 'شروط الاستخدام وسياسة الخصوصية',
      device_more_activity_feedback: 'الملاحظات',
      device_more_activity_license: 'شروط الاستخدام',
      device_more_activity_privacy: 'سياسة الخصوصية',
      delete_device: 'حذف الجهاز',
      security_setting: 'إعدادات الأمان',
      faq: 'الأسئلة الشائعة',
      timing: 'التوقيت',
      custom: 'مُخصص',
      repeat: 'تكرار',
      device_action: 'إجراء الجهاز',
      execute_once: 'تنفي مرة واحدة',
      every_day: 'كل يوم',
      working_day: 'يوم العمل',
      weekend: 'نهاية الأسبوع',
      Monday: 'الاثنين',
      Tuesday: 'الثلاثاء',
      Wednesday: 'الأربعاء',
      Thursday: 'الخميس',
      Friday: 'الجمعة',
      Saturday: 'السبت',
      Sunday: 'الأحد',
      setting_timing_tasks: 'إعداد مهام التوقيت',
      confirm: 'تأكيد',
      cancel: 'إلغاء',
      save: 'حفظ',
      close: 'إغلاق',
      on: 'الفتح',
      off: 'إيقاف التشغيل',
      gear: 'الترس',
      license: 'ترخيص البرنامج واتفاقية الخدمة',
      privacy: 'اتفاقي الخصوصية',
      hour: 'ساعة',
      min: 'دقيقة',
      cur_version: 'الإصدار الحالي:',
      coffee: 'قهوة',
      balance: 'القياس',
      mine: 'لي',
      dev_not_connected: 'الجهاز غير متصل',
      connect_tips: 'تأكد من أن البلوتوث للهاتف الخاص بك يعمل وأن البطارية مشحونة بالكامل',
      none_food_menu_data: 'لا يوجد بيانات قائمة طعام',
      click_add_food_menu: 'انقر على + لبدء إنشاء قائمة طعام خاصة بك',
      delect_food_menu: 'حذف قائمة الطعام',
      all_select: 'تحديد الكل',
      data_notes: 'ملاحظات البيانات',
      data_notes_none: 'لا يتوفر بيانات قياس',
      data_notes_none_tips: 'رجوع إلى صفحة القياس، التوزين وحفظ بياناتك',
      create_food_menu: 'إنشاء قائمة طعام',
      my_cookbook: 'كتاب الطهي الخاص بي',
      not_classify: 'غير مصنف',
      click_to_evaluate: 'انقر لإضافة تعليق',
      add_classify: 'إضافة فئة',
      hand_made_coffee: 'قهوة صنع يدوي',
      add_coffee_tips: 'شغل الجهاز وقم بإعادة الضبط\n ثم أضف إرشادات القهوة',
      add_coffee_tips2: 'إضافة القهوة نصائح',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u062A\u062F\u0641\u0642 \u0627\u0644\u0645\u0627\u0621 \u0627\u0644\u0645\u0633\u062A\u062D\u064A\u0646 " + x + " \u063A\u0645";
      },
      start_add_water: 'ابدأ بإضافة الماء',
      count_down_after_add_water: 'العد التنازلي بعد إضافة الماء',
      first_time_add_water: 'إضافة الماء للمرة الأولى',
      second_time_add_water: 'إضافة الماء للمرة الثانية',
      third_time_add_water: 'إضافة الماء للمرة الثالثة',
      steaming: 'التبخير',
      end: 'الإنهاء',
      create_cookbook: 'إنشاء كتاب طهي',
      enter_the_proportion_of_coffee: 'أدخل نسبة القهوة',
      finish: 'انتهى',
      g: 'غم',
      ml: 'مل',
      oz: 'أوقية',
      lb: 'رطل',
      a: 'أ',
      spoon: 'ملعقة',
      c_degree: 'درجة مئوية',
      f_degree: 'فهرنهايت',
      format_time: 'ساعة: دقيقة: ثانية',
      please_input: 'يرجل الإدخال',
      hour_: 'ساعة',
      min_: 'دقيقة',
      second_: 'ثانية',
      preview: 'عرض',
      add_success: ' عملية ناجحة ',
      add_failed: ' فشل العملية ',
      permission_camera: ' يرجى الذهاب إلى إعدادات تمكين الكاميرا ',
      permission_photo: ' يرجى الذهاب إلى إعدادات لفتح أذونات الصور ',
      granted: ' الرجاء فتح الأذونات في الإعدادات ',
      input_menu_name: ' الرجاء إدخال اسم وصفة',
      loading: ' تحميل ……',
      all: ' كل',
      permission_save: ' الرجاء فتح ذاكرة الهاتف في الإعدادات',
      save_to_photo: ' تم حفظها إلى الألبوم ',
      enter_the_name_of_food: ' أدخل اسم الغذاء',
      please_enter_the_name_of_food: ' الرجاء إدخال اسم الغذاء ',
      please_enter_the_weight_of_food: ' الرجاء إدخال الوزن ',
      no_name: ' غير مسمى ',
      name_is_to_long: ' طول الاسم طويل جدا ',
      next: ' الخطوة التالية ',
      all_time: ' مجموع الوقت ',
      water: ' كمية الماء ',
      my_coffee: ' يدي جعل القهوة ',
      my_coffee_water_radio: ' نسبة مسحوق القهوة إلى الماء ',
      coffee2: ' مسحوق القهوة ',
      steam: ' بخار خانق ',
      first_add_water: ' أول حقن المياه',
      second_add_water: ' ثانيا حقن المياه',
      ensure_delete: ' تأكيد حذف ?',
      input_valid_weight: ' الرجاء إدخال الوزن الصحيح ',
      ota: ' ترقية البرامج الثابتة ',
      range: ' مدى '
    },
    "th": {
      had_connected: 'متصل',
      unconnected: 'غير متصل',
      setting: 'الإعداد',
      more_setting: 'مزيد من الإعدادات',
      featureSetting: 'إعدادات الميزة',
      commonSetting: 'الإعدادات المشتركة',
      device_more_activity_rename: 'إعادة تسمية',
      locationManagement: 'إدارة الموقع',
      shareDevice: 'مشاركة الجهاز',
      device_more_activity_firmware_update: 'التحقق من وجود تحديثات للبرنامج الثابت',
      device_more_activity_unbind: 'حذف الجهاز',
      addToDesktop: 'إضافة اختصار سطح مكتب',
      licenseAndPolicy: 'شروط الاستخدام وسياسة الخصوصية',
      device_more_activity_feedback: 'الملاحظات',
      device_more_activity_license: 'شروط الاستخدام',
      device_more_activity_privacy: 'سياسة الخصوصية',
      delete_device: 'حذف الجهاز',
      security_setting: 'إعدادات الأمان',
      faq: 'الأسئلة الشائعة',
      timing: 'التوقيت',
      custom: 'مُخصص',
      repeat: 'تكرار',
      device_action: 'إجراء الجهاز',
      execute_once: 'تنفي مرة واحدة',
      every_day: 'كل يوم',
      working_day: 'يوم العمل',
      weekend: 'نهاية الأسبوع',
      Monday: 'الاثنين',
      Tuesday: 'الثلاثاء',
      Wednesday: 'الأربعاء',
      Thursday: 'الخميس',
      Friday: 'الجمعة',
      Saturday: 'السبت',
      Sunday: 'الأحد',
      setting_timing_tasks: 'إعداد مهام التوقيت',
      confirm: 'تأكيد',
      cancel: 'إلغاء',
      save: 'حفظ',
      close: 'إغلاق',
      on: 'الفتح',
      off: 'إيقاف التشغيل',
      gear: 'الترس',
      license: 'ترخيص البرنامج واتفاقية الخدمة',
      privacy: 'اتفاقي الخصوصية',
      hour: 'ساعة',
      min: 'دقيقة',
      cur_version: 'الإصدار الحالي:',
      coffee: 'قهوة',
      balance: 'القياس',
      mine: 'لي',
      dev_not_connected: 'الجهاز غير متصل',
      connect_tips: 'تأكد من أن البلوتوث للهاتف الخاص بك يعمل وأن البطارية مشحونة بالكامل',
      none_food_menu_data: 'لا يوجد بيانات قائمة طعام',
      click_add_food_menu: 'انقر على + لبدء إنشاء قائمة طعام خاصة بك',
      delect_food_menu: 'حذف قائمة الطعام',
      all_select: 'تحديد الكل',
      data_notes: 'ملاحظات البيانات',
      data_notes_none: 'لا يتوفر بيانات قياس',
      data_notes_none_tips: 'رجوع إلى صفحة القياس، التوزين وحفظ بياناتك',
      create_food_menu: 'إنشاء قائمة طعام',
      my_cookbook: 'كتاب الطهي الخاص بي',
      not_classify: 'غير مصنف',
      click_to_evaluate: 'انقر لإضافة تعليق',
      add_classify: 'إضافة فئة',
      hand_made_coffee: 'قهوة صنع يدوي',
      add_coffee_tips: 'شغل الجهاز وقم بإعادة الضبط\n ثم أضف إرشادات القهوة',
      add_coffee_tips2: 'إضافة القهوة نصائح',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u062A\u062F\u0641\u0642 \u0627\u0644\u0645\u0627\u0621 \u0627\u0644\u0645\u0633\u062A\u062D\u064A\u0646 " + x + " \u063A\u0645";
      },
      start_add_water: 'ابدأ بإضافة الماء',
      count_down_after_add_water: 'العد التنازلي بعد إضافة الماء',
      first_time_add_water: 'إضافة الماء للمرة الأولى',
      second_time_add_water: 'إضافة الماء للمرة الثانية',
      third_time_add_water: 'إضافة الماء للمرة الثالثة',
      steaming: 'التبخير',
      end: 'الإنهاء',
      create_cookbook: 'إنشاء كتاب طهي',
      enter_the_proportion_of_coffee: 'أدخل نسبة القهوة',
      finish: 'انتهى',
      g: 'غم',
      ml: 'مل',
      oz: 'أوقية',
      lb: 'رطل',
      a: 'أ',
      spoon: 'ملعقة',
      c_degree: 'درجة مئوية',
      f_degree: 'فهرنهايت',
      format_time: 'ساعة: دقيقة: ثانية',
      please_input: 'يرجل الإدخال',
      hour_: 'ساعة',
      min_: 'دقيقة',
      second_: 'ثانية',
      preview: 'عرض',
      add_success: ' عملية ناجحة ',
      add_failed: ' فشل العملية ',
      permission_camera: ' يرجى الذهاب إلى إعدادات تمكين الكاميرا ',
      permission_photo: ' يرجى الذهاب إلى إعدادات لفتح أذونات الصور ',
      granted: ' الرجاء فتح الأذونات في الإعدادات ',
      input_menu_name: ' الرجاء إدخال اسم وصفة',
      loading: ' تحميل ……',
      all: ' كل',
      permission_save: ' الرجاء فتح ذاكرة الهاتف في الإعدادات',
      save_to_photo: ' تم حفظها إلى الألبوم ',
      enter_the_name_of_food: ' أدخل اسم الغذاء',
      please_enter_the_name_of_food: ' الرجاء إدخال اسم الغذاء ',
      please_enter_the_weight_of_food: ' الرجاء إدخال الوزن ',
      no_name: ' غير مسمى ',
      name_is_to_long: ' طول الاسم طويل جدا ',
      next: ' الخطوة التالية ',
      all_time: ' مجموع الوقت ',
      water: ' كمية الماء ',
      my_coffee: ' يدي جعل القهوة ',
      my_coffee_water_radio: ' نسبة مسحوق القهوة إلى الماء ',
      coffee2: ' مسحوق القهوة ',
      steam: ' بخار خانق ',
      first_add_water: ' أول حقن المياه',
      second_add_water: ' ثانيا حقن المياه',
      ensure_delete: ' تأكيد حذف ?',
      input_valid_weight: ' الرجاء إدخال الوزن الصحيح ',
      ota: ' ترقية البرامج الثابتة ',
      range: ' مدى '
    },
    "de": {
      had_connected: 'Verbunden',
      unconnected: 'Nicht verbunden',
      setting: 'Einstellungen',
      more_setting: 'Weitere Einstellungen',
      featureSetting: 'Funktionseinstellungen',
      commonSetting: 'Allgemeine Einstellungen',
      device_more_activity_rename: 'Umbenennen',
      locationManagement: 'Standortverwaltung',
      shareDevice: 'Gerät freigeben',
      device_more_activity_firmware_update: 'Nach Firmware-Aktualisierungen suchen',
      device_more_activity_unbind: 'Gerät löschen',
      addToDesktop: 'Desktop-Verknüpfung hinzufügen',
      licenseAndPolicy: 'Nutzungsbedingung und Datenschutzerklärung',
      device_more_activity_feedback: 'Feedback',
      device_more_activity_license: 'Nutzungsbedingung',
      device_more_activity_privacy: 'Datenschutzerklärung',
      delete_device: 'Gerät löschen',
      security_setting: 'Sicherheitseinstellungen',
      faq: 'Häufig gestellte Fragen',
      timing: 'Zeiteinstellung',
      custom: 'Benutzerdefiniert',
      repeat: 'Wiederholen',
      device_action: 'Geräteaktion',
      execute_once: 'Einmal ausführen',
      every_day: 'Täglich',
      working_day: 'Werktage',
      weekend: 'Wochenende',
      Monday: 'Montag',
      Tuesday: 'Dienstag',
      Wednesday: 'Mittwoch',
      Thursday: 'Donnerstag',
      Friday: 'Freitag',
      Saturday: 'Samstag',
      Sunday: 'Sonntag',
      setting_timing_tasks: 'Zeitschaltaufgaben einstellen',
      confirm: 'Bestätigen',
      cancel: 'Abbrechen',
      save: 'Speichern',
      close: 'Schließen',
      on: 'Aufklappen',
      off: 'Aus',
      gear: 'Gang',
      license: 'Softwarelizenz und -Servicevereinbarung',
      privacy: 'Datenschutzvereinbarung',
      hour: 'Stunde',
      min: 'Minute',
      cur_version: 'Aktuelle Version:',
      coffee: 'Kaffee',
      balance: 'Messung',
      mine: 'Meins',
      dev_not_connected: 'Gerät ist nicht verbunden',
      connect_tips: 'Bitte stellen Sie sicher, dass Ihr Bluetooth aktiviert und die Batterie komplett aufgeladen wurde.',
      none_food_menu_data: 'Keine Speisemenüdaten',
      click_add_food_menu: 'Klicken  + und anfangen Ihre Speise zu kreieren',
      delect_food_menu: 'Speisemenü löschen',
      all_select: 'Alle auswählen',
      data_notes: 'Datenhinweise',
      data_notes_none: 'Keine Messdaten',
      data_notes_none_tips: 'Zurück zu Messseite, speichern Sie nach dem Wiegen Ihre Daten',
      create_food_menu: 'Speisemenü erstellen',
      my_cookbook: 'Mein Kochbuch',
      not_classify: 'Nicht klassifiziert',
      click_to_evaluate: 'Klicken , um einen Kommentar zu hinterlassen',
      add_classify: 'Kategorie hinzufügen',
      hand_made_coffee: 'Handgebrühter Kaffee',
      add_coffee_tips: 'Schalten Sie das Gerät ein, stellen Sie es zurück\n und fügen Sie danach Kaffeetipps hinzu',
      add_coffee_tips2: 'Kaffeetipps hinzufügen',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Empfohlene Wasserdurchflussrate " + x + "g";
      },
      start_add_water: 'Beginnen Sie Wasser hinzuzufügen',
      count_down_after_add_water: 'Countdown nach dem Hinzufügen von Wasser',
      first_time_add_water: 'Erstmaliges Hinzufügen von Wasser',
      second_time_add_water: 'Zweitmaliges Hinzufügen von Wasser',
      third_time_add_water: 'Drittmaliges Hinzufügen von Wasser',
      steaming: 'Dampfen',
      end: 'Ende',
      create_cookbook: 'Kochbuch erstellen',
      enter_the_proportion_of_coffee: 'Geben Sie die Kaffeemenge ein',
      finish: 'Abgeschlossen',
      g: 'g',
      ml: 'ml',
      oz: 'Unze',
      lb: 'lb',
      a: 'a',
      spoon: 'Löffel',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'Stunde: Minute: Sekunde',
      please_input: 'Bitte eingeben',
      hour_: 'Stunde',
      min_: 'Minute',
      second_: 'Sekunde',
      preview: 'Vorschau',
      add_success: 'Operation erfolgreich',
      add_failed: 'Operation fehlgeschlagen',
      permission_camera: 'Bitte gehen Sie zu Einstellungen, um die Berechtigungen der Kamera zu öffnen',
      permission_photo: 'Bitte gehen Sie zu Einstellungen, um Bildrechte zu öffnen',
      granted: 'Bitte gehen Sie zu den Einstellungen, um die Berechtigungen zu öffnen',
      input_menu_name: 'Bitte geben Sie den Namen des Rezepts ein',
      loading: 'Laden……',
      all: 'ganze',
      permission_save: 'Bitte gehen Sie zu den Einstellungen, um die Speichererlaubnis des Mobiltelefons zu öffnen',
      save_to_photo: 'Gespeichert zum Album',
      enter_the_name_of_food: 'Name des Lebensmittels eingeben',
      please_enter_the_name_of_food: 'Bitte geben Sie den Namen des Lebensmittels ein',
      please_enter_the_weight_of_food: 'Bitte geben Sie das Gewicht ein',
      no_name: 'Unbenannt',
      name_is_to_long: 'Die Namenslänge ist zu lang',
      next: 'nächster Schritt',
      all_time: 'Gesamtdauer',
      water: 'Menge des Wassers',
      my_coffee: 'Meine Hände machen Kaffee',
      my_coffee_water_radio: 'Verhältnis von Kaffeepulver zu Wasser',
      coffee2: 'Coffee Pulver',
      steam: 'Dampfen',
      first_add_water: 'Erste Wassereinspritzung',
      second_add_water: 'Zweite Wassereinspritzung',
      ensure_delete: 'Sind Sie sicher, dass Sie löschen möchten?',
      input_valid_weight: 'Bitte geben Sie das gesetzliche Gewicht ein',
      ota: 'Firmware update',
      range: 'Bereich'
    },
    "ru": {
      had_connected: 'Подключён',
      unconnected: 'Не подключен',
      setting: 'Настройка',
      more_setting: 'Дополнительные настройки',
      featureSetting: 'Настройки функции',
      commonSetting: 'Общие настройки',
      device_more_activity_rename: 'Переименовать',
      locationManagement: 'Управление местоположением',
      shareDevice: 'Общий доступ к устройству',
      device_more_activity_firmware_update: 'Проверить наличие обновления встроенного ПО',
      device_more_activity_unbind: 'Удалить устройство',
      addToDesktop: 'Добавить ярлык на рабочий стол',
      licenseAndPolicy: 'Условия использования и политика конфиденциальности',
      device_more_activity_feedback: 'Обратная связь',
      device_more_activity_license: 'Условия пользования',
      device_more_activity_privacy: 'Политика конфиденциальности',
      delete_device: 'Удалить устройство',
      security_setting: 'Настройки безопасности',
      faq: 'Часто задааемые вопросы',
      timing: 'Время выполнения',
      custom: 'Пользовательский',
      repeat: 'Повтор',
      device_action: 'Действие устройства',
      execute_once: 'Выполнить один раз',
      every_day: 'Каждый день',
      working_day: 'В рабочие дни',
      weekend: 'В выходные',
      Monday: 'Понедельник',
      Tuesday: 'Вторник',
      Wednesday: 'Среда',
      Thursday: 'Четверг',
      Friday: 'Пятница',
      Saturday: 'Суббота',
      Sunday: 'Воскресенье',
      setting_timing_tasks: 'Установка задач по времени',
      confirm: 'Подтвердить',
      cancel: 'Отмена',
      save: 'Сохранить',
      close: 'Закрыть',
      on: 'Открыть',
      off: 'Выключен',
      gear: 'Передача',
      license: 'Соглашение о лицензировании и обслуживании программного обеспечения',
      privacy: 'Соглашение о конфиденциальности',
      hour: 'Часы',
      min: 'Минуты',
      cur_version: 'Текущая версия:',
      coffee: 'Кофе',
      balance: 'Измерения',
      mine: 'Извлекать информацию',
      dev_not_connected: 'Устройство не подключено',
      connect_tips: 'Убедитесь, что в вашем телефоне включен Bluetooth и аккумулятор полностью заряжен.',
      none_food_menu_data: 'Нет данных о меню еды',
      click_add_food_menu: 'Нажмите +, чтобы начать создание меню еды',
      delect_food_menu: 'Удалить меню еды',
      all_select: 'Выбрать все',
      data_notes: 'Примечания к данным',
      data_notes_none: 'Нет данных об измерениях',
      data_notes_none_tips: 'Вернитесь на страницу измерений, взвесьте и сохраните данные',
      create_food_menu: 'Создайте меню еды',
      my_cookbook: 'Моя кулинарная книга',
      not_classify: 'Не классифицируется',
      click_to_evaluate: 'Нажмите, чтобы оставить комментарий',
      add_classify: 'Добавьте категорию',
      hand_made_coffee: 'Кофе сделанный вручную',
      add_coffee_tips: 'Включите устройство и выполните сброс \ n, затем добавьте дополнительные сведения о кофе.',
      add_coffee_tips2: 'Добавить подсказку',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u0420\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0443\u0435\u043C\u044B\u0439 \u0440\u0430\u0441\u0445\u043E\u0434 \u0432\u043E\u0434\u044B " + x + " \u0433";
      },
      start_add_water: 'Начните добавлять воду',
      count_down_after_add_water: 'Обратный отсчет после добавления воды',
      first_time_add_water: 'Добавить воды в первый раз',
      second_time_add_water: 'Добавить воды во второй раз',
      third_time_add_water: 'Добавить воды в третий раз',
      steaming: 'Пар',
      end: 'Конец',
      create_cookbook: 'Создать кулинарную книгу',
      enter_the_proportion_of_coffee: 'Введите пропорцию кофе',
      finish: 'Завершено',
      g: 'г',
      ml: 'мл',
      oz: 'унц.',
      lb: 'фунт',
      a: 'а',
      spoon: 'Ложка',
      c_degree: '°C',
      f_degree: '°F',
      format_time: 'Часы: минуты: секунды:',
      please_input: 'Пожалуйста введите',
      hour_: 'Часы',
      min_: 'Минуты',
      second_: 'Второй',
      preview: 'Предварительный просмотр',
      add_success: ' Операция прошла успешно ',
      add_failed: 'Ошибка операции ',
      permission_camera: 'Укажите права на открытие камеры в настройках ',
      permission_photo: 'Укажите права доступа к настройкам для открытия фотографий ',
      granted: 'Укажите права доступа к настройкам ',
      input_menu_name: ' Введите имя рецепта ',
      loading: 'в номере не уютно……',
      all: ' все',
      permission_save: 'Укажите права доступа к устройству ',
      save_to_photo: 'сохранить в альбом ',
      enter_the_name_of_food: 'Введите название',
      please_enter_the_name_of_food: ' Введите название ',
      please_enter_the_weight_of_food: 'Введите вес',
      no_name: 'не называться',
      name_is_to_long: 'чрезмерная длина наименования',
      next: 'Следующие шаги',
      all_time: 'общая длина времени',
      water: 'количество воды',
      my_coffee: 'кофе в моей руке',
      my_coffee_water_radio: 'соотношение порошка кофе и воды',
      coffee2: 'кофейный порошок',
      steam: 'душный',
      first_add_water: 'Первое заводнение',
      second_add_water: 'вторичная заливка',
      ensure_delete: 'Подтверждение удаления?',
      input_valid_weight: 'Введите законный вес',
      ota: 'Улучшение крепления',
      range: 'Сфера применения'
    },
    "fr": {
      had_connected: 'Connecté',
      unconnected: 'Non connecté',
      setting: 'Paramètre',
      more_setting: 'Plus de paramètres',
      featureSetting: 'Paramètres de la fonctionnalité',
      commonSetting: 'Paramètres courants',
      device_more_activity_rename: 'Renommer',
      locationManagement: 'Gestion de la localisation',
      shareDevice: 'Partager l’appareil',
      device_more_activity_firmware_update: 'Rechercher les mises à jour du micrologiciel',
      device_more_activity_unbind: 'Supprimer l\'appareil',
      addToDesktop: 'Ajouter un raccourci sur le bureau',
      licenseAndPolicy: 'Conditions d’utilisation et Politique de confidentialité',
      device_more_activity_feedback: 'Rétroaction',
      device_more_activity_license: 'Conditions d\'utilisation',
      device_more_activity_privacy: 'Politique de confidentialité',
      delete_device: 'Supprimer l\'appareil',
      security_setting: 'Paramètres de sécurité',
      faq: 'FAQ',
      timing: 'Minuterie',
      custom: 'Personnalisé',
      repeat: 'Répéter',
      device_action: 'Action de l’appareil',
      execute_once: 'Exécuter une seule fois',
      every_day: 'Tous les jours',
      working_day: 'Jour ouvrable',
      weekend: 'Week-end',
      Monday: 'Lundi',
      Tuesday: 'Mardi',
      Wednesday: 'Mercredi',
      Thursday: 'Jeudi',
      Friday: 'Vendredi',
      Saturday: 'Samedi',
      Sunday: 'Dimanche',
      setting_timing_tasks: 'Paramètre des tâches de programmation',
      confirm: 'Confirmer',
      cancel: 'Annuler',
      save: 'Enregistrer',
      close: 'Fermer',
      on: 'Ouvrir',
      off: 'Éteint',
      gear: 'Engrenage',
      license: 'Contrat de licence et de service du logiciel',
      privacy: 'Accord de confidentialité',
      hour: 'Heure',
      min: 'Minute',
      cur_version: 'Version actuelle :',
      coffee: 'Café',
      balance: 'Mesurer',
      mine: 'Mien',
      dev_not_connected: 'Appareil non connecté',
      connect_tips: 'Veuillez-vous rassurer que le Bluetooth de votre téléphone est activé et que la batterie est pleinement chargé',
      none_food_menu_data: 'Pas de données sur le menu',
      click_add_food_menu: 'Cliquer + pour commencer à créer un menu',
      delect_food_menu: 'Supprimer le menu',
      all_select: 'Tout sélectionner',
      data_notes: 'Remarques sur les données',
      data_notes_none: 'Pas de données de mesure',
      data_notes_none_tips: 'Retourner à la page de mesure, de poids et sauvegarder vos données',
      create_food_menu: 'Créer un menu',
      my_cookbook: 'Mon livre de recette',
      not_classify: 'Non classifié',
      click_to_evaluate: 'Cliquer pour laisser un commentaire',
      add_classify: 'Ajouter une catégorie',
      hand_made_coffee: 'Café fait à la main',
      add_coffee_tips: 'Placer le dispositif et réinitialiser\n puis ajouter les astuces de café',
      add_coffee_tips2: 'Ajouter des conseils de café',
      recommend_water_flow: function recommend_water_flow(x) {
        return "D\xE9bit d\u2019eau recommand\xE9 " + x + "g";
      },
      start_add_water: 'Commencer à ajouter de l’eau',
      count_down_after_add_water: 'Compte à rebours avant d’ajouter de l’eau',
      first_time_add_water: 'Ajouter de l’eau pour la première fois',
      second_time_add_water: 'Ajouter de l’eau pour la deuxième fois',
      third_time_add_water: 'Ajouter de l’eau pour la troisième fois',
      steaming: 'Vaporisation',
      end: 'Terminer',
      create_cookbook: 'Créer un livre de recette',
      enter_the_proportion_of_coffee: 'Entrer la portion de café',
      finish: 'Terminer',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'pièce',
      spoon: 'Cuillère',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'heure:minute:seconde',
      please_input: 'Veuillez entrer',
      hour_: 'Heure',
      min_: 'Minute',
      second_: 'Seconde',
      preview: 'Aperçu',
      add_success: 'Opération réussie',
      add_failed: 'L\'opération a échoué',
      permission_camera: 'Veuillez aller aux paramètres pour activer les permissions de la caméra',
      permission_photo: 'Veuillez aller aux paramètres pour activer les permissions de photo',
      granted: 'Veuillez aller aux paramètres pour activer les permissions',
      input_menu_name: 'Veuillez saisir un nom de recette',
      loading: 'Chargement en cours……',
      all: 'Tous',
      permission_save: 'Veuillez aller aux paramètres pour activer les permissions de stockage du téléphone',
      save_to_photo: 'Enregistré dans l\'album',
      enter_the_name_of_food: 'Saisissez le nom de l\'aliment',
      please_enter_the_name_of_food: 'Veuillez saisir le nom de la nourriture',
      please_enter_the_weight_of_food: 'Veuillez entrer le poids',
      no_name: 'Sans nom',
      name_is_to_long: 'Nom trop long',
      next: 'Prochaines étapes',
      all_time: 'Durée totale',
      water: 'Volume d\'ea',
      my_coffee: 'Mes mains font du café',
      my_coffee_water_radio: 'Rapport entre la poudre de café et l\'eau',
      coffee2: 'Café en poudre',
      steam: 'Vapeur étouffante',
      first_add_water: 'Première injection d\'eau',
      second_add_water: 'Deuxième injection d\'eau',
      ensure_delete: 'Confirmer la suppression?',
      input_valid_weight: 'Veuillez saisir un poids raisonnable',
      ota: 'Mise à jour du firmware',
      range: 'Champ d\'application'
    },
    ko: {
      had_connected: '연결되었습니다',
      unconnected: '연결되지 않았습니다',
      setting: '설정',
      more_setting: '더 많은 설정',
      featureSetting: '기능 설정',
      commonSetting: '일반 설정',
      device_more_activity_rename: '장치명 재설정',
      locationManagement: '위치 관리',
      shareDevice: '장치 공유',
      device_more_activity_firmware_update: '펌웨어 업데이트',
      device_more_activity_unbind: '장치 연결 해제',
      addToDesktop: '바탕화면에 추가',
      licenseAndPolicy: '사용약관 및 개인정보보호',
      device_more_activity_feedback: '피드백',
      device_more_activity_license: '사용약관',
      device_more_activity_privacy: '개인정보 보호',
      delete_device: '장치 삭제',
      security_setting: '보안 설정',
      faq: '자주 묻는 질문',
      timing: '타이머',
      custom: '사용자 정의',
      repeat: '반복',
      device_action: '장치 동작',
      execute_once: '반복 없음',
      every_day: '매일',
      working_day: '주중',
      weekend: '주말',
      Monday: '월요일',
      Tuesday: '화요일',
      Wednesday: '수요일',
      Thursday: '목요일',
      Friday: '금요일',
      Saturday: '토요일',
      Sunday: '일요일',
      setting_timing_tasks: '타이머 설정 작업',
      confirm: '확인',
      cancel: '취소',
      save: '저장',
      close: '닫기',
      on: '열기',
      off: '끄기',
      gear: '기어',
      license: '소프트웨어 라이선스 및 서비스 협약',
      privacy: '개인정보 협약',
      hour: '시간',
      min: '분',
      cur_version: '현재 버전',
      coffee: '커피',
      balance: '측정',
      mine: '마이페이지',
      dev_not_connected: '장치가 연결되지 않았습니다',
      connect_tips: '스마트폰의 블루투스가 켜져 있는지 배터리가 충전되어 있는지 확인하십시오',
      none_food_menu_data: '레시피 없음',
      click_add_food_menu: ' 클릭하여 새로운 레시피 추가',
      delect_food_menu: '레시피 삭제',
      all_select: '모두 선택',
      data_notes: '데이터 기록',
      data_notes_none: '측정된 데이터 없음',
      data_notes_none_tips: '측정 페이지로 돌아가 무게 측정 및 데이터 저장',
      create_food_menu: '레시피 추가',
      my_cookbook: '나의 레시피',
      not_classify: '미분류',
      click_to_evaluate: '클릭하여 의견 남기기',
      add_classify: '카테고리 추가',
      hand_made_coffee: '핸드 드립 커피',
      add_coffee_tips: '용기를 저울에 올리고 저울을 0으로 리셋하세요\n 커피를 추가하세요',
      add_coffee_tips2: '커피 가루를 추가하세요',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\uAD8C\uC7A5 \uBB3C \uC6A9\uB7C9 " + x + " g";
      },
      start_add_water: '물 추가 시작',
      count_down_after_add_water: '물 추가 후 카운트다운',
      first_time_add_water: '첫 번째 물 추가',
      second_time_add_water: '두 번째 물 추가',
      third_time_add_water: '세 번째 물 추가',
      steaming: '커피 추출',
      end: '완료',
      create_cookbook: '레시피 추가',
      enter_the_proportion_of_coffee: '커피 비율 입력',
      finish: '종료',
      g: 'g',
      ml: 'ml',
      a: '한 개',
      spoon: '스푼',
      c_degree: '℃',
      f_degree: '℉',
      format_time: '시간:분:초',
      please_input: '입력하세요',
      hour_: '시간',
      min_: '분',
      second_: '초',
      preview: '미리 보기',
      add_success: '추가 성공',
      add_failed: '추가 실패',
      permission_camera: '카메라 접근 허용',
      permission_photo: '사진 접근 허용',
      granted: '승인되었습니다',
      input_menu_name: '레시피 이름 입력',
      loading: '로딩 중...',
      all: '전체',
      permission_save: '사진 저장 허용',
      save_to_photo: '사진 저장',
      enter_the_name_of_food: '메뉴 이름 입력',
      please_enter_the_name_of_food: '메뉴의 이름을 입력하세요',
      please_enter_the_weight_of_food: '무게를 입력하세요',
      no_name: '이름 없음',
      name_is_to_long: '이름이 너무 깁니다',
      next: '다음',
      all_time: '총 시간',
      water: '물의 양',
      my_coffee: '나의 커피',
      my_coffee_water_radio: '커피와 물의 비율',
      coffee2: '커피 가루',
      steam: '스팀',
      first_add_water: '첫 번째 물 추가',
      second_add_water: '두 번째 물 추가',
      ensure_delete: '삭제하시겠습니까?',
      input_valid_weight: '무게를 올바르게 입력하세요',
      ota: '펌웨어 업데이트',
      range: '범위'
    },
    "es-la": {
      had_connected: 'Conectado',
      unconnected: 'Desconectado',
      setting: 'Configuración',
      more_setting: 'Más ajustes',
      featureSetting: 'Configuración de funciones',
      commonSetting: 'Configuraciones comunes',
      device_more_activity_rename: 'Renombrar',
      locationManagement: 'Manejo de la ubicación',
      shareDevice: 'Compartir dispositivo',
      device_more_activity_firmware_update: 'Verifique actualización del firmware',
      device_more_activity_unbind: 'Eliminar dispositivo',
      addToDesktop: 'Agregar acceso directo al escritorio',
      licenseAndPolicy: 'Condiciones de uso y política de privacidad',
      device_more_activity_feedback: 'Realimentación',
      device_more_activity_license: 'Terminos de uso',
      device_more_activity_privacy: 'Política de Privacidad',
      delete_device: 'Eliminar dispositivo',
      security_setting: 'Configuraciones de seguridad',
      faq: 'Preguntas más frecuentes',
      timing: 'Sincronización',
      custom: 'Personalizado',
      repeat: 'Repetir',
      device_action: 'Acción del dispositivo',
      execute_once: 'Ejecutar una vez',
      every_day: 'Cada día',
      working_day: 'Día laborable',
      weekend: 'Fin de semana',
      Monday: 'Lunes',
      Tuesday: 'Martes',
      Wednesday: 'Miércoles',
      Thursday: 'Jueves',
      Friday: 'Viernes',
      Saturday: 'Sábado',
      Sunday: 'Domingo',
      setting_timing_tasks: 'Establecer tareas de cronometraje',
      confirm: 'Confirmar',
      cancel: 'Cancelar',
      save: 'Guardar',
      close: 'Cerrar',
      on: 'Abrir',
      off: 'Apagado',
      gear: 'Engranaje',
      license: 'Licencia de Software y Convenio de Servicio',
      privacy: 'Convenio de Privacidad',
      hour: 'Hora',
      min: 'Minuto',
      cur_version: 'Versión actual:',
      coffee: 'Café',
      balance: 'Medida',
      mine: 'Mío(a)',
      dev_not_connected: 'Dispositivo no conectado',
      connect_tips: 'Asegúrese de que el Bluetooth de su teléfono esté encendido y la batería esté completamente cargada',
      none_food_menu_data: 'No hay datos de menú de alimentos',
      click_add_food_menu: 'Haga clic en + para comenzar a crear su menú de alimentos',
      delect_food_menu: 'Eliminar menú de alimentos',
      all_select: 'Seleccionar todo',
      data_notes: 'Notas de datos',
      data_notes_none: 'Sin datos de medición',
      data_notes_none_tips: 'Regrese a la página de medidas, pese y guarde sus datos',
      create_food_menu: 'Crear menú de alimentos',
      my_cookbook: 'Mi libro de cocina',
      not_classify: 'No clasificado',
      click_to_evaluate: 'Haga clic para dejar un comentario.',
      add_classify: 'Añadir categoría',
      hand_made_coffee: 'Café artesanal',
      add_coffee_tips: 'Encienda el dispositivo y reinicie, luego agregue puntas de café',
      add_coffee_tips2: 'Añadir consejos de café',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Flujo de agua recomendado " + x + " g";
      },
      start_add_water: 'Empiece a agregar agua',
      count_down_after_add_water: 'Cuenta regresiva después de agregar agua',
      first_time_add_water: 'Añadiendo agua por primera vez',
      second_time_add_water: 'Añadiendo agua por segunda vez',
      third_time_add_water: 'Añadiendo agua por tercera vez',
      steaming: 'Humeante',
      end: 'Fin',
      create_cookbook: 'Crear libro de cocina',
      enter_the_proportion_of_coffee: 'Ingrese la proporción de café',
      finish: 'Finalizar',
      g: 'gr',
      ml: 'ml',
      oz: 'onz',
      lb: 'lb',
      a: 'a',
      spoon: 'Cuchara',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'hora:minuto:segundo',
      please_input: 'Introducir',
      hour_: 'Hora',
      min_: 'Minuto',
      second_: 'Segundo',
      preview: 'Avance',
      add_success: 'Operatio successa',
      add_failed: 'operatio misit',
      permission_camera: 'Vade, quaeso, in parabolas, ut permissiones photographicas aperire',
      permission_photo: 'Please go to settings to open photo permissions',
      granted: 'Vade ad optiones permissiones aperire, quaeso',
      input_menu_name: 'Scribe nomen receptae, quaeso',
      loading: 'Gerund……',
      all: 'totum',
      permission_save: 'Vade, quaeso, in parabolas, ut aperire permissionem depositoris mobilis',
      save_to_photo: 'In album conservatus',
      enter_the_name_of_food: 'Intra nomen cibi',
      please_enter_the_name_of_food: 'Scribe nomen cibi, quaeso',
      please_enter_the_weight_of_food: 'Intra pondus, quaeso',
      no_name: 'Nominem',
      name_is_to_long: 'Longitudo nominis nimis longa est',
      next: 'next step',
      all_time: 'Total duration',
      water: 'Quantitas aquae',
      my_coffee: 'Manus mea potionem Arabicam faciunt',
      my_coffee_water_radio: 'Ratio caffei pulvere ad aquam',
      coffee2: 'Kahui pulvere',
      steam: 'Steaming',
      first_add_water: 'First water injection',
      second_add_water: 'Secunda injection aquae',
      ensure_delete: 'Nonne secur vis delere?',
      input_valid_weight: 'Pondo legitima, quaeso',
      ota: 'Update Firmware',
      range: 'Range'
    },
    "no": {
      had_connected: 'Tilkoblet',
      unconnected: 'Frakoblet',
      setting: 'Innstilling',
      more_setting: 'Flere innstillinger',
      featureSetting: 'Funksjonsinnstillinger',
      commonSetting: 'Vanlige innstillinger',
      device_more_activity_rename: 'Gi nytt navn',
      locationManagement: 'Lokasjonsstyring',
      shareDevice: 'Del enhet',
      device_more_activity_firmware_update: 'Se etter fastvareoppdatering',
      device_more_activity_unbind: 'Slett enhet',
      addToDesktop: 'Legg til snarvei på skrivebordet',
      licenseAndPolicy: 'Vilkår for bruk og Personvernerklæring',
      device_more_activity_feedback: 'Tilbakemelding',
      device_more_activity_license: 'Vilkår for bruk',
      device_more_activity_privacy: 'Personvernerklæring',
      delete_device: 'Slett enhet',
      security_setting: 'Sikkerhetsinnstillinger:',
      faq: 'Vanlige spørsmål',
      timing: 'Tidsutløser',
      custom: 'Egendefinert',
      repeat: 'Gjenta',
      device_action: 'Enhetshandling',
      execute_once: 'Utfør en gang',
      every_day: 'Hver dag',
      working_day: 'Hverdag',
      weekend: 'Helg',
      Monday: 'Mandag',
      Tuesday: 'Tirsdag',
      Wednesday: 'Onsdag',
      Thursday: 'Torsdag',
      Friday: 'Fredag',
      Saturday: 'Lørdag',
      Sunday: 'Søndag',
      setting_timing_tasks: 'Setter opp tidsutløste oppgaver',
      confirm: 'Bekreft',
      cancel: 'Avbryt',
      save: 'Lagre',
      close: 'Lukk',
      on: 'Åpne',
      off: 'Av',
      gear: 'Tilbehør',
      license: 'Programvarelisens- og Tjenesteavtale',
      privacy: 'Personvernavtale',
      hour: 'Time',
      min: 'Minutt',
      cur_version: 'Nåværende versjon:',
      coffee: 'Kaffe',
      balance: 'Mål',
      mine: 'Profil',
      dev_not_connected: 'Enheten er ikke tilkoblet',
      connect_tips: 'Forsikre deg om at Bluetooth på telefonen din er slått på og at batteriet er fulladet',
      none_food_menu_data: 'Ingen menydata',
      click_add_food_menu: 'Klikk på + for å starte å lage menyen din',
      delect_food_menu: 'Slett meny',
      all_select: 'Velg alle',
      data_notes: 'Datanotater',
      data_notes_none: 'Ingen måledata',
      data_notes_none_tips: 'Gå tilbake til målesiden, vei og lagre dataene dine',
      create_food_menu: 'Lag meny',
      my_cookbook: 'Min kokebok',
      not_classify: 'Ikke klassifisert',
      click_to_evaluate: 'Klikk for å legge igjen en kommentar',
      add_classify: 'Legg til kategori',
      hand_made_coffee: 'Håndbrygget kaffe',
      add_coffee_tips: 'Sett på enheten og tilbakestill\n, og legg deretter til kaffetips',
      add_coffee_tips2: 'Tillegg kaffetips',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Anbefalt vanntrykk " + x + " g";
      },
      start_add_water: 'Begynn å tilsette vann',
      count_down_after_add_water: 'Nedtelling etter tilsetning av vann',
      first_time_add_water: 'Tilsett vann for første gang',
      second_time_add_water: 'Tilsett vann for andre gang',
      third_time_add_water: 'Tilsett vann for tredje gang',
      steaming: 'Damper',
      end: 'Slutt',
      create_cookbook: 'Lag kokebok',
      enter_the_proportion_of_coffee: 'Angi andelen kaffe',
      finish: 'Fullfør',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'stk',
      spoon: 'Spoon',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'time : minutt : sekund',
      please_input: 'Angi',
      hour_: 'Time',
      min_: 'Minutt',
      second_: 'Sekund',
      preview: 'Forhåndsvis',
      add_success: 'Operasjon suksess',
      add_failed: 'operasjon mislyktes',
      permission_camera: 'Gå til settinger for å åpne kameratillatelser',
      permission_photo: 'Gå til settings for å åpne fototillatelser',
      granted: 'Gå til settings for å åpne tillatelser',
      input_menu_name: 'Vennligst skriv inn oppskriftenavnet',
      loading: 'Loading……',
      all: 'Hele',
      permission_save: 'Gå til settene for å åpne oppbevaringsbevegelsen til mobiltelefonen',
      save_to_photo: 'Redd til album',
      enter_the_name_of_food: 'Gå inn på matnavn',
      please_enter_the_name_of_food: 'Vennligst gå inn på matens navn',
      please_enter_the_weight_of_food: 'Sett inn vekt',
      no_name: 'unnamet',
      name_is_to_long: 'navnlengde er for lang',
      next: 'neste',
      all_time: 'Totalvarighet',
      water: 'Vannmannsgrad',
      my_coffee: 'Hendene mine lager kaffe',
      my_coffee_water_radio: 'Ratio av kaffepulver til vann',
      coffee2: 'Kaffe pulver',
      steam: 'Steaming',
      first_add_water: 'Første vanninjeksjon',
      second_add_water: 'Andre vanninjeksjon',
      ensure_delete: 'Er du sikker på at du vil slette?',
      input_valid_weight: 'Vennligst gå inn i juridisk vekt',
      ota: 'Firmaere oppdatering',
      range: 'Range'
    },
    "ja": {
      had_connected: '接続',
      unconnected: '未接続',
      setting: '設定',
      more_setting: 'その他の設定',
      featureSetting: '機能設定',
      commonSetting: '一般設定',
      device_more_activity_rename: '名前変更',
      locationManagement: '位置情報の管理',
      shareDevice: '共有デバイス',
      device_more_activity_firmware_update: 'ファームウェア更新の有無を確認する',
      device_more_activity_unbind: 'デバイスを削除する',
      addToDesktop: 'デスクトップショートカットを追加する',
      licenseAndPolicy: '利用規約とプライバシーポリシー',
      device_more_activity_feedback: 'フィードバック',
      device_more_activity_license: '利用規約',
      device_more_activity_privacy: 'プライバシーポリシー',
      delete_device: 'デバイスを削除する',
      security_setting: 'セキュリティ設定',
      faq: 'FAQ',
      timing: 'タイミング',
      custom: 'カスタム',
      repeat: '繰り返し',
      device_action: 'デバイスアクション',
      execute_once: '一回実行',
      every_day: '毎日',
      working_day: '営業日',
      weekend: '週末',
      Monday: '月曜日',
      Tuesday: '火曜日',
      Wednesday: '水曜日',
      Thursday: '木曜日',
      Friday: '金曜日',
      Saturday: '土曜日',
      Sunday: '日曜日',
      setting_timing_tasks: 'タイミングタスクの設定',
      confirm: '確認',
      cancel: 'キャンセル',
      save: '保存',
      close: '閉じる',
      on: '開く',
      off: 'オフ',
      gear: 'ギア',
      license: 'ソフトウェアの使用許諾およびサービス契約書',
      privacy: 'プライバシー契約書',
      hour: '時間',
      min: '分',
      cur_version: '現在のバージョン：',
      coffee: 'コーヒー',
      balance: '計量',
      mine: 'マイページ',
      dev_not_connected: 'デバイスが接続されていません',
      connect_tips: 'スマートフォンのBluetoothがオンになっており、電池が完全に充電されていることを確認してください',
      none_food_menu_data: '食事メニューデータなし',
      click_add_food_menu: '+をクリックして、食事メニューの作成を開始します',
      delect_food_menu: '食事メニューを削除する',
      all_select: 'すべて選択',
      data_notes: 'データノート',
      data_notes_none: '計量データなし',
      data_notes_none_tips: '計量ページに戻り、データを計量して保存します',
      create_food_menu: '食事メニューを作成する',
      my_cookbook: '私のクックブック',
      not_classify: '未分類',
      click_to_evaluate: 'クリックしてコメントを残す',
      add_classify: 'カテゴリを追加',
      hand_made_coffee: '手作りコーヒー',
      add_coffee_tips: 'デバイスを装着してリセットし、\ nコーヒーのヒントを追加します',
      add_coffee_tips2: 'コーヒーチップ',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u63A8\u5968\u306E\u6C34\u6D41 " + x + "g";
      },
      start_add_water: '水を加え始める',
      count_down_after_add_water: '水を加えた後のカウントダウン',
      first_time_add_water: '初めて水を追加する',
      second_time_add_water: '二回目の水を追加する',
      third_time_add_water: '三回目の水を追加する',
      steaming: '蒸す',
      end: '終了',
      create_cookbook: 'クックブックを作成する',
      enter_the_proportion_of_coffee: 'コーヒーの割合を入力する',
      finish: '終了',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: '個',
      spoon: 'スプーン',
      c_degree: '℃',
      f_degree: '℉',
      format_time: '時間：分：秒',
      please_input: '入力してください',
      hour_: '時間',
      min_: '分',
      second_: '秒',
      preview: 'プレビュー',
      add_success: '操作が成功しました',
      add_failed: '操作失敗',
      permission_camera: '設定に行ってカメラの権限を開いてください',
      permission_photo: '設定中に写真の権限を開いてください',
      granted: '設定中にパーミッションを開いてください',
      input_menu_name: 'メニュー名を入力してください',
      loading: 'ロード中……',
      all: '全部',
      permission_save: '設定中に携帯電話の保存権限を開いてください',
      save_to_photo: 'アルバムに保存しました',
      enter_the_name_of_food: '食べ物の名前を入力します',
      please_enter_the_name_of_food: '食べ物の名前を入力してください',
      please_enter_the_weight_of_food: '重さを入力してください',
      no_name: '名前がない',
      name_is_to_long: '名前が長すぎる',
      next: '次へ',
      all_time: '総時長',
      water: '水量',
      my_coffee: '私の手押しコーヒー',
      my_coffee_water_radio: 'コーヒー粉と水の割合',
      coffee2: 'コーヒー粉',
      steam: '蒸らし',
      first_add_water: '初めての注水',
      second_add_water: '第二回注水',
      ensure_delete: '削除を確認しますか?',
      input_valid_weight: '合理的な重さを入力してください',
      ota: 'ファームウェアアップグレード',
      range: '範囲'
    },
    "sw": {
      had_connected: 'Ansluten',
      unconnected: 'Inte ansluten',
      setting: 'Inställning',
      more_setting: 'Fler inställningar',
      featureSetting: 'Funktionsinställningar',
      commonSetting: 'Vanliga inställningar',
      device_more_activity_rename: 'Byt namn',
      locationManagement: 'Platshantering',
      shareDevice: 'Dela enhet',
      device_more_activity_firmware_update: 'Sök efter firmware-uppdatering',
      device_more_activity_unbind: 'Radera enhet',
      addToDesktop: 'Lägg till skrivbordsgenväg',
      licenseAndPolicy: 'Användarvillkor och Integritetspolicy',
      device_more_activity_feedback: 'Feedback',
      device_more_activity_license: 'Användarvillkor',
      device_more_activity_privacy: 'Integritetspolicy',
      delete_device: 'Radera enhet',
      security_setting: 'Säkerhetsinställningar',
      faq: 'FAQ (Vanliga frågor)',
      timing: 'Tidtagning',
      custom: 'Anpassad',
      repeat: 'Upprepa',
      device_action: 'Enhetsåtgärd',
      execute_once: 'Kör en gång',
      every_day: 'Varje dag',
      working_day: 'Arbetsdag',
      weekend: 'Helg',
      Monday: 'Måndag',
      Tuesday: 'Tisdag',
      Wednesday: 'Onsdag',
      Thursday: 'Torsdag',
      Friday: 'Fredag',
      Saturday: 'Lördag',
      Sunday: 'Söndag',
      setting_timing_tasks: 'Ställa in tidsuppgifter',
      confirm: 'Bekräfta',
      cancel: 'Avbryt',
      save: 'Spara',
      close: 'Stäng',
      on: 'Öppna',
      off: 'Av',
      gear: 'Växel',
      license: 'Programvarulicens och tjänsteavtal',
      privacy: 'Integritetsavtal',
      hour: 'Timma',
      min: 'Minut',
      cur_version: 'Aktuell version:',
      coffee: 'Kaffe',
      balance: 'Mäta',
      mine: 'Min',
      dev_not_connected: 'Enhet inte ansluten',
      connect_tips: 'Se till att telefonens Bluetooth är påslagen och att batteriet är fulladdat',
      none_food_menu_data: 'Ingen matmenyinformation',
      click_add_food_menu: 'Klicka på + för att börja skapa din matmeny',
      delect_food_menu: 'Radera matmeny',
      all_select: 'Välj alla',
      data_notes: 'Dataanteckningar',
      data_notes_none: 'Inga mätdata',
      data_notes_none_tips: 'Återgå till mätningssidan, väg och spara dina data',
      create_food_menu: 'Skapa matmeny',
      my_cookbook: 'Min kokbok',
      not_classify: 'Inte klassificerad',
      click_to_evaluate: 'Klicka för att lämna en kommentar',
      add_classify: 'Lägg till kategori',
      hand_made_coffee: 'Handmalet kaffe',
      add_coffee_tips: 'Sätt på enheten och återställ\n lägg sedan till kaffetips',
      add_coffee_tips2: 'kuongeza tiba za kahawa',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Rekommenderat vattenfl\xF6de " + x + "g\"";
      },
      start_add_water: 'Börja med att tillsätta vatten',
      count_down_after_add_water: 'Nedräkning efter tillsats av vatten',
      first_time_add_water: 'Tillsätt vatten för första gången',
      second_time_add_water: 'Tillsätt vatten för andra gången',
      third_time_add_water: 'Tillsätt vatten för tredje gången',
      steaming: 'Ångande',
      end: 'Slut',
      create_cookbook: 'Skapa kokbok',
      enter_the_proportion_of_coffee: 'Ange andelen kaffe',
      finish: 'Avsluta',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'a',
      spoon: 'Sked',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'timma:minut:sekund',
      please_input: 'Ange',
      hour_: 'Timma',
      min_: 'Minut',
      second_: 'Sekund',
      preview: 'Förhandsvisa',
      add_success: 'Operation lyckades',
      add_failed: 'operation misslyckades',
      permission_camera: 'Gå till inställningar för att öppna kamerarättigheter',
      permission_photo: 'Gå till inställningar för att öppna fotorättigheter',
      granted: 'Gå till inställningar för att öppna rättigheter',
      input_menu_name: 'Ange receptets namn',
      loading: 'lastning……',
      all: 'alla',
      permission_save: 'Gå till inställningar för att öppna lagringstillståndet för mobiltelefon',
      save_to_photo: 'sparad till album',
      enter_the_name_of_food: 'Skriv in livsmedlets namn',
      please_enter_the_name_of_food: 'Ange namnet på maten',
      please_enter_the_weight_of_food: 'Ange vikten',
      no_name: 'Namnlös',
      name_is_to_long: 'namnlängden är för lång',
      next: 'Nästa',
      all_time: 'Total varaktighet',
      water: 'Vattenvolym',
      my_coffee: 'Mina händer gör kaffe',
      my_coffee_water_radio: 'Förhållandet mellan kaffepulver och vatten',
      coffee2: 'kaffepulver',
      steam: 'ångning',
      first_add_water: 'Första vatteninjektionen',
      second_add_water: 'Andra injektioner med vatten',
      ensure_delete: 'Är du säker på att du vill ta bort?',
      input_valid_weight: 'Ange den juridiska vikten',
      ota: 'uppgradering av firmware',
      range: 'intervall'
    },
    "zh-tw": {
      had_connected: '已連接',
      unconnected: '未連接',
      setting: '設定',
      more_setting: '更多設定',
      featureSetting: '功能設定',
      commonSetting: '常用設定',
      device_more_activity_rename: '重新命名',
      locationManagement: '位置管理',
      shareDevice: '共用裝置',
      device_more_activity_firmware_update: '檢查韌體更新',
      device_more_activity_unbind: '刪除裝置',
      addToDesktop: '新增桌面捷徑',
      licenseAndPolicy: '使用條款和隱私政策',
      device_more_activity_feedback: '意見反應',
      device_more_activity_license: '使用條款',
      device_more_activity_privacy: '隱私政策',
      delete_device: '刪除裝置',
      security_setting: '安全設定',
      faq: '常見問題集',
      timing: '計時',
      custom: '自訂',
      repeat: '重複',
      device_action: '裝置動作',
      execute_once: '執行一次',
      every_day: '每天',
      working_day: '工作日',
      weekend: '週末',
      Monday: '星期一',
      Tuesday: '星期二',
      Wednesday: '星期三',
      Thursday: '星期四',
      Friday: '星期五',
      Saturday: '星期六',
      Sunday: '星期日',
      setting_timing_tasks: '設定計時任務',
      confirm: '確認',
      cancel: '取消',
      save: '儲存',
      close: '關閉',
      on: '開啟',
      off: '關閉',
      gear: '齒輪',
      license: '軟體授權及服務協議',
      privacy: '隱私協議',
      hour: '小時',
      min: '分鐘',
      cur_version: '目前版本:',
      coffee: '咖啡',
      balance: '測量',
      mine: '我的',
      dev_not_connected: '裝置未連接',
      connect_tips: '請確保您的手機藍牙已開啟且電池充滿電',
      none_food_menu_data: '無食譜資料',
      click_add_food_menu: '按一下 + 開始建立您的食譜',
      delect_food_menu: '刪除食譜',
      all_select: '全選',
      data_notes: '資料筆記',
      data_notes_none: '無測量資料',
      data_notes_none_tips: '返回測量頁面，秤重並儲存資料',
      create_food_menu: '建立食譜',
      my_cookbook: '我的食譜',
      not_classify: '未分類',
      click_to_evaluate: '按一下留言',
      add_classify: '新增類別',
      hand_made_coffee: '手工咖啡',
      add_coffee_tips: '放上裝置並重設\n 然後放入咖啡',
      add_coffee_tips2: '添加咖啡提示',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u5EFA\u8B70\u6C34\u91CF " + x + " \u514B";
      },
      start_add_water: '開始加水',
      count_down_after_add_water: '加水後倒計時',
      first_time_add_water: '第一次加水',
      second_time_add_water: '第二次加水',
      third_time_add_water: '第三次加水',
      steaming: '蒸煮',
      end: '結束',
      create_cookbook: '建立食譜',
      enter_the_proportion_of_coffee: '輸入咖啡比例',
      finish: '完成',
      g: '克',
      ml: '毫升',
      oz: '盎司',
      lb: '磅',
      a: 'a',
      spoon: '勺',
      c_degree: '攝氏度',
      f_degree: '華氏',
      format_time: '小時:分鐘:秒',
      please_input: '請輸入',
      hour_: '小時',
      min_: '分鐘',
      second_: '秒',
      preview: '預覽',
      add_success: '操作成功',
      add_failed: '操作失敗',
      permission_camera: '請前往設定中開啟相機許可權',
      permission_photo: '請前往設定中開啟照片許可權',
      granted: '請前往設定中開啟許可權',
      input_menu_name: '請輸入食譜名稱',
      loading: '加載中……',
      all: '全部',
      permission_save: '請前往設定中開啟手機存儲許可權',
      save_to_photo: '已保存到相册',
      enter_the_name_of_food: '輸入食物名稱',
      please_enter_the_name_of_food: '請輸入食物名稱',
      please_enter_the_weight_of_food: '請輸入重量',
      no_name: '未命名',
      name_is_to_long: '名稱長度過長',
      next: '下一步',
      all_time: '總時長',
      water: '水量',
      my_coffee: '我的手冲咖啡',
      my_coffee_water_radio: '咖啡粉與水的比例',
      coffee2: '咖啡粉',
      steam: '悶蒸',
      first_add_water: '第一次注水',
      second_add_water: '第二次注水',
      ensure_delete: '是否確認删除?',
      input_valid_weight: '請輸入合法的重量',
      ota: '固件升级',
      range: '範圍'
    },
    "zh-hk": {
      had_connected: '已連接',
      unconnected: '未連接',
      setting: '設定',
      more_setting: '更多設定',
      featureSetting: '功能設定',
      commonSetting: '常用設定',
      device_more_activity_rename: '重新命名',
      locationManagement: '位置管理',
      shareDevice: '共用裝置',
      device_more_activity_firmware_update: '檢查韌體更新',
      device_more_activity_unbind: '刪除裝置',
      addToDesktop: '新增桌面捷徑',
      licenseAndPolicy: '使用條款和隱私政策',
      device_more_activity_feedback: '意見反應',
      device_more_activity_license: '使用條款',
      device_more_activity_privacy: '隱私政策',
      delete_device: '刪除裝置',
      security_setting: '安全設定',
      faq: '常見問題集',
      timing: '計時',
      custom: '自訂',
      repeat: '重複',
      device_action: '裝置動作',
      execute_once: '執行一次',
      every_day: '每天',
      working_day: '工作日',
      weekend: '週末',
      Monday: '星期一',
      Tuesday: '星期二',
      Wednesday: '星期三',
      Thursday: '星期四',
      Friday: '星期五',
      Saturday: '星期六',
      Sunday: '星期日',
      setting_timing_tasks: '設定計時任務',
      confirm: '確認',
      cancel: '取消',
      save: '儲存',
      close: '關閉',
      on: '開啟',
      off: '關閉',
      gear: '齒輪',
      license: '軟體授權及服務協議',
      privacy: '隱私協議',
      hour: '小時',
      min: '分鐘',
      cur_version: '目前版本:',
      coffee: '咖啡',
      balance: '測量',
      mine: '我的',
      dev_not_connected: '裝置未連接',
      connect_tips: '請確保您的手機藍牙已開啟且電池充滿電',
      none_food_menu_data: '無食譜資料',
      click_add_food_menu: '按一下 + 開始建立您的食譜',
      delect_food_menu: '刪除食譜',
      all_select: '全選',
      data_notes: '資料筆記',
      data_notes_none: '無測量資料',
      data_notes_none_tips: '返回測量頁面，秤重並儲存資料',
      create_food_menu: '建立食譜',
      my_cookbook: '我的食譜',
      not_classify: '未分類',
      click_to_evaluate: '按一下留言',
      add_classify: '新增類別',
      hand_made_coffee: '手工咖啡',
      add_coffee_tips: '放上裝置並重設\n 然後放入咖啡',
      add_coffee_tips2: '添加咖啡提示',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u5EFA\u8B70\u6C34\u91CF " + x + " \u514B";
      },
      start_add_water: '開始加水',
      count_down_after_add_water: '加水後倒計時',
      first_time_add_water: '第一次加水',
      second_time_add_water: '第二次加水',
      third_time_add_water: '第三次加水',
      steaming: '蒸煮',
      end: '結束',
      create_cookbook: '建立食譜',
      enter_the_proportion_of_coffee: '輸入咖啡比例',
      finish: '完成',
      g: '克',
      ml: '毫升',
      oz: '盎司',
      lb: '磅',
      a: 'a',
      spoon: '勺',
      c_degree: '攝氏度',
      f_degree: '華氏',
      format_time: '小時:分鐘:秒',
      please_input: '請輸入',
      hour_: '小時',
      min_: '分鐘',
      second_: '秒',
      preview: '預覽',
      add_success: '操作成功',
      add_failed: '操作失敗',
      permission_camera: '請前往設定中開啟相機許可權',
      permission_photo: '請前往設定中開啟照片許可權',
      granted: '請前往設定中開啟許可權',
      input_menu_name: '請輸入食譜名稱',
      loading: '加載中……',
      all: '全部',
      permission_save: '請前往設定中開啟手機存儲許可權',
      save_to_photo: '已保存到相册',
      enter_the_name_of_food: '輸入食物名稱',
      please_enter_the_name_of_food: '請輸入食物名稱',
      please_enter_the_weight_of_food: '請輸入重量',
      no_name: '未命名',
      name_is_to_long: '名稱長度過長',
      next: '下一步',
      all_time: '總時長',
      water: '水量',
      my_coffee: '我的手冲咖啡',
      my_coffee_water_radio: '咖啡粉與水的比例',
      coffee2: '咖啡粉',
      steam: '悶蒸',
      first_add_water: '第一次注水',
      second_add_water: '第二次注水',
      ensure_delete: '是否確認删除?',
      input_valid_weight: '請輸入合法的重量',
      ota: '固件升级',
      range: '範圍'
    },
    "zh-Hans-CN": {
      had_connected: '已連接',
      unconnected: '未連接',
      setting: '設定',
      more_setting: '更多設定',
      featureSetting: '功能設定',
      commonSetting: '常用設定',
      device_more_activity_rename: '重新命名',
      locationManagement: '位置管理',
      shareDevice: '共用裝置',
      device_more_activity_firmware_update: '檢查韌體更新',
      device_more_activity_unbind: '刪除裝置',
      addToDesktop: '新增桌面捷徑',
      licenseAndPolicy: '使用條款和隱私政策',
      device_more_activity_feedback: '意見反應',
      device_more_activity_license: '使用條款',
      device_more_activity_privacy: '隱私政策',
      delete_device: '刪除裝置',
      security_setting: '安全設定',
      faq: '常見問題集',
      timing: '計時',
      custom: '自訂',
      repeat: '重複',
      device_action: '裝置動作',
      execute_once: '執行一次',
      every_day: '每天',
      working_day: '工作日',
      weekend: '週末',
      Monday: '星期一',
      Tuesday: '星期二',
      Wednesday: '星期三',
      Thursday: '星期四',
      Friday: '星期五',
      Saturday: '星期六',
      Sunday: '星期日',
      setting_timing_tasks: '設定計時任務',
      confirm: '確認',
      cancel: '取消',
      save: '儲存',
      close: '關閉',
      on: '開啟',
      off: '關閉',
      gear: '齒輪',
      license: '軟體授權及服務協議',
      privacy: '隱私協議',
      hour: '小時',
      min: '分鐘',
      cur_version: '目前版本:',
      coffee: '咖啡',
      balance: '測量',
      mine: '我的',
      dev_not_connected: '裝置未連接',
      connect_tips: '請確保您的手機藍牙已開啟且電池充滿電',
      none_food_menu_data: '無食譜資料',
      click_add_food_menu: '按一下 + 開始建立您的食譜',
      delect_food_menu: '刪除食譜',
      all_select: '全選',
      data_notes: '資料筆記',
      data_notes_none: '無測量資料',
      data_notes_none_tips: '返回測量頁面，秤重並儲存資料',
      create_food_menu: '建立食譜',
      my_cookbook: '我的食譜',
      not_classify: '未分類',
      click_to_evaluate: '按一下留言',
      add_classify: '新增類別',
      hand_made_coffee: '手工咖啡',
      add_coffee_tips: '放上裝置並重設\n 然後放入咖啡',
      add_coffee_tips2: '添加咖啡提示',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\u5EFA\u8B70\u6C34\u91CF " + x + " \u514B";
      },
      start_add_water: '開始加水',
      count_down_after_add_water: '加水後倒計時',
      first_time_add_water: '第一次加水',
      second_time_add_water: '第二次加水',
      third_time_add_water: '第三次加水',
      steaming: '蒸煮',
      end: '結束',
      create_cookbook: '建立食譜',
      enter_the_proportion_of_coffee: '輸入咖啡比例',
      finish: '完成',
      g: '克',
      ml: '毫升',
      oz: '盎司',
      lb: '磅',
      a: 'a',
      spoon: '勺',
      c_degree: '攝氏度',
      f_degree: '華氏',
      format_time: '小時:分鐘:秒',
      please_input: '請輸入',
      hour_: '小時',
      min_: '分鐘',
      second_: '秒',
      preview: '預覽',
      add_success: '操作成功',
      add_failed: '操作失敗',
      permission_camera: '請前往設定中開啟相機許可權',
      permission_photo: '請前往設定中開啟照片許可權',
      granted: '請前往設定中開啟許可權',
      input_menu_name: '請輸入食譜名稱',
      loading: '加載中……',
      all: '全部',
      permission_save: '請前往設定中開啟手機存儲許可權',
      save_to_photo: '已保存到相册',
      enter_the_name_of_food: '輸入食物名稱',
      please_enter_the_name_of_food: '請輸入食物名稱',
      please_enter_the_weight_of_food: '請輸入重量',
      no_name: '未命名',
      name_is_to_long: '名稱長度過長',
      next: '下一步',
      all_time: '總時長',
      water: '水量',
      my_coffee: '我的手冲咖啡',
      my_coffee_water_radio: '咖啡粉與水的比例',
      coffee2: '咖啡粉',
      steam: '悶蒸',
      first_add_water: '第一次注水',
      second_add_water: '第二次注水',
      ensure_delete: '是否確認删除?',
      input_valid_weight: '請輸入合法的重量',
      ota: '固件升级',
      range: '範圍'
    },
    "tr": {
      had_connected: 'Bağlandı',
      unconnected: 'Bağlanmadı',
      setting: 'Ayar',
      more_setting: 'Diğer ayarlar',
      featureSetting: 'Özellik ayarları',
      commonSetting: 'Genel ayarlar',
      device_more_activity_rename: 'Yeniden adlandır',
      locationManagement: 'Konum yönetimi',
      shareDevice: 'Cihazı paylaş',
      device_more_activity_firmware_update: 'Aygıt yazılımı güncellemelerini kontrol et',
      device_more_activity_unbind: 'Cihazı sil',
      addToDesktop: 'Masaüstü kısayolu ekle',
      licenseAndPolicy: 'Kullanım Koşulları ve Gizlilik Politikası',
      device_more_activity_feedback: 'Geri bildirim',
      device_more_activity_license: 'Kullanım Koşulları',
      device_more_activity_privacy: 'Gizlilik İlkesi',
      delete_device: 'Cihazı sil',
      security_setting: 'Güvenlik ayarları',
      faq: 'SSS',
      timing: 'Zamanlama',
      custom: 'Özel',
      repeat: 'Tekrarla',
      device_action: 'Cihaz eylemi',
      execute_once: 'Bir kez uygula',
      every_day: 'Her gün',
      working_day: 'İş günleri',
      weekend: 'Hafta sonu',
      Monday: 'Pazartesi',
      Tuesday: 'Salı',
      Wednesday: 'Çarşamba',
      Thursday: 'Perşembe',
      Friday: 'Cuma',
      Saturday: 'Cumartesi',
      Sunday: 'Pazar',
      setting_timing_tasks: 'Zamanlama görevlerini ayarlama',
      confirm: 'Onayla',
      cancel: 'İptal',
      save: 'Kaydet',
      close: 'Kapatma',
      on: 'Açma',
      off: 'Kapalı',
      gear: 'Seviye',
      license: 'Yazılım Lisans ve Hizmet Anlaşması',
      privacy: 'Gizlilik Sözleşmesi',
      hour: 'Saat',
      min: 'Dakika',
      cur_version: 'Geçerli sürüm:',
      coffee: 'Kahve',
      balance: 'Ölçüm',
      mine: 'Profil',
      dev_not_connected: 'Cihaz bağlı değil',
      connect_tips: 'Lütfen telefonunuzun Bluetooth\'unun açık olduğundan ve pilin tamamen dolu olduğundan emin olun',
      none_food_menu_data: 'Yemek menüsü verisi yok',
      click_add_food_menu: 'Yemek menünüzü oluşturmaya başlamak için + simgesine tıklayın',
      delect_food_menu: 'Yemek menüsünü sil',
      all_select: 'Tümünü seç',
      data_notes: 'Veri notları',
      data_notes_none: 'Ölçüm verisi yok',
      data_notes_none_tips: 'Ölçme sayfasına dönün, verilerinizi tartın ve kaydedin',
      create_food_menu: 'Yemek menüsü oluştur',
      my_cookbook: 'Yemek kitabım',
      not_classify: 'Sınıflandırılmamış',
      click_to_evaluate: 'Yorum bırakmak için tıklayın',
      add_classify: 'Kategori ekle',
      hand_made_coffee: 'El yapımı kahve',
      add_coffee_tips: 'Cihazı takın ve sıfırlayın\n ardından kahve ipuçlarını ekleyin',
      add_coffee_tips2: 'kahve tipleri ekle',
      recommend_water_flow: function recommend_water_flow(x) {
        return "\xD6nerilen su ak\u0131\u015F\u0131 " + x + "g";
      },
      start_add_water: 'Su eklemeye başlayın',
      count_down_after_add_water: 'Su ekledikten sonra geri sayım',
      first_time_add_water: 'İlk kez su ekleme',
      second_time_add_water: 'İkinci kez su ekleme',
      third_time_add_water: 'Üçüncü kez su ekleme',
      steaming: 'Buharlama',
      end: 'Sonlandır',
      create_cookbook: 'Yemek kitabı oluştur',
      enter_the_proportion_of_coffee: 'Kahve oranını girin',
      finish: 'Bitti',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'parça',
      spoon: 'Kaşık',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'saat: dakika: saniye',
      please_input: 'Lütfen girin',
      hour_: 'Saat',
      min_: 'Dakika',
      second_: 'Saniye',
      preview: 'Önizleme',
      add_success: 'Operasyon başarılı',
      add_failed: 'işlem başarısız',
      permission_camera: 'Lütfen kamera izinlerini açmak için ayarlara git',
      permission_photo: 'Lütfen fotoğraf izinlerini açmak için ayarlarına git',
      granted: 'Lütfen izin açılmak için ayarlama girin',
      input_menu_name: 'Lütfen tarif ismini girin',
      loading: 'loading……',
      all: 'heps',
      permission_save: 'Lütfen cep telefonun depolama iznini açmak için ayarlara git',
      save_to_photo: 'albüme kaydedildi',
      enter_the_name_of_food: 'Yemek adını girin',
      please_enter_the_name_of_food: 'Lütfen yemeğin ismini girin',
      please_enter_the_weight_of_food: 'Lütfen ağırlığı girin',
      no_name: 'isimsiz',
      name_is_to_long: 'isim uzunluğu çok uzun',
      next: 'Sonraki',
      all_time: 'tamamen uzunluğu',
      water: 'suyun sesi',
      my_coffee: 'elim kahve yapıyor',
      my_coffee_water_radio: 'Kahve pulunun suyla ilişkisi',
      coffee2: 'kahve pulu',
      steam: 'steaming',
      first_add_water: 'ilk su injeksiyonu',
      second_add_water: 'ikinci su injeksiyonu',
      ensure_delete: 'Silmek istediğinizden emin misiniz?',
      input_valid_weight: 'Lütfen yasal kilo girin',
      ota: 'firmware geliştirmesi',
      range: 'range'
    },
    "es": {
      had_connected: 'Conectado',
      unconnected: 'No conectado',
      setting: 'Configurando',
      more_setting: 'Más ajustes',
      featureSetting: 'Ajustes de las características',
      commonSetting: 'Ajustes comunes',
      device_more_activity_rename: 'Renombrar',
      locationManagement: 'Gestión de localización',
      shareDevice: 'Compartir dispositivo',
      device_more_activity_firmware_update: 'Buscar actualización de firmware',
      device_more_activity_unbind: 'Eliminar el dispositivo',
      addToDesktop: 'Añadir acceso directo en el escritorio',
      licenseAndPolicy: 'Términos de servicio y Política de privacidad',
      device_more_activity_feedback: 'Comentarios',
      device_more_activity_license: 'Términos de uso',
      device_more_activity_privacy: 'Política de Privacidad',
      delete_device: 'Borrar el dispositivo',
      security_setting: 'Ajustes de seguridad',
      faq: 'Preguntas frecuentes',
      timing: 'Hora',
      custom: 'Personalizado',
      repeat: 'Repetir',
      device_action: 'Acción del dispositivo',
      execute_once: 'Ejecutar una vez',
      every_day: 'Todos los días',
      working_day: 'Días laborables',
      weekend: 'Fines de semana',
      Monday: 'Lunes',
      Tuesday: 'Martes',
      Wednesday: 'Miércoles',
      Thursday: 'Jueves',
      Friday: 'Viernes',
      Saturday: 'Sábado',
      Sunday: 'Domingo',
      setting_timing_tasks: 'Fijación de las tareas de temporización',
      confirm: 'Confirmar',
      cancel: 'Cancelar',
      save: 'Guardar',
      close: 'Cerrar',
      on: 'Abrir',
      off: 'Apagado',
      gear: 'Engranaje',
      license: 'Acuerdo de Licencia de Software y de Servicio',
      privacy: 'Acuerdo de privacidad',
      hour: 'Hora',
      min: 'Minuto',
      cur_version: 'Versión actual:',
      coffee: 'Café',
      balance: 'Medir',
      mine: 'Mina',
      dev_not_connected: 'Dispositivo no conectado',
      connect_tips: 'Por favor, asegúrese de que el Bluetooth de su teléfono está activado y la batería está completamente cargada',
      none_food_menu_data: 'No hay datos del menú de comida',
      click_add_food_menu: 'Haz clic en + para empezar a crear tu menú de comida',
      delect_food_menu: 'Eliminar el menú de comida',
      all_select: 'Seleccionar todo',
      data_notes: 'Notas de datos',
      data_notes_none: 'No hay datos de medición',
      data_notes_none_tips: 'Volver a la página de medidas, pesar y guardar los datos',
      create_food_menu: 'Crear menú de comida',
      my_cookbook: 'Mi libro de cocina',
      not_classify: 'No clasificado',
      click_to_evaluate: 'Haga clic para dejar un comentario',
      add_classify: 'Añadir categoría',
      hand_made_coffee: 'Café hecho a mano',
      add_coffee_tips: 'Poner en el dispositivo y reset\n luego añadir consejos de café',
      add_coffee_tips2: 'Añadir consejos de café',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Caudal de agua recomendado " + x + "g";
      },
      start_add_water: 'Empezar a añadir agua',
      count_down_after_add_water: 'Cuenta atrás después de añadir agua',
      first_time_add_water: 'Añadir agua por primera vez',
      second_time_add_water: 'Añadir agua por segunda vez',
      third_time_add_water: 'Añadir agua por tercera vez',
      steaming: 'Cocinando al vapor',
      end: 'Fin',
      create_cookbook: 'Crear libro de cocina',
      enter_the_proportion_of_coffee: 'Introduzca la proporción de café',
      finish: 'Finalizado',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'a',
      spoon: 'Cuchara',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'hora: minuto: segundo',
      please_input: 'Por favor, introduzca',
      hour_: 'Hora',
      min_: 'Minuto',
      second_: 'Segundo',
      preview: 'Previsualizar',
      add_success: 'Operación exitosa',
      add_failed: 'La operación falló',
      permission_camera: 'por favor, vaya a la configuración para activar los permisos de la Cámara',
      permission_photo: 'por favor, vaya a la configuración y abra los permisos de la foto',
      granted: 'por favor, vaya a la configuración y abra los permisos',
      input_menu_name: 'introduzca el nombre de la receta',
      loading: 'Cargando……',
      all: 'all',
      permission_save: 'por favor, vaya a la configuración para activar los permisos de almacenamiento del teléfono',
      save_to_photo: 'guardada en el álbum',
      enter_the_name_of_food: ' introduzca el nombre del alimento',
      please_enter_the_name_of_food: 'Introduzca el nombre del alimento',
      please_enter_the_weight_of_food: 'Por favor, introduzca el peso',
      no_name: 'Sin Nombre',
      name_is_to_long: 'El nombre es demasiado largo',
      next: 'Siguiente',
      all_time: 'duración total',
      water: 'cantidad de agua',
      my_coffee: 'Mi mano hace café',
      my_coffee_water_radio: 'relación entre el café en polvo y el agua',
      coffee2: 'café en polvo',
      steam: 'vapor sofocante',
      first_add_water: 'primera inyección de agua',
      second_add_water: ' segunda inyección de agua',
      ensure_delete: 'está seguro de borrar?',
      input_valid_weight: 'introduzca un peso válido',
      ota: 'actualización del firmware',
      range: 'rango'
    },
    "it": {
      had_connected: 'Connesso',
      unconnected: 'Scollegato',
      setting: 'Impostazione',
      more_setting: 'Impostazioni aggiuntive',
      featureSetting: 'Impostazioni funzione',
      commonSetting: 'Impostazioni comuni',
      device_more_activity_rename: 'Rinomina',
      locationManagement: 'Gestione delle sedi',
      shareDevice: 'Condividi dispositivo',
      device_more_activity_firmware_update: 'Controlla se sono disponibili aggiornamenti del firmware',
      device_more_activity_unbind: 'Elimina dispositivo',
      addToDesktop: 'Aggiungi collegamento desktop',
      licenseAndPolicy: 'Termini di utilizzo dell’informativa sulla privacy',
      device_more_activity_feedback: 'Feedback',
      device_more_activity_license: 'Termini di utilizzo',
      device_more_activity_privacy: 'Informativa sulla privacy',
      delete_device: 'Elimina dispositivo',
      security_setting: 'Impostazioni di sicurezza',
      faq: 'Domande Frequenti',
      timing: 'Cronometraggio',
      custom: 'Personalizza',
      repeat: 'Ripeti',
      device_action: 'Azione dispositivo',
      execute_once: 'Esegui una volta',
      every_day: 'Ogni giorno',
      working_day: 'Giorni lavorativi',
      weekend: 'Finesettimana',
      Monday: 'Lunedì',
      Tuesday: 'Martedì',
      Wednesday: 'Mercoledì',
      Thursday: 'Giovedì',
      Friday: 'Venerdì',
      Saturday: 'Sabato',
      Sunday: 'Domenica',
      setting_timing_tasks: 'Impostazione dei compiti di cronometraggio',
      confirm: 'Conferma',
      cancel: 'Cancella',
      save: 'Salva',
      close: 'Chiudi',
      on: 'Aprire',
      off: 'Disattivato',
      gear: 'Ingranaggio',
      license: 'Contratto Licenza Software e Contratto di Assistenza',
      privacy: 'Accordo di riservatezza',
      hour: 'Ora',
      min: 'Minuto',
      cur_version: 'Versione in uso:',
      coffee: 'Caffè',
      balance: 'Misura',
      mine: 'Profilo',
      dev_not_connected: 'Dispositivo non connesso',
      connect_tips: 'Assicurarsi che il Bluetooth del telefono sia acceso e che la batteria sia completamente carica.',
      none_food_menu_data: 'Nessun dato sul menu',
      click_add_food_menu: 'Clicca su + per iniziare a creare il tuo menu',
      delect_food_menu: 'Cancellare il menu',
      all_select: 'Seleziona tutto',
      data_notes: 'Note sui dati',
      data_notes_none: 'Nessun dato di misurazione',
      data_notes_none_tips: 'Torna alla pagina delle misurazioni, pesa e salva i dati',
      create_food_menu: 'Creare il menu',
      my_cookbook: 'Il mio libro di cucina',
      not_classify: 'Non classificato',
      click_to_evaluate: 'Clicca per lasciare un commento',
      add_classify: 'Aggiungere categoria',
      hand_made_coffee: 'Caffè artigianale',
      add_coffee_tips: 'Mettere il dispositivo e resettare\n poi aggiungere le punte di caffè',
      add_coffee_tips2: 'aggiungere punte di caffè',
      recommend_water_flow: function recommend_water_flow(x) {
        return "Flusso d'acqua raccomandato " + x + "g";
      },
      start_add_water: 'Iniziare ad aggiungere acqua',
      count_down_after_add_water: 'Conto alla rovescia dopo l\'aggiunta di acqua',
      first_time_add_water: 'Aggiungere acqua per la prima volta',
      second_time_add_water: 'Aggiungere acqua per la seconda volta',
      third_time_add_water: 'Aggiungere acqua per la terza volta',
      steaming: 'Vapore',
      end: 'Fine',
      create_cookbook: 'Creare un libro di cucina',
      enter_the_proportion_of_coffee: 'Inserire la proporzione di caffè',
      finish: 'Completato',
      g: 'g',
      ml: 'ml',
      oz: 'oz',
      lb: 'lb',
      a: 'pezzo',
      spoon: 'Cucchiaio',
      c_degree: '℃',
      f_degree: '℉',
      format_time: 'Ora: minuto: secondo',
      please_input: 'Inserire',
      hour_: 'Ora',
      min_: 'Minuto',
      second_: 'Secondo',
      preview: 'Anteprima',
      add_success: 'Funzionamento riuscito',
      add_failed: 'operazione fallita',
      permission_camera: 'Per favore vai alle impostazioni per aprire i permessi delle telecamere',
      permission_photo: 'Per favore vai alle impostazioni per aprire i permessi di foto',
      granted: 'Per favore vai alle impostazioni per aprire i permessi',
      input_menu_name: 'Inserite il nome della ricetta',
      loading: 'carico……',
      all: 'Tutti',
      permission_save: 'accedere alle impostazioni per aprire il permesso di archiviazione del cellulare',
      save_to_photo: 'salvata all\'album',
      enter_the_name_of_food: 'inserire nome alimentare',
      please_enter_the_name_of_food: 'Inserite il nome del cibo',
      please_enter_the_weight_of_food: 'per favore peso di input',
      no_name: 'senza nome',
      name_is_to_long: 'lunghezza del nome è troppo lunga',
      next: 'passo successivo',
      all_time: 'durata totale',
      water: 'volume d\'acqua',
      my_coffee: 'La mia mano fa il caffè',
      my_coffee_water_radio: 'rapporto di polvere da caffè con acqua',
      coffee2: 'polvere di caffè',
      steam: 'vapore',
      first_add_water: 'prima iniezione d\'acqua',
      second_add_water: 'seconda iniezione d\'acqua',
      ensure_delete: 'Sei sicuro di voler cancellare?',
      input_valid_weight: 'indicare il peso giuridico',
      ota: 'upgrade firmware',
      range: 'range'
    }
  });

  exports.default = _default;
},10037,[14305,10040]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _miot = _$$_REQUIRE(_dependencyMap[4]);

  var localization = _miot.Host.locale.language;

  if (!localization) {}

  var interfaceLanguage = localization.replace(/_/g, '-');

  var LocalizedStrings = function () {
    (0, _createClass2.default)(LocalizedStrings, [{
      key: "_getBestMatchingLanguage",
      value: function _getBestMatchingLanguage(language, props) {
        if (props[language]) return language;
        var idx = language.lastIndexOf("-");

        if (idx >= 0) {
          language = language.substring(0, idx);
          return this._getBestMatchingLanguage(language, props);
        }

        return Object.keys(props)[0];
      }
    }]);

    function LocalizedStrings(props) {
      (0, _classCallCheck2.default)(this, LocalizedStrings);
      this.props = props;
      this.setLanguage(interfaceLanguage);
    }

    (0, _createClass2.default)(LocalizedStrings, [{
      key: "setContent",
      value: function setContent(props) {
        this.props = props;
        this.setLanguage(this.language);
      }
    }, {
      key: "setLanguage",
      value: function setLanguage(language) {
        var bestLanguage = this._getBestMatchingLanguage(language, this.props);

        var defaultLanguage = Object.keys(this.props)[0];
        this.language = bestLanguage;

        if (this.props[bestLanguage]) {
          var localizedStrings = (0, _extends2.default)({}, this.props[defaultLanguage], this.props[this.language]);

          for (var key in localizedStrings) {
            if (localizedStrings.hasOwnProperty(key)) {
              this[key] = localizedStrings[key];
            }
          }

          if (defaultLanguage !== this.language) {
            localizedStrings = this.props[defaultLanguage];

            this._fallbackValues(localizedStrings, this);
          }
        }
      }
    }, {
      key: "_fallbackValues",
      value: function _fallbackValues(defaultStrings, strings) {
        for (var key in defaultStrings) {
          if (defaultStrings.hasOwnProperty(key) && !strings[key]) {
            strings[key] = defaultStrings[key];
          } else {
            if (typeof strings[key] != "string") {
              this._fallbackValues(defaultStrings[key], strings[key]);
            }
          }
        }
      }
    }, {
      key: "getLanguage",
      value: function getLanguage() {
        return this.language;
      }
    }, {
      key: "getInterfaceLanguage",
      value: function getInterfaceLanguage() {
        return interfaceLanguage;
      }
    }, {
      key: "getLocaleObject",
      value: function getLocaleObject() {
        return this.props;
      }
    }, {
      key: "getAvailableLanguages",
      value: function getAvailableLanguages() {
        if (!this.availableLanguages) {
          this.availableLanguages = [];

          for (var language in this.props) {
            this.availableLanguages.push(language);
          }
        }

        return this.availableLanguages;
      }
    }, {
      key: "formatString",
      value: function formatString(str) {
        var res = str;

        for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
          res = this._replaceAll("{" + i + "}", i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1], res);
        }

        return res;
      }
    }, {
      key: "getString",
      value: function getString(key, language) {
        try {
          return this.props[language][key];
        } catch (ex) {}

        return null;
      }
    }, {
      key: "_replaceAll",
      value: function _replaceAll(original, replacement, str) {
        original = original.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
        replacement = ("" + replacement).replace(/([$])/g, '$$$$');
        return str.replace(new RegExp(original, 'g'), replacement);
      }
    }]);
    return LocalizedStrings;
  }();

  module.exports = LocalizedStrings;
},10040,[14305,14344,14320,14323,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = showToast;

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var isShow = false;

  function showToast(message) {
    if (!isShow) {
      _reactNativeRootToast.default.show(message, {
        duration: 2000,
        position: _reactNativeRootToast.default.positions.BOTTOM,
        shadow: true,
        onShow: function onShow() {
          isShow = true;
        },
        onShown: function onShown() {},
        onHide: function onHide() {},
        onHidden: function onHidden() {
          isShow = false;
        }
      });
    }
  }
},10043,[14305,10010]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[3]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  var dataNotesFileName = 'dataNotes';
  var classifyFileName = 'classify';
  var menuFileName = 'menu';

  var Helper = function () {
    function Helper() {
      (0, _classCallCheck2.default)(this, Helper);
    }

    (0, _createClass2.default)(Helper, null, [{
      key: "_insertDataNotes",
      value: function _insertDataNotes(unitValue, unit, value, date) {
        var _this = this;

        var tempArray = [];
        var responseData = [];

        _miotSdk.Host.file.readFile(dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_this.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push(item);
          });
          tempArray.push({
            unitValue: unitValue,
            unit: unit,
            value: value,
            date: date
          });

          var saveData = _this.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(dataNotesFileName, saveData).then(function (r) {}).catch(function (err) {});
        }).catch(function (isSuccess) {
          tempArray.push({
            unitValue: unitValue,
            unit: unit,
            value: value,
            date: date
          });

          var saveData = _this.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(dataNotesFileName, saveData).then(function (r) {}).catch(function (err) {});
        });
      }
    }, {
      key: "_getDataNotes",
      value: function _getDataNotes() {
        var _this2 = this;

        var responseData = [];

        _miotSdk.Host.file.readFile(dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_this2.hexCharCodeToStr(utf8Content));
        }).catch(function (isSuccess) {});

        return responseData;
      }
    }, {
      key: "strToHexCharCode",
      value: function strToHexCharCode(str) {
        if (str === "") return "";
        var hexCharCode = [];
        hexCharCode.push("0x");

        for (var i = 0; i < str.length; i++) {
          hexCharCode.push(str.charCodeAt(i).toString(16));
        }

        return hexCharCode.join("");
      }
    }, {
      key: "hexCharCodeToStr",
      value: function hexCharCodeToStr(hexCharCodeStr) {
        var trimedStr = hexCharCodeStr.trim();
        var rawStr = trimedStr.substr(0, 2).toLowerCase() === "0x" ? trimedStr.substr(2) : trimedStr;
        var len = rawStr.length;

        if (len % 2 !== 0) {
          alert("Illegal Format ASCII Code!");
          return "";
        }

        var curCharCode;
        var resultStr = [];

        for (var i = 0; i < len; i = i + 2) {
          curCharCode = parseInt(rawStr.substr(i, 2), 16);
          resultStr.push(String.fromCharCode(curCharCode));
        }

        return resultStr.join("");
      }
    }, {
      key: "_fetchFDSDataNotesFileName",
      value: function _fetchFDSDataNotesFileName() {
        var _this3 = this;

        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.data_notes_file_fds_info"]
        };

        _miotSdk.Service.smarthome.batchGetDeviceDatas([params]).then(function (res) {
          Object.keys(res).map(function (key, index) {
            if (index == 0) {
              if (res[key]["prop.data_notes_file_fds_info"] == null || res[key]["prop.data_notes_file_fds_info"] == '') {} else {
                var obj_name = res[key]["prop.data_notes_file_fds_info"].split('｜')[0];
                var obj_url = res[key]["prop.data_notes_file_fds_info"].split('｜')[1];

                _miotSdk.Host.file.getFDSFileInfoWithObjName(obj_name).then(function (res) {
                  var path = res.url;

                  _miotSdk.Host.file.downloadFile(path, dataNotesFileName).then(function (fileInfo) {
                    _reactNative.DeviceEventEmitter.emit('syncNotes');

                    _miotSdk.Host.file.readFile(dataNotesFileName).then(function (utf8Content) {}).catch(function (isSuccess) {});
                  }).catch(function (error) {});
                }).catch(function (err) {});
              }
            }
          });
        });
      }
    }, {
      key: "_uploadDataNotesFileNameToFDS",
      value: function _uploadDataNotesFileNameToFDS() {
        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.data_notes_file_fds_info"]
        };
        var did = _miotSdk.Device.deviceID;
        var suffix = "txt";

        _miotSdk.Host.file.generateObjNameAndUrlForFDSUpload(did, suffix).then(function (res) {
          if (res.hasOwnProperty(suffix) && res[suffix]) {
            var obj = res[suffix];
            var obj_name = obj.obj_name;
            var obj_url = obj.url;

            _miotSdk.Service.smarthome.batchSetDeviceDatas([{
              'did': _miotSdk.Device.deviceID,
              'props': {
                "prop.data_notes_file_fds_info": obj_name + "\uFF5C" + obj_url
              }
            }]).then(function (value) {});

            var param = {
              uploadUrl: obj_url,
              headers: {
                "Content-Type": ""
              },
              method: obj.method,
              files: [{
                filename: dataNotesFileName
              }]
            };

            _miotSdk.Host.file.uploadFileToFDS(param).then(function (res) {}).catch(function (err) {});
          }
        });
      }
    }, {
      key: "_fetchFDSMenuFileName",
      value: function _fetchFDSMenuFileName() {
        var _this4 = this;

        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.menu_file_fds_info"]
        };

        _miotSdk.Service.smarthome.batchGetDeviceDatas([params]).then(function (res) {
          Object.keys(res).map(function (key, index) {
            if (index == 0) {
              if (res[key]["prop.menu_file_fds_info"] == null || res[key]["prop.menu_file_fds_info"] == '') {} else {
                var obj_name = res[key]["prop.menu_file_fds_info"].split('｜')[0];
                var obj_url = res[key]["prop.menu_file_fds_info"].split('｜')[1];

                _miotSdk.Host.file.getFDSFileInfoWithObjName(obj_name).then(function (res) {
                  var path = res.url;

                  _miotSdk.Host.file.downloadFile(path, menuFileName).then(function (fileInfo) {
                    _reactNative.DeviceEventEmitter.emit('syncMenu');

                    _miotSdk.Host.file.readFile(menuFileName).then(function (utf8Content) {}).catch(function (isSuccess) {});
                  }).catch(function (error) {});
                }).catch(function (err) {});
              }
            }
          });
        });
      }
    }, {
      key: "_uploadDataMenuFileNameToFDS",
      value: function _uploadDataMenuFileNameToFDS() {
        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.menu_file_fds_info"]
        };
        var did = _miotSdk.Device.deviceID;
        var suffix = "txt";

        _miotSdk.Host.file.generateObjNameAndUrlForFDSUpload(did, suffix).then(function (res) {
          if (res.hasOwnProperty(suffix) && res[suffix]) {
            var obj = res[suffix];
            var obj_name = obj.obj_name;
            var obj_url = obj.url;

            _miotSdk.Service.smarthome.batchSetDeviceDatas([{
              'did': _miotSdk.Device.deviceID,
              'props': {
                "prop.menu_file_fds_info": obj_name + "\uFF5C" + obj_url
              }
            }]).then(function (value) {});

            var param = {
              uploadUrl: obj_url,
              headers: {
                "Content-Type": ""
              },
              method: obj.method,
              files: [{
                filename: menuFileName
              }]
            };

            _miotSdk.Host.file.uploadFileToFDS(param).then(function (res) {}).catch(function (err) {});
          }
        });
      }
    }, {
      key: "_fetchFDSClassifyFileName",
      value: function _fetchFDSClassifyFileName() {
        var _this5 = this;

        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.classify_file_fds_info"]
        };

        _miotSdk.Service.smarthome.batchGetDeviceDatas([params]).then(function (res) {
          Object.keys(res).map(function (key, index) {
            if (index == 0) {
              if (res[key]["prop.classify_file_fds_info"] == null || res[key]["prop.classify_file_fds_info"] == '') {} else {
                var obj_name = res[key]["prop.classify_file_fds_info"].split('｜')[0];
                var obj_url = res[key]["prop.classify_file_fds_info"].split('｜')[1];

                _miotSdk.Host.file.getFDSFileInfoWithObjName(obj_name).then(function (res) {
                  var path = res.url;

                  _miotSdk.Host.file.downloadFile(path, classifyFileName).then(function (fileInfo) {
                    _reactNative.DeviceEventEmitter.emit('syncClassify');

                    _miotSdk.Host.file.readFile(classifyFileName).then(function (utf8Content) {}).catch(function (isSuccess) {});
                  }).catch(function (error) {});
                }).catch(function (err) {});
              }
            }
          });
        });
      }
    }, {
      key: "_uploadClassifyFileNameToFDS",
      value: function _uploadClassifyFileNameToFDS() {
        var params = {
          'did': _miotSdk.Device.deviceID,
          'props': ["prop.classify_file_fds_info"]
        };
        var did = _miotSdk.Device.deviceID;
        var suffix = "txt";

        _miotSdk.Host.file.generateObjNameAndUrlForFDSUpload(did, suffix).then(function (res) {
          if (res.hasOwnProperty(suffix) && res[suffix]) {
            var obj = res[suffix];
            var obj_name = obj.obj_name;
            var obj_url = obj.url;

            _miotSdk.Service.smarthome.batchSetDeviceDatas([{
              'did': _miotSdk.Device.deviceID,
              'props': {
                "prop.classify_file_fds_info": obj_name + "\uFF5C" + obj_url
              }
            }]).then(function (value) {});

            var param = {
              uploadUrl: obj_url,
              headers: {
                "Content-Type": ""
              },
              method: obj.method,
              files: [{
                filename: classifyFileName
              }]
            };

            _miotSdk.Host.file.uploadFileToFDS(param).then(function (res) {}).catch(function (err) {});
          }
        });
      }
    }]);
    return Helper;
  }();

  exports.default = Helper;
  Helper.dataNotesFileName = dataNotesFileName;
  Helper.classifyFileName = classifyFileName;
  Helper.menuFileName = menuFileName;
},10046,[14305,14320,14323,10074,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "2915c33fc6d2bda1cf69007252fc9132",
    "name": "license_en",
    "type": "html"
  });
},10049,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "d4523f39b47389b59d9999342d1d0200",
    "name": "privacy_en",
    "type": "html"
  });
},10052,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "e79bf72bd38f0b6cafe4eb1564fca98b",
    "name": "license_zh",
    "type": "html"
  });
},10055,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "00b92254d59aefc81b2ee9130df5bcba",
    "name": "privacy_zh",
    "type": "html"
  });
},10058,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "8e8d864ea2336bca829cb592ef47b707",
    "name": "license_enjia",
    "type": "html"
  });
},10061,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "40b1e4fcf329c4084b2d17ce5a0e0ab7",
    "name": "privacy_enjia",
    "type": "html"
  });
},10064,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "107d94c3a57efdddef64139865a84704",
    "name": "license_xibanya",
    "type": "html"
  });
},10067,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "46dc44d96238b0c8fb54b6e8d80eb181",
    "name": "privacy_xibanya",
    "type": "html"
  });
},10070,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "68d2643459be1811295b98ab6d0c6fea",
    "name": "license_fa",
    "type": "html"
  });
},10073,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "0ae543ff7f7c34d0ff8a87d3d45a1dbd",
    "name": "privacy_fa",
    "type": "html"
  });
},10076,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "935b861a9a69ca3482815f48f441a258",
    "name": "license_yidali",
    "type": "html"
  });
},10079,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "9b40079ec5261d19facae343bed55386",
    "name": "privacy_yidali",
    "type": "html"
  });
},10082,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "61dd2b1bd742272a9c76ffaffe762a32",
    "name": "license_ruishi",
    "type": "html"
  });
},10085,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "500b448a77f304d3c264ee1d8b07f612",
    "name": "privacy_ruishi",
    "type": "html"
  });
},10088,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "f8a0be7fc60d679425753b6bf8be0e41",
    "name": "license_nuowei",
    "type": "html"
  });
},10091,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "db42cd146e3f3d17a6131173d4f19e37",
    "name": "privacy_nuowei",
    "type": "html"
  });
},10094,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "fb426abb3fa073037fe741ee70f8208c",
    "name": "license_ruidian",
    "type": "html"
  });
},10097,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "7c6ba658b5fe83b20605fc583c8e2ea8",
    "name": "privacy_ruidian",
    "type": "html"
  });
},10100,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "bf814b380fc094584296cc975f7f2f48",
    "name": "license_de",
    "type": "html"
  });
},10103,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "163a933b7a4f87e8f84ba9a07bc8db53",
    "name": "privacy_de",
    "type": "html"
  });
},10106,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "96c15fa343f2b6416a25f7dbc740d962",
    "name": "license_e",
    "type": "html"
  });
},10109,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "4a8b7d1fd23879ffdf329043932a2b1c",
    "name": "privacy_e",
    "type": "html"
  });
},10112,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "2ca17f7a6b520f65e7e7aefd0d9f3058",
    "name": "license_ri",
    "type": "html"
  });
},10115,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "88ddfc01aa0061fcb49bfaa85fa9cda9",
    "name": "privacy_ri",
    "type": "html"
  });
},10118,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "48a813e1f166d52747e7e44d1b803e81",
    "name": "license_enhan",
    "type": "html"
  });
},10121,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "8fc03021a358b4c6a33cbf90455329a6",
    "name": "privacy_enhan",
    "type": "html"
  });
},10124,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "716d35d61525651aef86ed175c9a3b8a",
    "name": "license_han",
    "type": "html"
  });
},10127,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "b0b57f14af3fe8af7b5de59fb00140e9",
    "name": "privacy_han",
    "type": "html"
  });
},10130,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "776c83c54c882d2be564742a09b614e8",
    "name": "license_lading",
    "type": "html"
  });
},10133,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "93f52d46c13c697e7940dbdfc0bb51f3",
    "name": "privacy_lading",
    "type": "html"
  });
},10136,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "427a43fb0c6a0e390871e6394f2a5eea",
    "name": "license_alabo",
    "type": "html"
  });
},10139,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "40fa6a4abd05bc612f0781ba7969a651",
    "name": "privacy_alabo",
    "type": "html"
  });
},10142,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "0f6c4621e28f64bb90f641695336473b",
    "name": "license_tuerqi",
    "type": "html"
  });
},10145,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "41d501cdd8ca7720660c0a1cb4f2f19c",
    "name": "privacy_tuerqi",
    "type": "html"
  });
},10148,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "5c0c654a6e4111d93c3b9b1a3811f0b3",
    "name": "license_fanti",
    "type": "html"
  });
},10151,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "5471a09f65a6f76ec7e647135ffe7ae3",
    "name": "privacy_fanti",
    "type": "html"
  });
},10154,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "2af85dca18681e1e35c1cb03a365a289",
    "name": "license_mei",
    "type": "html"
  });
},10157,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "2f5e82faa351167fb024bfe43791172e",
    "name": "privacy_mei",
    "type": "html"
  });
},10160,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "412ed08e60d2630bd1422f0f25da6ae8",
    "name": "license_enmei",
    "type": "html"
  });
},10163,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources/raw",
    "scales": [1],
    "hash": "a25024be181b2875bcee8560ee3ec51e",
    "name": "privacy_enmei",
    "type": "html"
  });
},10166,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 366,
    "height": 122,
    "scales": [2, 3],
    "hash": "68d44da8422892d4caed5dd7d579418b",
    "name": "bottom_bg",
    "type": "png"
  });
},10169,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "fa1eb064027d493c911f717af9ce900a",
    "name": "balance_on_bg",
    "type": "png"
  });
},10172,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 340,
    "scales": [2, 3],
    "hash": "65e858e91aba26a56d0c31acd27e2cc1",
    "name": "balance_off_bg",
    "type": "png"
  });
},10175,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 26,
    "height": 26,
    "scales": [2, 3],
    "hash": "eef1f6084ea967b4b6a3a3ba9ebb7297",
    "name": "edit_btn",
    "type": "png"
  });
},10178,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 120,
    "height": 120,
    "scales": [2, 3],
    "hash": "5a34ea7f0357ef07f81c6e5db5ac1bb4",
    "name": "coffee_step1_ic",
    "type": "png"
  });
},10181,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 414,
    "height": 320,
    "scales": [2, 3],
    "hash": "808f7109aac380832d5ffa84a4d3a69b",
    "name": "coffee_picture",
    "type": "png"
  });
},10184,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 414,
    "height": 320,
    "scales": [2, 3],
    "hash": "af3fde81196a2c8fb1224f46ea4b0c88",
    "name": "pic_default_img",
    "type": "png"
  });
},10187,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 26,
    "height": 26,
    "scales": [2, 3],
    "hash": "f13d4a73c3729a08b2d200221a0cce9d",
    "name": "sel_btn",
    "type": "png"
  });
},10190,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 26,
    "height": 26,
    "scales": [2, 3],
    "hash": "1a70d7ef29b032e252d61d221e3436f3",
    "name": "unsel_btn",
    "type": "png"
  });
},10193,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 30,
    "height": 30,
    "scales": [2, 3],
    "hash": "30bdb561c5fb4109c21b23485683e263",
    "name": "evaluate_sel_ic",
    "type": "png"
  });
},10196,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "c4dcabf96ecdb799642172330ba398a8",
    "name": "close_btn",
    "type": "png"
  });
},10199,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "affce9dcc14ce5b9f227a06b442d9f2c",
    "name": "delete_btn",
    "type": "png"
  });
},10202,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "da38a6537c35b0f2ada6cbd6c60ed251",
    "name": "menu_add",
    "type": "png"
  });
},10205,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[8]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DataHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var DataNotes = function (_BaseComponent) {
    (0, _inherits2.default)(DataNotes, _BaseComponent);

    function DataNotes(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DataNotes);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DataNotes).call(this, props));
      _this.state = {
        dataArray: [],
        menuEdit: false,
        menuDelete: false,
        input_food_dialog_visible: false,
        input_food_weight_dialog_visible: false,
        selectItemId: 0,
        selectItemName: '',
        selectItemWeight: ''
      };
      return _this;
    }

    (0, _createClass2.default)(DataNotes, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this._getData();

        this.listenerMenu = _reactNative.DeviceEventEmitter.addListener('refresh_menu', function (message) {
          _this2.props.navigation.goBack();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.listenerMenu) {
          this.listenerMenu.remove();
        }

        _reactNative.DeviceEventEmitter.emit('refreshLastData');
      }
    }, {
      key: "_getData",
      value: function _getData() {
        var _this3 = this;

        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          var dateArray = [];
          responseData.map(function (item, index) {
            var date = new Date(item.date);
            var dateText = date.getMonth() + 1 + "." + date.getDate();

            if (dateArray.indexOf(dateText.toString()) == -1) {
              dateArray.push(dateText.toString());
            }
          });
          var tempDataArray = [];
          dateArray.map(function (item, index) {
            var sameData = _this3._itemSameArray(responseData, item);

            sameData.reverse();

            if (sameData.length > 0) {
              tempDataArray.push({
                date: item,
                check: false,
                data: sameData
              });
            }
          });
          tempDataArray.reverse();

          _this3.setState({
            dataArray: tempDataArray
          });
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_itemSameArray",
      value: function _itemSameArray(array, itemData) {
        var tempArray = [];
        array.map(function (item, index) {
          var date = new Date(item.date);
          var dateText = (date.getMonth() + 1 + "." + date.getDate()).toString();

          if (itemData == dateText) {
            tempArray.push({
              dosageValue: item.unitValue,
              unit: unescape(item.unit),
              name: unescape(item.value),
              check: false,
              date: item.date
            });
          }
        });
        return tempArray;
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fbfbfb'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.state.dataArray.length > 0 ? this._dataView() : this._dataNoneView()), this.state.menuEdit ? this._bottomEditView() : this.state.menuDelete ? this._bottomDeleteView() : this._bottomView(), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.input_food_weight_dialog_visible,
          title: _HomeLocalizableString.default.please_enter_the_weight_of_food,
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this4.setState({
                input_food_weight_dialog_visible: false
              });
            }
          }, {
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            text: _HomeLocalizableString.default.save,
            callback: function callback(result) {
              if (!_this4.getWeightWithString(result.textInputArray[0])) {
                _reactNative.Keyboard.dismiss();

                _this4.onShowToast(_HomeLocalizableString.default.input_valid_weight);

                return;
              }

              _this4._editDataNotes2(result.textInputArray[0], _this4.state.selectItemId);

              _this4.setState({
                input_food_weight_dialog_visible: false
              });
            }
          }],
          inputs: [{
            textInputProps: {
              maxLength: 5,
              autoFocus: true,
              keyboardType: 'numeric',
              returnKeyType: 'done'
            },
            type: 'DELETE',
            defaultValue: this.state.selectItemWeight
          }]
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.input_food_dialog_visible,
          title: _HomeLocalizableString.default.enter_the_name_of_food,
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this4.setState({
                input_food_dialog_visible: false
              });
            }
          }, {
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            text: _HomeLocalizableString.default.save,
            callback: function callback(result) {
              _reactNative.Keyboard.dismiss();

              if (result.textInputArray[0] == '') {
                _reactNative.Keyboard.dismiss();

                _this4.onShowToast(_HomeLocalizableString.default.please_enter_the_name_of_food);

                return;
              }

              if (result.textInputArray[0].length > 25) {
                _reactNative.Keyboard.dismiss();

                _this4.onShowToast(_HomeLocalizableString.default.name_is_to_long);

                return;
              }

              _this4._editDataNotes(result.textInputArray[0], _this4.state.selectItemId);

              _this4.setState({
                input_food_dialog_visible: false
              });
            }
          }],
          inputs: [{
            textInputProps: {
              maxLength: 25,
              autoFocus: true,
              returnKeyType: 'done'
            },
            defaultValue: this.state.selectItemName,
            type: 'DELETE'
          }]
        }));
      }
    }, {
      key: "getWeightWithString",
      value: function getWeightWithString(s) {
        var reg = /(^[-]?[1-9]\d*(\.\d{1})?$)|(^0(\.\d{1})?$)/;
        s = s.match(reg);
        return s;
      }
    }, {
      key: "_dataView",
      value: function _dataView() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.ScrollView, null, this.state.dataArray.map(function (item, index) {
          return _this5._dataItemView(item, index);
        })));
      }
    }, {
      key: "_dataItemView",
      value: function _dataItemView(item, index) {
        var _this6 = this;

        return _react.default.createElement(_reactNative.View, {
          key: index
        }, _react.default.createElement(_reactNative.View, {
          style: {
            marginLeft: 25,
            marginTop: 10,
            flexDirection: 'row',
            alignItems: 'center'
          }
        }, this.state.menuEdit || this.state.menuDelete ? _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var array = _this6.state.dataArray;
            var tempDataArray = [];
            var tempItemData = _this6.state.dataArray[index];
            tempItemData.data.map(function (item1, index1) {
              tempDataArray.push({
                dosageValue: item1.dosageValue,
                name: item1.name,
                date: item1.date,
                unit: item1.unit,
                check: tempItemData.check ? false : true
              });
            });
            var itemData = {
              date: tempItemData.date,
              check: !tempItemData.check,
              data: tempDataArray
            };
            array.splice(index, 1, itemData);

            _this6.setState({
              dataArray: array
            });
          },
          style: {
            backgroundColor: 'rgba(255,255,255,1)',
            borderRadius: 25,
            marginRight: 10
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            resizeMode: 'contain',
            width: 20,
            height: 20
          },
          source: item.check ? _$$_REQUIRE(_dependencyMap[15]) : _$$_REQUIRE(_dependencyMap[16])
        })) : null, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 13,
            color: '#000000',
            justifyContent: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, item.date)), item.data.map(function (item1, index1) {
          return _this6._dataRowItemView(item1, index1, index);
        }));
      }
    }, {
      key: "_dataRowItemView",
      value: function _dataRowItemView(item, index, bigIndex) {
        var _this7 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this7.state.menuEdit || _this7.state.menuDelete) {
              var array = _this7.state.dataArray;
              var tempDataArray = [];
              var tempItemData = _this7.state.dataArray[bigIndex];
              var flag = true;
              var times = 1;
              tempItemData.data.map(function (item1, index1) {
                tempDataArray.push({
                  dosageValue: item1.dosageValue,
                  name: item1.name,
                  unit: item1.unit,
                  date: item1.date,
                  check: index1 == index ? !item1.check : item1.check
                });

                if (index1 == index) {
                  var flag1 = !item1.check;

                  if (!flag1) {
                    flag = false;
                  }
                }

                var flag1 = item1.check;

                if (flag1) {
                  times++;
                }
              });
              var itemData = {
                date: tempItemData.date,
                check: flag ? times == tempItemData.data.length ? true : tempItemData.check : false,
                data: tempDataArray
              };
              array.splice(bigIndex, 1, itemData);

              _this7.setState({
                dataArray: array
              });
            } else {}
          },
          onLongPress: function onLongPress() {
            if (!_this7.state.menuEdit) {
              if (!_this7.state.menuDelete) {
                _this7.setState({
                  menuDelete: true
                });
              }
            }
          },
          delayLongPress: 800,
          key: index,
          style: {
            backgroundColor: '#F7F7F7',
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 10,
            marginLeft: 25,
            marginRight: 25,
            marginTop: 10,
            flexDirection: 'row',
            padding: 20
          }
        }, this.state.menuEdit || this.state.menuDelete ? _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: 'rgba(255,255,255,1)',
            borderRadius: 25,
            marginRight: 10
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            resizeMode: 'contain',
            width: 20,
            height: 20
          },
          source: item.check ? _$$_REQUIRE(_dependencyMap[15]) : _$$_REQUIRE(_dependencyMap[16])
        })) : null, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            flexDirection: 'row',
            alignItems: 'flex-end'
          },
          onPress: function onPress() {
            if (_this7.state.menuEdit || _this7.state.menuDelete) {
              return;
            }

            _this7.setState({
              selectItemId: item.date
            });

            _this7.setState({
              selectItemWeight: item.dosageValue
            });

            _this7.setState({
              input_food_weight_dialog_visible: true
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#000000',
            justifyContent: 'center',
            fontWeight: 'bold'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, item.dosageValue), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 18,
            color: '#000000',
            justifyContent: 'center',
            fontWeight: 'bold'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginBottom: 3,
            marginLeft: 2
          })
        }, item.unit)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this7.state.menuEdit || _this7.state.menuDelete) {
              return;
            }

            _this7.setState({
              selectItemId: item.date
            });

            _this7.setState({
              selectItemName: item.name
            });

            _this7.setState({
              input_food_dialog_visible: true
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000',
            justifyContent: 'center'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, item.name.length > 10 ? item.name.slice(0, 10) + "..." : item.name)));
      }
    }, {
      key: "_dataNoneView",
      value: function _dataNoneView() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 15,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.data_notes_none), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 11,
            textAlign: 'center',
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 15
          })
        }, _HomeLocalizableString.default.data_notes_none_tips));
      }
    }, {
      key: "_bottomView",
      value: function _bottomView() {
        var _this8 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this8.props.navigation.goBack();
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 60,
            height: 60,
            resizeMode: 'contain'
          },
          source: _$$_REQUIRE(_dependencyMap[17])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            height: 60,
            width: 140,
            borderRadius: 30,
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: '#FEC200',
            marginLeft: 30
          },
          onPress: function onPress() {
            _this8.setState({
              menuEdit: true
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 17,
            marginLeft: 15,
            marginRight: 15,
            textAlign: 'center',
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.create_food_menu)));
      }
    }, {
      key: "_bottomEditView",
      value: function _bottomEditView() {
        var _this9 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this9.setState({
              menuEdit: false
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[18])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var array = _this9._getCheckData();

            if (array.length > 0) _this9.props.navigation.navigate('MyCookbook', {
              dataNotes: array.reverse(),
              editFlag: false,
              isAddCoffee: false
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[19])
        })));
      }
    }, {
      key: "_bottomDeleteView",
      value: function _bottomDeleteView() {
        var _this10 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this10.setState({
              menuDelete: false
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[18])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var array = _this10._getCheckData();

            if (array.length > 0) _this10._deleteMenuData(array);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[20])
        })));
      }
    }, {
      key: "_deleteMenuData",
      value: function _deleteMenuData(array) {
        var _this11 = this;

        var dataKeyArray = [];
        array.map(function (item, index) {
          dataKeyArray.push(item.date);
        });
        if (dataKeyArray.length == 0) return;
        var responseData = [];
        var tempArray = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            var flag = _this11._menuDataInArray(dataKeyArray, item.date);

            if (!flag) {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.dataNotesFileName, saveData).then(function (r) {
            _this11._getData();

            _this11.setState({
              menuDelete: false
            });

            _DataHelper.default._uploadDataNotesFileNameToFDS();
          }).catch(function (err) {});
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_menuDataInArray",
      value: function _menuDataInArray(keyArray, time) {
        var flag = false;
        keyArray.map(function (item, index) {
          if (parseInt(item) == parseInt(time)) flag = true;
        });
        return flag;
      }
    }, {
      key: "_getCheckData",
      value: function _getCheckData() {
        var tempArray = [];
        this.state.dataArray.map(function (item, index) {
          item.data.map(function (item, index) {
            if (item.check) {
              tempArray.push(item);
            }
          });
        });
        return tempArray;
      }
    }, {
      key: "_editDataNotes",
      value: function _editDataNotes(name, selectItemId) {
        var _this12 = this;

        var responseData = [];
        var tempArray = [];
        var tagIndex = -1;

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            if (parseInt(selectItemId) == parseInt(item.date)) {
              tagIndex = index;
            }
          });
          responseData.map(function (item, index) {
            if (tagIndex == index) {
              item.value = escape(name);
              tempArray.push(item);
            } else {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this12._saveDateNotes(saveData);
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_editDataNotes2",
      value: function _editDataNotes2(value, selectItemId) {
        var _this13 = this;

        var responseData = [];
        var tempArray = [];
        var tagIndex = -1;

        _miotSdk.Host.file.readFile(_DataHelper.default.dataNotesFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            if (parseInt(selectItemId) == parseInt(item.date)) {
              tagIndex = index;
            }
          });
          responseData.map(function (item, index) {
            if (tagIndex == index) {
              item.unitValue = value;
              tempArray.push(item);
            } else {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this13._saveDateNotes(saveData);
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_saveDateNotes",
      value: function _saveDateNotes(saveData) {
        var _this14 = this;

        _miotSdk.Host.file.writeFile(_DataHelper.default.dataNotesFileName, saveData).then(function (r) {
          _this14._getData();

          _DataHelper.default._uploadDataNotesFileNameToFDS();
        }).catch(function (err) {});
      }
    }]);
    return DataNotes;
  }(_BaseComponent2.default);

  exports.default = DataNotes;

  DataNotes.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        backgroundColor: navigation.state.params ? navigation.state.params.backgroundColor : '#ffffff',
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _HomeLocalizableString.default.data_notes,
        onPressTitle: function onPressTitle(_) {
          return undefined;
        }
      })
    };
  };
},10208,[14305,14314,14320,14323,14371,14377,14386,10007,10074,10297,10033,10037,10719,10046,10755,10190,10193,10211,10199,10214,10202]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "258983c22105dd72f05e875e1b6f6241",
    "name": "back_btn",
    "type": "png"
  });
},10211,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "a4a8ac63f1f9c7aa06033bcd374cc1dd",
    "name": "confirm_btn",
    "type": "png"
  });
},10214,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[9]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ui = _$$_REQUIRE(_dependencyMap[14]);

  var _DragSortableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _DataHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _reactNativeImagePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[18]);

  var dataArray = [];
  var that;

  var MyCookbook = function (_BaseComponent) {
    (0, _inherits2.default)(MyCookbook, _BaseComponent);

    function MyCookbook(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MyCookbook);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MyCookbook).call(this, props));

      _this.onDeviceBgLayout = function (event) {
        var viewWidth = event.nativeEvent.layout.width;
        var viewHeight = event.nativeEvent.layout.height;

        _this.setState({
          editViewHeight: viewHeight
        });
      };

      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        dataArray: [],
        timeArray: [],
        scrollEnabled: true,
        evaluateLevel: -1,
        evaluateArray: [0, 0, 0, 0, 0],
        addClassifyModalVisible: false,
        classifyArray: [],
        keyboardHeight: 0,
        newClassifyModalVisible: false,
        classifyColor: [[{
          color: '#ff6069',
          check: true
        }, {
          color: '#a8650f',
          check: false
        }, {
          color: '#ffa027',
          check: false
        }, {
          color: '#fff056',
          check: false
        }, {
          color: '#a6e662',
          check: false
        }], [{
          color: '#00d0c4',
          check: false
        }, {
          color: '#65ccff',
          check: false
        }, {
          color: '#617ae4',
          check: false
        }, {
          color: '#9787ff',
          check: false
        }, {
          color: '#ff9ea0',
          check: false
        }]],
        unitArray: [{
          unitType: 0,
          unitText: _HomeLocalizableString.default.g,
          select: true
        }, {
          unitType: 1,
          unitText: _HomeLocalizableString.default.ml,
          select: false
        }, {
          unitType: 2,
          unitText: _HomeLocalizableString.default.oz,
          select: false
        }, {
          unitType: 3,
          unitText: _HomeLocalizableString.default.lb,
          select: false
        }, {
          unitType: 4,
          unitText: _HomeLocalizableString.default.a,
          select: false
        }, {
          unitType: 5,
          unitText: _HomeLocalizableString.default.spoon,
          select: false
        }, {
          unitType: 6,
          unitText: _HomeLocalizableString.default.c_degree,
          select: false
        }, {
          unitType: 7,
          unitText: _HomeLocalizableString.default.f_degree,
          select: false
        }, {
          unitType: 8,
          unitText: _HomeLocalizableString.default.format_time,
          select: false
        }],
        unitModal1Visible: false,
        unitModal2Visible: false,
        unitShowTimePicker: false,
        unitSelect: 'g',
        hourData: _this.generateArrayFromRangeTime(0, 23),
        minData: _this.generateArrayFromRangeTime(0, 59),
        secData: _this.generateArrayFromRangeTime(0, 59),
        hourValue: '00',
        minValue: '00',
        secValue: '00',
        unitStep: 1,
        unitValue: '',
        classifyValue: '',
        setClassifyData: null,
        dataNameValue: '',
        photoModalVisible: false,
        imageBase64: '',
        inputDialog: false,
        inputValue: _HomeLocalizableString.default.my_cookbook,
        evaluateValue: '',
        loadingVis: false,
        editFlag: _this.props.navigation.state.params.editFlag,
        isAddCoffee: _this.props.navigation.state.params.isAddCoffee,
        editViewHeight: 0,
        deleteDialog: false,
        selectDeleteIndex: 0
      };
      return _this;
    }

    (0, _createClass2.default)(MyCookbook, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        _miotSdk.Service.getServerName().then(function (country) {
          var language = _miotSdk.Resources.getLanguage();

          var countryCode = country.countryCode;

          if (!countryCode) {
            countryCode = 'GB';
          }

          if (!language) {
            language = 'en';
          }

          countryCode = countryCode.toUpperCase();
          language = language.toLowerCase();

          switch (countryCode) {
            case 'KR':
              {
                _this2.setState({
                  unitArray: [{
                    unitType: 0,
                    unitText: _HomeLocalizableString.default.g,
                    select: true
                  }, {
                    unitType: 1,
                    unitText: _HomeLocalizableString.default.ml,
                    select: false
                  }, {
                    unitType: 4,
                    unitText: _HomeLocalizableString.default.a,
                    select: false
                  }, {
                    unitType: 5,
                    unitText: _HomeLocalizableString.default.spoon,
                    select: false
                  }, {
                    unitType: 6,
                    unitText: _HomeLocalizableString.default.c_degree,
                    select: false
                  }, {
                    unitType: 7,
                    unitText: _HomeLocalizableString.default.f_degree,
                    select: false
                  }, {
                    unitType: 8,
                    unitText: _HomeLocalizableString.default.format_time,
                    select: false
                  }]
                });

                break;
              }
          }
        });

        dataArray = this.state.dataArray;
        this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardDidShow', function (event) {
          _this2.setState({
            keyboardHeight: event.endCoordinates.height
          });
        });
        this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardDidHide', function (event) {
          _this2.setState({
            keyboardHeight: 0
          });
        });

        if (this.state.editFlag) {
          this._dealEditData();
        } else {
          if (this.state.isAddCoffee) {
            this._dealEditData();
          } else {
            this._dealDataNotes();
          }
        }

        this._getClassifyData(false);
      }
    }, {
      key: "_dealDataNotes",
      value: function _dealDataNotes() {
        var dataNotes = this.props.navigation.state.params.dataNotes;
        var tempArray = [];
        dataNotes.map(function (item, index) {
          tempArray.push({
            value: item.dosageValue,
            text: "" + item.name,
            unit: item.unit
          });
        });
        this.setState({
          dataArray: tempArray
        });
      }
    }, {
      key: "_dealEditData",
      value: function _dealEditData() {
        var itemData = this.props.navigation.state.params.itemData;
        var dataNotes = itemData.dataArray;
        var tempArray = [];
        dataNotes.map(function (item, index) {
          tempArray.push({
            value: item.value,
            text: unescape(item.text),
            unit: unescape(item.unit)
          });
        });
        var dataCooktime = itemData.timeArray;
        var timeArray = [];
        dataCooktime.map(function (item, index) {
          timeArray.push({
            value: item.value,
            text: unescape(item.text),
            time: item.time
          });
        });
        var classify = null;

        if (itemData.classify != null) {
          classify = {
            name: unescape(itemData.classify.name),
            bgColor: itemData.classify.bgColor,
            id: itemData.classify.id
          };
        }

        this.props.navigation.setParams({
          title: itemData.menuName
        });
        this.setState({
          inputValue: itemData.menuName,
          imageBase64: itemData.imageBase64,
          dataArray: tempArray,
          timeArray: timeArray,
          evaluateLevel: itemData.evaluateLevel,
          evaluateValue: itemData.evaluateValue,
          setClassifyData: classify
        });
      }
    }, {
      key: "_getClassifyData",
      value: function _getClassifyData(isSelectNew) {
        var _this3 = this;

        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.classifyFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          var tempClassifyArray = [];
          var isHaveCoffee = false;
          responseData.map(function (item, index) {
            if (item.id == 999) {
              if (!isHaveCoffee) {
                tempClassifyArray.push({
                  name: unescape(item.name),
                  bgColor: item.color,
                  id: item.id,
                  check: false
                });
              }

              isHaveCoffee = true;
            } else {
              tempClassifyArray.push({
                name: unescape(item.name),
                bgColor: item.color,
                id: item.id,
                check: false
              });
            }
          });

          var tempArray = _this3._setArray4(tempClassifyArray);

          _this3.setState({
            classifyArray: tempArray
          });

          if (isSelectNew) {
            _this3.setState({
              setClassifyData: tempClassifyArray[tempClassifyArray.length - 1]
            });
          }
        }).catch(function (isSuccess) {});
      }
    }, {
      key: "_setArray4",
      value: function _setArray4(array) {
        var tempArrary = [];
        var flag = 0;
        array.map(function (item, index) {
          if (flag == index) {
            var smallArray = [];
            if (item) smallArray.push(item);
            if (array[index + 1]) smallArray.push(array[index + 1]);
            if (array[index + 2]) smallArray.push(array[index + 2]);
            if (array[index + 3]) smallArray.push(array[index + 3]);
            tempArrary.push(smallArray);
            flag = flag + 4;
          }
        });
        return tempArrary;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.keyboardDidShowListener) this.keyboardDidShowListener.remove();
        if (this.keyboardDidHideListener) this.keyboardDidHideListener.remove();
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.ScrollView, {
          ref: function ref(scrollView) {
            return _this4.scrollView = scrollView;
          },
          scrollEnabled: this.state.scrollEnabled
        }, this._topView(), this._dataListView1(), this.state.timeArray.length > 0 ? this._coffeeTimeView(this.state.timeArray[0].time, this.state.timeArray[1].time, this.state.timeArray[2].time, this.state.timeArray[3].time) : null, this.state.timeArray.length > 0 ? this.state.timeArray.map(function (item, index) {
          return _this4._dataListItemView2(item, index);
        }) : null, this._addDataBtn(), _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth,
            height: 0.5,
            backgroundColor: 'rgba(0,0,0,0.2)',
            marginTop: 15,
            marginBottom: 15
          }
        }), this._evaluateView()), this._bottomView(), this._addClassifyModalView(), this._newClassifyModalView(), this._unitModal1View(), this._unitModal2View(), this._photoModalView(), this._inputDialog(), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.deleteDialog,
          title: _HomeLocalizableString.default.ensure_delete,
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this4.setState({
                deleteDialog: false
              });
            }
          }, {
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            style: {
              color: '#FEC200'
            },
            text: _HomeLocalizableString.default.confirm,
            callback: function callback(result) {
              var dataArray = [];

              _this4.state.dataArray.map(function (item, index) {
                if (index != _this4.state.selectDeleteIndex) {
                  dataArray.push(item);
                }
              });

              _this4.setState({
                dataArray: dataArray
              });

              _this4.setState({
                deleteDialog: false
              });
            }
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        })), _react.default.createElement(_ui.LoadingDialog, {
          title: _HomeLocalizableString.default.loading,
          visible: this.state.loadingVis,
          cancelable: true
        }));
      }
    }, {
      key: "_topView",
      value: function _topView() {
        var _this5 = this;

        var data = this.state.setClassifyData;
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: function onPress() {
            _this5.setphotoModalVisible(true);
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75,
            resizeMode: 'cover'
          },
          source: _$$_REQUIRE(_dependencyMap[19])
        }), _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75,
            resizeMode: 'cover',
            position: 'absolute'
          },
          source: this.state.imageBase64 == 'coffee' ? _$$_REQUIRE(_dependencyMap[20]) : this.state.imageBase64
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this5.setAddClassifyModalVisible(true);
          },
          style: {
            backgroundColor: data != null ? data.bgColor : '#443e39',
            borderRadius: 7,
            paddingTop: 3,
            paddingBottom: 3,
            paddingLeft: 10,
            paddingRight: 10,
            position: 'absolute',
            top: 20,
            right: 20
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, data != null ? data.name : _HomeLocalizableString.default.not_classify)));
      }
    }, {
      key: "_dataListView1",
      value: function _dataListView1() {
        var _this6 = this;

        return _react.default.createElement(_DragSortableView.default, {
          delayLongPress: 100,
          dataSource: this.state.dataArray,
          parentWidth: this.mScreenWidth,
          childrenWidth: this.mScreenWidth - 40,
          marginChildrenBottom: 10,
          marginChildrenRight: 0,
          marginChildrenLeft: 0,
          marginChildrenTop: 10,
          childrenHeight: 48,
          onDataChange: function onDataChange(data) {
            _this6.setState({
              dataArray: data
            });
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          renderItem: function renderItem(item, index) {
            return _this6._dataListItemView1(item, index);
          },
          renderItemIcon: function renderItemIcon(item, index) {
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              activeOpacity: 1,
              delayLongPress: 800,
              onPressOut: function onPressOut() {},
              onLongPress: function onLongPress() {
                _this6.setState({
                  deleteDialog: true
                });

                _this6.setState({
                  selectDeleteIndex: index
                });
              },
              key: index,
              style: {
                position: 'absolute',
                left: 20,
                width: _this6.mScreenWidth - 80,
                flexDirection: 'row',
                height: 60,
                alignItems: 'center',
                backgroundColor: 'rgba(0,0,0,0)'
              }
            }, _react.default.createElement(_reactNative.Text, {
              style: (0, _objectSpread2.default)({
                fontSize: 14,
                color: '#000'
              }, _reactNative.Platform.select({
                ios: {},
                android: {
                  fontFamily: 'lucida grande'
                }
              }), {
                marginRight: 10,
                marginLeft: 10
              })
            }, item.value), _react.default.createElement(_reactNative.Text, {
              style: (0, _objectSpread2.default)({
                fontSize: 14,
                color: '#000'
              }, _reactNative.Platform.select({
                ios: {},
                android: {
                  fontFamily: 'lucida grande'
                }
              }))
            }, unescape(item.text).length > 10 ? unescape(item.text).slice(0, 10) + "..." : unescape(item.text), item.unit != '' ? "(" + unescape(item.unit) + ")" : ''));
          },
          onDragStart: function onDragStart(startIndex, endIndex) {
            _this6.setState({
              scrollEnabled: false
            });
          },
          onDragEnd: function onDragEnd(startIndex) {
            _this6.setState({
              scrollEnabled: true
            });
          },
          onClickItem: function onClickItem(data, item, index) {}
        });
      }
    }, {
      key: "_dataListItemView1",
      value: function _dataListItemView1(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            width: this.mScreenWidth - 40,
            backgroundColor: '#f5f5f5',
            marginLeft: 20,
            marginRight: 20,
            borderRadius: 8,
            flexDirection: 'row',
            height: 60,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[21])
        }));
      }
    }, {
      key: "_dataListItemView2",
      value: function _dataListItemView2(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            width: this.mScreenWidth - 40,
            backgroundColor: '#f5f5f5',
            marginLeft: 20,
            marginRight: 20,
            borderRadius: 8,
            marginTop: 10,
            flexDirection: 'row',
            height: 60,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginRight: 10,
            marginLeft: 10
          })
        }, data.value), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, data.text), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }));
      }
    }, {
      key: "_coffeeTimeView",
      value: function _coffeeTimeView(allTime, time1, time2, time3) {
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 40,
            marginLeft: 20,
            marginRight: 20,
            marginTop: 20,
            marginBottom: 10,
            flexDirection: 'row',
            height: 36,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: time1 / allTime,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            borderTopLeftRadius: 18,
            borderBottomLeftRadius: 18,
            borderTopRightRadius: time2 == 0 ? 18 : 0,
            borderBottomRightRadius: time2 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[22])
        })), time2 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time2 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: time3 == 0 ? 18 : 0,
            borderBottomRightRadius: time3 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[23])
        })) : null, time3 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time3 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: 18,
            borderBottomRightRadius: 18,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[24])
        })) : null);
      }
    }, {
      key: "_addDataBtn",
      value: function _addDataBtn() {
        var _this7 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 40,
            marginLeft: 20,
            marginRight: 20,
            flexDirection: "row",
            marginTop: 15
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this7.setUnitModal1Visible(true);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[25])
        })));
      }
    }, {
      key: "_evaluateView",
      value: function _evaluateView() {
        var _this8 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, this.state.evaluateArray.map(function (item, index) {
          if (index <= _this8.state.evaluateLevel && _this8.state.evaluateLevel != -1) {
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              key: index,
              onPress: function onPress() {
                _this8.setState({
                  evaluateLevel: index
                });
              }
            }, _react.default.createElement(_reactNative.Image, {
              source: _$$_REQUIRE(_dependencyMap[26])
            }));
          } else {
            return _react.default.createElement(_reactNative.TouchableOpacity, {
              key: index,
              onPress: function onPress() {
                _this8.setState({
                  evaluateLevel: index
                });
              }
            }, _react.default.createElement(_reactNative.Image, {
              source: _$$_REQUIRE(_dependencyMap[27])
            }));
          }
        })), _react.default.createElement(_reactNative.TextInput, {
          multiline: true,
          blurOnSubmit: true,
          style: {
            width: this.mScreenWidth - 40,
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 10,
            paddingBottom: 10,
            marginTop: 15,
            marginBottom: 50
          },
          returnKeyType: 'done',
          maxLength: 50,
          onChangeText: function onChangeText(text) {
            var newText = text.replace(' ', '');

            _this8.setState({
              evaluateValue: newText
            });
          },
          value: this.state.evaluateValue,
          placeholder: _HomeLocalizableString.default.click_to_evaluate,
          placeholderTextColor: '#949290'
        }));
      }
    }, {
      key: "_bottomView",
      value: function _bottomView() {
        var _this9 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this9.state.editFlag) {
              _this9._editMenu();
            } else {
              _this9._saveMenu();
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[28])
        })));
      }
    }, {
      key: "_addClassifyModalView",
      value: function _addClassifyModalView() {
        var _this10 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: this.state.addClassifyModalVisible,
          onRequestClose: function onRequestClose() {
            _this10.setAddClassifyModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#00000000",
          style: {
            flex: 1
          },
          onPress: this.onAddClassifyModalClose.bind(this)
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0,0.4)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: {
            width: this.mScreenWidth,
            backgroundColor: '#fff',
            paddingTop: 15,
            paddingLeft: 33,
            paddingRight: 33,
            alignItems: 'center'
          }
        }, this.state.classifyArray.map(function (item, index) {
          return _this10._classifyItemView(item, index);
        }), this._modalAddClassifyView(), this._cancelConfirmView()))));
      }
    }, {
      key: "_classifyItemView",
      value: function _classifyItemView(item, index) {
        var _this11 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row',
            marginTop: 10
          },
          key: index
        }, item.map(function (item1, index1) {
          return _this11._classifyItemItemView(item1, index1, index);
        }));
      }
    }, {
      key: "_classifyItemItemView",
      value: function _classifyItemItemView(item, index, bigIndex) {
        var _this12 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var tempArray = [];

            _this12.state.classifyArray.map(function (rowData, pos) {
              if (pos == bigIndex) {
                var itemData = [];
                rowData.map(function (item1, index1) {
                  itemData.push({
                    name: item1.name,
                    bgColor: item1.bgColor,
                    id: item1.id,
                    check: index == index1 ? true : false
                  });
                });
                tempArray.push(itemData);
              } else {
                var itemData = [];
                rowData.map(function (item1, index1) {
                  itemData.push({
                    name: item1.name,
                    bgColor: item1.bgColor,
                    id: item1.id,
                    check: false
                  });
                });
                tempArray.push(itemData);
              }
            });

            _this12.setState({
              classifyArray: tempArray
            });
          },
          style: {
            backgroundColor: item.bgColor,
            borderRadius: 7,
            width: this.mScreenWidth / 6,
            alignItems: 'center',
            justifyContent: 'center',
            paddingTop: 5,
            paddingBottom: 5,
            marginLeft: 3,
            marginRight: 3,
            borderWidth: item.check ? 1.5 : 0,
            borderColor: item.check ? '#000' : 'rgba(0,0,0,0)'
          },
          key: index
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#ffffff',
            numberOfLines: 1
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          }),
          numberOfLines: 1
        }, item.name));
      }
    }, {
      key: "_modalAddClassifyView",
      value: function _modalAddClassifyView() {
        var _this13 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this13.setAddClassifyModalVisible(false);

            _this13.setNewClassifyModalVisible(true);
          },
          style: {
            marginTop: 20,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 10,
            paddingRight: 10,
            backgroundColor: '#fbfbfb',
            borderRadius: 7,
            marginBottom: 50
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[29])
        }), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 13,
            color: '#ffc500'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginLeft: 10
          })
        }, _HomeLocalizableString.default.add_classify));
      }
    }, {
      key: "_cancelConfirmView",
      value: function _cancelConfirmView() {
        var _this14 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this14.setAddClassifyModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[30])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var data = _this14._getSelectClassifyData();

            if (data != null) {
              _this14.setState({
                setClassifyData: data
              });

              _this14.setAddClassifyModalVisible(false);
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[28])
        })));
      }
    }, {
      key: "setAddClassifyModalVisible",
      value: function setAddClassifyModalVisible(visible) {
        this.setState({
          addClassifyModalVisible: visible
        });
      }
    }, {
      key: "onAddClassifyModalClose",
      value: function onAddClassifyModalClose() {
        this.setState({
          addClassifyModalVisible: false
        });
      }
    }, {
      key: "_getSelectClassifyData",
      value: function _getSelectClassifyData() {
        var selectData = null;
        this.state.classifyArray.map(function (item, index) {
          item.map(function (item1, index1) {
            if (item1.check) selectData = item1;
          });
        });
        return selectData;
      }
    }, {
      key: "_newClassifyModalView",
      value: function _newClassifyModalView() {
        var _this15 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: this.state.newClassifyModalVisible,
          onRequestClose: function onRequestClose() {
            _this15.setNewClassifyModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#00000000",
          style: {
            flex: 1
          },
          onPress: this.onNewClassifyModalClose.bind(this)
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0,0.4)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this._classifyColorView(), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: {
            width: this.mScreenWidth,
            backgroundColor: '#fff',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          style: {
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 10,
            paddingBottom: 10,
            width: this.mScreenWidth
          },
          returnKeyType: 'done',
          maxLength: 10,
          onChangeText: function onChangeText(text) {
            var newText = text.replace(' ', '');

            _this15.setState({
              classifyValue: newText
            });
          },
          value: this.state.classifyValue,
          placeholder: _HomeLocalizableString.default.please_input
        }), this._cancelFinishView(function () {
          _this15.setNewClassifyModalVisible(false);
        }, function () {
          if (_this15.state.classifyValue.length > 0) {
            var color = _this15._getCheckColor();

            var name = escape(_this15.state.classifyValue);
            var responseData = [];

            _miotSdk.Host.file.readFile(_DataHelper.default.classifyFileName).then(function (utf8Content) {
              responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));

              _this15._saveClassifyData(color, name, responseData.length + 1);
            }).catch(function (isSuccess) {
              _this15._saveClassifyData(color, name, 1);
            });
          }
        })))));
      }
    }, {
      key: "setNewClassifyModalVisible",
      value: function setNewClassifyModalVisible(visible) {
        this.setState({
          newClassifyModalVisible: visible
        });
      }
    }, {
      key: "onNewClassifyModalClose",
      value: function onNewClassifyModalClose() {
        this.setState({
          newClassifyModalVisible: false
        });
      }
    }, {
      key: "_classifyColorView",
      value: function _classifyColorView() {
        var _this16 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth
          }
        }, this.state.classifyColor.map(function (item, index) {
          return _this16._classifyColorItemView(item, index);
        }));
      }
    }, {
      key: "_classifyColorItemView",
      value: function _classifyColorItemView(item, index) {
        var _this17 = this;

        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            flexDirection: 'row',
            width: this.mScreenWidth,
            marginBottom: 10
          }
        }, item.map(function (item1, index1) {
          return _this17._classifyColorItemItemView(item1, index1, index);
        }));
      }
    }, {
      key: "_classifyColorItemItemView",
      value: function _classifyColorItemItemView(item, index, bigIndex) {
        var _this18 = this;

        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var tempArray = [];

            _this18.state.classifyColor.map(function (rowData, pos) {
              if (pos == bigIndex) {
                var itemData = [];
                rowData.map(function (item1, index1) {
                  itemData.push({
                    color: item1.color,
                    check: index == index1 ? true : false
                  });
                });
                tempArray.push(itemData);
              } else {
                var itemData = [];
                rowData.map(function (item1, index1) {
                  itemData.push({
                    color: item1.color,
                    check: false
                  });
                });
                tempArray.push(itemData);
              }
            });

            _this18.setState({
              classifyColor: tempArray
            });
          },
          style: {
            width: this.mScreenWidth / 8,
            height: this.mScreenWidth / 8,
            borderRadius: 100,
            borderWidth: item.check ? 3 : 0,
            borderColor: item.check ? '#fff' : 'rgba(0,0,0,0)',
            backgroundColor: item.color
          }
        }));
      }
    }, {
      key: "_getCheckColor",
      value: function _getCheckColor() {
        var color = '';
        this.state.classifyColor.map(function (item, index) {
          item.map(function (item1, index1) {
            if (item1.check) color = item1.color;
          });
        });
        return color;
      }
    }, {
      key: "_saveClassifyData",
      value: function _saveClassifyData(color, name, id) {
        var _this19 = this;

        var tempArray = [];
        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.classifyFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push(item);
          });
          tempArray.push({
            color: color,
            name: name,
            id: id
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.classifyFileName, saveData).then(function (r) {
            _this19._getClassifyData(true);

            _DataHelper.default._uploadClassifyFileNameToFDS();
          }).catch(function (err) {
            _this19.onShowToast(_HomeLocalizableString.default.add_failed);
          });

          _this19.setNewClassifyModalVisible(false);
        }).catch(function (isSuccess) {
          tempArray.push({
            color: color,
            name: name,
            id: id
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miotSdk.Host.file.writeFile(_DataHelper.default.classifyFileName, saveData).then(function (r) {
            _this19._getClassifyData(true);

            _DataHelper.default._uploadClassifyFileNameToFDS();
          }).catch(function (err) {
            _this19.onShowToast(_HomeLocalizableString.default.add_failed);
          });

          _this19.setNewClassifyModalVisible(false);
        });
      }
    }, {
      key: "_unitModal1View",
      value: function _unitModal1View() {
        var _this20 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: this.state.unitModal1Visible,
          onRequestClose: function onRequestClose() {
            _this20.setUnitModal1Visible(false);
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#00000000",
          style: {
            flex: 1
          },
          onPress: this.onUnitModal1Close.bind(this)
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0,0.4)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: {
            width: this.mScreenWidth,
            alignItems: 'center'
          }
        }, this._unitModal1TopView(), this.state.unitStep == 1 ? this.state.unitShowTimePicker ? _react.default.createElement(_reactNative.View, null) : this._unitInputView() : this._unitStep2View(), this._cancelFinishView(function () {
          _this20.setUnitModal1Visible(false);
        }, function () {
          if (_this20.state.unitStep == 1) {
            if (_this20.state.unitShowTimePicker) {
              if (parseInt(_this20.state.hourValue) > 0 || parseInt(_this20.state.minValue) > 0 || parseInt(_this20.state.secValue) > 0) {
                _this20.setState({
                  unitValue: _this20.state.hourValue + ":" + _this20.state.minValue + "'" + _this20.state.secValue + "\""
                });

                _this20.setState({
                  unitStep: 2
                });
              }
            } else {
              if (_this20.state.unitValue) _this20.setState({
                unitStep: 2,
                unitValue: _this20.state.unitValue
              });
            }
          } else if (_this20.state.unitStep == 2) {
            if (_this20.state.dataNameValue) {
              var tempDataArray = _this20.state.dataArray;
              var value = _this20.state.unitValue;
              var text = _this20.state.dataNameValue;
              var unit;

              if (_this20.state.unitShowTimePicker) {
                unit = '';
              } else {
                unit = _this20.state.unitSelect;
              }

              tempDataArray.push({
                value: value,
                text: text,
                unit: unit
              });

              _this20.setState({
                dataArray: tempDataArray,
                unitStep: 1,
                unitValue: '',
                dataNameValue: ''
              });

              _this20.setUnitModal1Visible(false);
            }
          }
        }), this.state.unitStep == 1 ? this.state.unitShowTimePicker ? this._unitTimePickerView() : _react.default.createElement(_reactNative.View, null) : _react.default.createElement(_reactNative.View, null)), _react.default.createElement(_reactNative.View, {
          style: {
            height: this.state.keyboardHeight != 0 ? this.state.editViewHeight + 15 : 0
          }
        }))));
      }
    }, {
      key: "_unitModal1TopView",
      value: function _unitModal1TopView() {
        var _this21 = this;

        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            backgroundColor: 'rgba(0,0,0,0.7)',
            width: this.mScreenWidth
          },
          showsHorizontalScrollIndicator: false,
          horizontal: true
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: {
            flexDirection: 'row',
            paddingBottom: 10,
            paddingTop: 10,
            marginLeft: 25
          }
        }, this.state.unitArray.map(function (item, index) {
          return _this21._unitItemView(item, index);
        })));
      }
    }, {
      key: "_unitItemView",
      value: function _unitItemView(item, index) {
        var _this22 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var tempArray = [];

            _this22.state.unitArray.map(function (item1, index1) {
              tempArray.push({
                unitType: item1.unitType,
                unitText: item1.unitText,
                select: index1 == index ? true : false
              });

              if (index1 == index) {
                if (item1.unitType != 8) _this22.setState({
                  unitSelect: item1.unitText
                });

                _this22.setState({
                  unitShowTimePicker: item1.unitType == 8 ? true : false
                });
              }
            });

            _this22.setState({
              unitArray: tempArray,
              unitStep: 1,
              unitValue: ''
            });
          },
          key: index,
          style: {
            backgroundColor: item.select ? '#ffc009' : '#fff',
            borderRadius: 25,
            paddingLeft: 15,
            paddingRight: 15,
            paddingTop: 5,
            paddingBottom: 5,
            marginRight: 10
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 13,
            color: item.select ? '#fff' : '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, item.unitText));
      }
    }, {
      key: "_unitInputView",
      value: function _unitInputView() {
        var _this23 = this;

        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout(event) {
            return _this23.onDeviceBgLayout(event);
          },
          style: {
            width: this.mScreenWidth,
            backgroundColor: '#fff',
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            paddingRight: 20
          }
        }, _react.default.createElement(_reactNative.TextInput, {
          style: {
            flex: 2,
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 10,
            paddingBottom: 10
          },
          returnKeyType: 'done',
          maxLength: 10,
          onChangeText: function onChangeText(text) {
            var newText = text.replace(/[^\d.]/g, "").replace(' ', '').replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3');

            _this23.setState({
              unitValue: newText
            });
          },
          value: this.state.unitValue,
          placeholder: _HomeLocalizableString.default.please_input,
          keyboardType: 'numeric'
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold'
          })
        }, this.state.unitSelect));
      }
    }, {
      key: "_unitTimePickerView",
      value: function _unitTimePickerView() {
        var _this24 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row',
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_ui.StringSpinner, {
          style: {
            width: 120,
            height: 180,
            backgroundColor: '#ffffff'
          },
          dataSource: this.state.hourData,
          defaultValue: this.state.hourValue,
          onValueChanged: function onValueChanged(data) {
            _this24.setState({
              hourValue: data.newValue
            });
          },
          pickerInnerStyle: {
            textColor: "rgb(131,131,131)",
            selectTextColor: "#ffc009",
            fontSize: 15,
            selectFontSize: 20,
            rowHeight: 70,
            unitTextColor: '#ffc009'
          },
          unit: _HomeLocalizableString.default.hour_
        }), _react.default.createElement(_ui.StringSpinner, {
          style: {
            width: 120,
            height: 180,
            backgroundColor: '#ffffff'
          },
          dataSource: this.state.minData,
          defaultValue: this.state.minValue,
          onValueChanged: function onValueChanged(data) {
            _this24.setState({
              minValue: data.newValue
            });
          },
          pickerInnerStyle: {
            textColor: "rgb(131,131,131)",
            selectTextColor: "#ffc009",
            fontSize: 15,
            selectFontSize: 20,
            rowHeight: 70,
            unitTextColor: '#ffc009'
          },
          unit: _HomeLocalizableString.default.min_
        }), _react.default.createElement(_ui.StringSpinner, {
          style: {
            width: 120,
            height: 180,
            backgroundColor: '#ffffff'
          },
          dataSource: this.state.secData,
          defaultValue: this.state.secValue,
          onValueChanged: function onValueChanged(data) {
            _this24.setState({
              secValue: data.newValue
            });
          },
          pickerInnerStyle: {
            textColor: "rgb(131,131,131)",
            selectTextColor: "#ffc009",
            fontSize: 15,
            selectFontSize: 20,
            rowHeight: 70,
            unitTextColor: '#ffc009'
          },
          unit: _HomeLocalizableString.default.second_
        }));
      }
    }, {
      key: "_unitStep2View",
      value: function _unitStep2View() {
        var _this25 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            padding: 10,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold'
          })
        }, this.state.unitValue), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TextInput, {
          style: {
            flex: 1,
            textAlign: 'right',
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 10,
            paddingBottom: 10
          },
          returnKeyType: 'done',
          maxLength: 10,
          onChangeText: function onChangeText(text) {
            var newText = text.replace(' ', '');

            _this25.setState({
              dataNameValue: newText
            });
          },
          value: this.state.dataNameValue,
          placeholder: _HomeLocalizableString.default.please_input
        }));
      }
    }, {
      key: "setUnitModal1Visible",
      value: function setUnitModal1Visible(visible) {
        this.setState({
          unitModal1Visible: visible
        });
      }
    }, {
      key: "onUnitModal1Close",
      value: function onUnitModal1Close() {
        this.setState({
          unitModal1Visible: false
        });
      }
    }, {
      key: "generateArrayFromRangeTime",
      value: function generateArrayFromRangeTime(start, finish) {
        return Array.apply(null, Array(finish - start + 1)).map(function (_, i) {
          return (start + i).toString().length == 1 ? ("0" + (start + i)).toString() : (start + i).toString();
        });
      }
    }, {
      key: "_unitModal2View",
      value: function _unitModal2View() {
        var _this26 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: this.state.unitModal2Visible,
          onRequestClose: function onRequestClose() {
            _this26.setUnitModal2Visible(false);
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#00000000",
          style: {
            flex: 1
          },
          onPress: this.onUnitModal2Close.bind(this)
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0,0.4)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          style: {
            width: this.mScreenWidth,
            backgroundColor: '#fff',
            alignItems: 'center'
          }
        }))));
      }
    }, {
      key: "setUnitModal2Visible",
      value: function setUnitModal2Visible(visible) {
        this.setState({
          unitModal2Visible: visible
        });
      }
    }, {
      key: "onUnitModal2Close",
      value: function onUnitModal2Close() {
        this.setState({
          unitModal2Visible: false
        });
      }
    }, {
      key: "_photoModalView",
      value: function _photoModalView() {
        var _this27 = this;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: "fade",
          transparent: true,
          visible: this.state.photoModalVisible,
          onRequestClose: function onRequestClose() {
            _this27.setphotoModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#00000000",
          style: {
            flex: 1
          },
          onPress: this.onphotoModalClose.bind(this)
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            backgroundColor: 'rgba(0,0,0,0.4)'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            var options = {
              title: '选择图片',
              quality: 0.1,
              cancelButtonTitle: '取消',
              takePhotoButtonTitle: '拍照',
              chooseFromLibraryButtonTitle: '相册',
              mediaType: 'photo',
              allowsEditing: true
            };
            setTimeout(function () {
              return _reactNativeImagePicker.default.launchCamera(options, function (response) {
                if (response.didCancel) {} else if (response.error) {
                  _this27.onShowToast(response.error.includes('Camera') ? _HomeLocalizableString.default.permission_camera : response.error.includes('Photo') ? _HomeLocalizableString.default.permission_photo : response.error.includes('granted') ? _HomeLocalizableString.default.granted : '');
                } else if (response.customButton) {} else {
                  var source = {
                    uri: "data:image/jpeg;base64," + response.data
                  };

                  _this27.setState({
                    imageBase64: source
                  });
                }
              });
            }, 50);

            _this27.setphotoModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[31])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var options = {
              title: '选择图片',
              quality: 0.1,
              cancelButtonTitle: '取消',
              takePhotoButtonTitle: '拍照',
              chooseFromLibraryButtonTitle: '相册',
              mediaType: 'photo',
              allowsEditing: true
            };
            setTimeout(function () {
              return _reactNativeImagePicker.default.launchImageLibrary(options, function (response) {
                if (response.didCancel) {} else if (response.error) {
                  _this27.onShowToast(response.error.includes('Camera') ? _HomeLocalizableString.default.permission_camera : response.error.includes('Photo') ? _HomeLocalizableString.default.permission_photo : response.error.includes('granted') ? _HomeLocalizableString.default.granted : '');
                } else if (response.customButton) {} else {
                  var source = {
                    uri: "data:image/jpeg;base64," + response.data
                  };

                  _this27.setState({
                    imageBase64: source
                  });
                }
              });
            }, 50);

            _this27.setphotoModalVisible(false);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[32])
        }))))));
      }
    }, {
      key: "setphotoModalVisible",
      value: function setphotoModalVisible(visible) {
        this.setState({
          photoModalVisible: visible
        });
      }
    }, {
      key: "onphotoModalClose",
      value: function onphotoModalClose() {
        this.setState({
          photoModalVisible: false
        });
      }
    }, {
      key: "_showInputDialog",
      value: function _showInputDialog() {
        this.setState({
          inputDialog: true
        });
      }
    }, {
      key: "_inputDialog",
      value: function _inputDialog() {
        var _this28 = this;

        return _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.inputDialog,
          title: _HomeLocalizableString.default.input_menu_name,
          onDismiss: function onDismiss(_) {
            return _this28.setState({
              inputDialog: false
            });
          },
          inputs: [{
            textInputProps: {
              returnKeyType: 'done'
            },
            placeholder: _HomeLocalizableString.default.please_input,
            defaultValue: this.state.inputValue,
            type: 'DELETE'
          }],
          buttons: [{
            text: _HomeLocalizableString.default.cancel,
            callback: function callback(_) {
              return _this28.setState({
                inputDialog: false
              });
            }
          }, {
            backgroundColor: {
              bgColorNormal: "#FEC200"
            },
            text: _HomeLocalizableString.default.confirm,
            callback: function callback(result) {
              if (result.textInputArray.toString().length > 0) {
                if (result.textInputArray.toString().length > 10) {
                  _this28.onShowToast(_HomeLocalizableString.default.name_is_to_long);

                  return;
                }

                _this28.props.navigation.setParams({
                  title: result.textInputArray.toString()
                });

                _this28.setState({
                  inputValue: result.textInputArray.toString()
                });

                _this28.setState({
                  inputDialog: false
                });
              }
            }
          }]
        });
      }
    }, {
      key: "_cancelFinishView",
      value: function _cancelFinishView(cancelClick, finishClick) {
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth,
            backgroundColor: '#d2d3d7',
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 10,
            paddingBottom: 10,
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: cancelClick,
          style: {
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 9,
            paddingBottom: 9,
            backgroundColor: '#c9c9c9',
            borderRadius: 25
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.cancel)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: finishClick,
          style: {
            paddingLeft: 20,
            paddingRight: 20,
            paddingTop: 9,
            paddingBottom: 9,
            backgroundColor: '#ffc009',
            borderRadius: 25
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.finish)));
      }
    }, {
      key: "_saveMenu",
      value: function _saveMenu() {
        var _this29 = this;

        this.setState({
          loadingVis: true
        });
        var dataArray = [];
        this.state.dataArray.map(function (item, index) {
          dataArray.push({
            value: item.value,
            text: escape(item.text),
            unit: escape(item.unit)
          });
        });
        var timeArray = [];
        this.state.timeArray.map(function (item, index) {
          timeArray.push({
            value: item.value,
            text: escape(item.text),
            time: item.time
          });
        });
        var classify = null;

        if (this.state.setClassifyData != null) {
          classify = {
            name: escape(this.state.setClassifyData.name),
            bgColor: this.state.setClassifyData.bgColor,
            id: this.state.setClassifyData.id
          };
        }

        var param = {
          menuName: escape(this.state.inputValue),
          imageBase64: this.state.imageBase64,
          classify: classify,
          dataArray: dataArray,
          timeArray: timeArray,
          evaluateLevel: this.state.evaluateLevel,
          evaluateValue: escape(this.state.evaluateValue),
          time: new Date().getTime()
        };
        var tempArray = [];
        var responseData = [];

        _miotSdk.Host.file.readFile(_DataHelper.default.menuFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push(item);
          });
          tempArray.push(param);

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this29._saveMenuData(saveData);
        }).catch(function (isSuccess) {
          tempArray.push(param);

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this29._saveMenuData(saveData);
        });
      }
    }, {
      key: "_saveMenuData",
      value: function _saveMenuData(saveData) {
        var _this30 = this;

        _miotSdk.Host.file.writeFile(_DataHelper.default.menuFileName, saveData).then(function (r) {
          _reactNative.DeviceEventEmitter.emit('refresh_menu');

          _this30.setState({
            loadingVis: false
          });

          _this30.props.navigation.goBack();

          _DataHelper.default._uploadDataMenuFileNameToFDS();
        }).catch(function (err) {
          _this30.onShowToast(_HomeLocalizableString.default.add_failed);

          _this30.setState({
            loadingVis: false
          });
        });
      }
    }, {
      key: "_editMenu",
      value: function _editMenu() {
        var _this31 = this;

        this.setState({
          loadingVis: true
        });
        var itemData = this.props.navigation.state.params.itemData;
        var dataArray = [];
        this.state.dataArray.map(function (item, index) {
          dataArray.push({
            value: item.value,
            text: escape(item.text),
            unit: escape(item.unit)
          });
        });
        var timeArray = [];
        this.state.timeArray.map(function (item, index) {
          timeArray.push({
            value: item.value,
            text: escape(item.text),
            time: item.time
          });
        });
        var classify = null;

        if (this.state.setClassifyData != null) {
          classify = {
            name: escape(this.state.setClassifyData.name),
            bgColor: this.state.setClassifyData.bgColor,
            id: this.state.setClassifyData.id
          };
        }

        var param = {
          menuName: escape(this.state.inputValue),
          imageBase64: this.state.imageBase64,
          classify: classify,
          dataArray: dataArray,
          timeArray: timeArray,
          evaluateLevel: this.state.evaluateLevel,
          evaluateValue: escape(this.state.evaluateValue),
          time: itemData.time
        };
        var tempArray = [];
        var responseData = [];
        var tagIndex = -1;

        _miotSdk.Host.file.readFile(_DataHelper.default.menuFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            if (parseInt(itemData.time) == parseInt(item.time)) {
              tagIndex = index;
            }
          });
          responseData.map(function (item, index) {
            if (tagIndex == index) {
              tempArray.push(param);
            } else {
              tempArray.push(item);
            }
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _this31._saveMenuData(saveData);
        }).catch(function (isSuccess) {
          _this31.setState({
            loadingVis: false
          });
        });
      }
    }]);
    return MyCookbook;
  }(_BaseComponent2.default);

  exports.default = MyCookbook;

  MyCookbook.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_TitleBar.default, {
        style: {
          backgroundColor: '#fff'
        },
        title: navigation.state.params ? navigation.state.params.title ? navigation.state.params.title : _HomeLocalizableString.default.my_cookbook : _HomeLocalizableString.default.my_cookbook,
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        },
        LeftText: _HomeLocalizableString.default.cancel,
        onPressEdit: function onPressEdit() {
          that._showInputDialog();
        }
      })
    };
  };
},10217,[14305,14314,14320,14323,14371,14377,14374,14386,10007,10074,10297,10033,10037,10220,10230,10223,10046,10226,10755,10187,10184,10229,10232,10235,10238,10205,10196,10241,10214,10244,10199,10247,10250]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _ReportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var titleHeight = 44;
  var imgHeight = 22;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _ReportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "render",
      value: function render() {
        _reactNative.StatusBar.setBarStyle('dark-content');

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [styles.titleBarContainer, this.props.style]
        }, this.props.LeftText ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            height: titleHeight,
            alignItems: 'stretch',
            justifyContent: 'center',
            marginLeft: 20
          },
          onPress: this.props.onPressLeft
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.titleText]
        }, this.props.LeftText)) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            height: titleHeight,
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.titleText],
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.onPressEdit ? _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 1,
          onPress: this.props.onPressEdit
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 20,
            height: 20,
            marginLeft: 10,
            resizeMode: 'contain'
          },
          source: _$$_REQUIRE(_dependencyMap[15])
        })) : null), _react.default.createElement(_reactNative.Text, {
          style: {
            marginRight: 20,
            color: 'rgba(0,0,0,0)'
          }
        }, "\u6D4B\u8BD5"));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  exports.default = TitleBar;
  TitleBar.propTypes = {
    style: _propTypes.default.any,
    onPressLeft: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    titleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: (_reactNative.StatusBar.currentHeight || 0) + titleHeight
    },
    textContainer: {
      height: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    titleText: {
      color: '#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    subtitleText: {
      color: '#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    leftRightText: {
      flexDirection: 'column',
      backgroundColor: '#0000',
      color: '#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: "center",
      textAlign: "center"
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginLeft: 14,
      marginTop: 8,
      marginBottom: 8,
      marginRight: 14
    },
    dot: {
      position: 'absolute',
      width: 10,
      height: 10,
      resizeMode: 'contain',
      right: 14,
      top: (_reactNative.StatusBar.currentHeight || 0) + 8
    }
  });
},10220,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10918,10318,11025,10977,10200,10178]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var defaultZIndex = 8;
  var touchZIndex = 99;
  var arrayLength = 0;

  var DragSortableView = function (_Component) {
    (0, _inherits2.default)(DragSortableView, _Component);

    function DragSortableView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DragSortableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragSortableView).call(this, props));

      _this._getKey = function (index) {
        var item = _this.state.dataSource[index];
        return _this.props.keyExtractor ? _this.props.keyExtractor(item.data, index) : item.originIndex;
      };

      _this._renderItemView = function () {
        var _this$props = _this.props,
            maxScale = _this$props.maxScale,
            minOpacity = _this$props.minOpacity;
        var inputRange = maxScale >= 1 ? [1, maxScale] : [maxScale, 1];
        var outputRange = maxScale >= 1 ? [1, minOpacity] : [minOpacity, 1];
        return _this.state.dataSource.map(function (item, index) {
          var transformObj = {};
          transformObj[_this.props.scaleStatus] = item.scaleValue;

          var key = _this._getKey(index);

          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            key: key,
            ref: function ref(_ref) {
              return _this.sortRefs.set(key, _ref);
            }
          }, _this._panResponder.panHandlers, {
            style: [styles.item, {
              marginTop: _this.props.marginChildrenTop,
              marginBottom: _this.props.marginChildrenBottom,
              marginLeft: _this.props.marginChildrenLeft,
              marginRight: _this.props.marginChildrenRight,
              left: item.position.x,
              top: item.position.y,
              opacity: item.scaleValue.interpolate({
                inputRange: inputRange,
                outputRange: outputRange
              }),
              transform: [transformObj]
            }]
          }), _react.default.createElement(_reactNative.TouchableOpacity, {
            activeOpacity: 1,
            delayLongPress: _this.props.delayLongPress,
            onPressOut: function onPressOut() {
              return _this.onPressOut();
            },
            onLongPress: function onLongPress() {
              return _this.startTouch(index);
            },
            onPress: function onPress() {
              if (_this.props.onClickItem) {
                _this.props.onClickItem(_this.getOriginalData(), item.data, index);
              }
            }
          }, _this.props.renderItem(item.data, index)), _this.props.renderItemIcon(item.data, index));
        });
      };

      _this.sortRefs = new Map();
      var itemWidth = props.childrenWidth + props.marginChildrenLeft + props.marginChildrenRight;
      var itemHeight = props.childrenHeight + props.marginChildrenTop + props.marginChildrenBottom;
      var rowNum = parseInt(props.parentWidth / itemWidth);
      var dataSource = props.dataSource.map(function (item, index) {
        var newData = {};
        var left = index % rowNum * itemWidth;
        var top = parseInt(index / rowNum) * itemHeight;
        newData.data = item;
        newData.originIndex = index;
        newData.originLeft = left;
        newData.originTop = top;
        newData.position = new _reactNative.Animated.ValueXY({
          x: parseInt(left + 0.5),
          y: parseInt(top + 0.5)
        });
        newData.scaleValue = new _reactNative.Animated.Value(1);
        return newData;
      });
      _this.state = {
        dataSource: dataSource,
        curPropsDataSource: props.dataSource,
        height: Math.ceil(dataSource.length / rowNum) * itemHeight,
        itemWidth: itemWidth,
        itemHeight: itemHeight
      };
      arrayLength = dataSource.length;
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {
          _this.isMovePanResponder = false;
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {
          return _this.isMovePanResponder;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {
          return _this.isMovePanResponder;
        },
        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {},
        onPanResponderMove: function onPanResponderMove(evt, gestureState) {
          return _this.moveTouch(evt, gestureState);
        },
        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {
          return _this.endTouch(evt);
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
          return false;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {
          return false;
        }
      });
      return _this;
    }

    (0, _createClass2.default)(DragSortableView, [{
      key: "startTouch",
      value: function startTouch(touchIndex) {
        var _this2 = this;

        var fixedItems = this.props.fixedItems;

        if (fixedItems.length > 0 && fixedItems.includes(touchIndex)) {
          return;
        }

        this.isHasMove = false;
        if (!this.props.sortable) return;

        var key = this._getKey(touchIndex);

        if (this.sortRefs.has(key)) {
          if (this.props.onDragStart) {
            this.props.onDragStart(touchIndex);
          }

          _reactNative.Animated.timing(this.state.dataSource[touchIndex].scaleValue, {
            toValue: this.props.maxScale,
            duration: this.props.scaleDuration,
            useNativeDriver: false
          }).start(function () {
            _this2.touchCurItem = {
              ref: _this2.sortRefs.get(key),
              index: touchIndex,
              originLeft: _this2.state.dataSource[touchIndex].originLeft,
              originTop: _this2.state.dataSource[touchIndex].originTop,
              moveToIndex: touchIndex
            };
            _this2.isMovePanResponder = true;
          });
        }
      }
    }, {
      key: "moveTouch",
      value: function moveTouch(nativeEvent, gestureState) {
        var _this3 = this;

        this.isHasMove = true;

        if (this.touchCurItem) {
          var dx = gestureState.dx;
          var dy = gestureState.dy;
          var itemWidth = this.state.itemWidth;
          var itemHeight = this.state.itemHeight;
          var rowNum = parseInt(this.props.parentWidth / itemWidth);
          var maxWidth = this.props.parentWidth - itemWidth;
          var maxHeight = itemHeight * Math.ceil(this.state.dataSource.length / rowNum) - itemHeight;

          if (!this.props.isDragFreely) {
            if (this.touchCurItem.originLeft + dx < 0) {
              dx = -this.touchCurItem.originLeft;
            } else if (this.touchCurItem.originLeft + dx > maxWidth) {
              dx = maxWidth - this.touchCurItem.originLeft;
            }

            if (this.touchCurItem.originTop + dy < 0) {
              dy = -this.touchCurItem.originTop;
            } else if (this.touchCurItem.originTop + dy > maxHeight) {
              dy = maxHeight - this.touchCurItem.originTop;
            }
          }

          var left = this.touchCurItem.originLeft + dx;
          var top = this.touchCurItem.originTop + dy;
          this.touchCurItem.ref.setNativeProps({
            style: {
              zIndex: touchZIndex
            }
          });
          this.state.dataSource[this.touchCurItem.index].position.setValue({
            x: left,
            y: top
          });
          var moveToIndex = 0;
          var moveXNum = dx / itemWidth;
          var moveYNum = dy / itemHeight;

          if (moveXNum > 0) {
            moveXNum = parseInt(moveXNum + 0.5);
          } else if (moveXNum < 0) {
            moveXNum = parseInt(moveXNum - 0.5);
          }

          if (moveYNum > 0) {
            moveYNum = parseInt(moveYNum + 0.5);
          } else if (moveYNum < 0) {
            moveYNum = parseInt(moveYNum - 0.5);
          }

          moveToIndex = this.touchCurItem.index + moveXNum + moveYNum * rowNum;

          if (moveToIndex > this.state.dataSource.length - 1) {
            moveToIndex = this.state.dataSource.length - 1;
          } else if (moveToIndex < 0) {
            moveToIndex = 0;
          }

          if (this.props.onDragging) {
            this.props.onDragging(gestureState, left, top, moveToIndex);
          }

          if (this.touchCurItem.moveToIndex != moveToIndex) {
            var fixedItems = this.props.fixedItems;
            if (fixedItems.length > 0 && fixedItems.includes(moveToIndex)) return;
            this.touchCurItem.moveToIndex = moveToIndex;
            this.state.dataSource.forEach(function (item, index) {
              var nextItem = null;

              if (index > _this3.touchCurItem.index && index <= moveToIndex) {
                nextItem = _this3.state.dataSource[index - 1];
              } else if (index >= moveToIndex && index < _this3.touchCurItem.index) {
                nextItem = _this3.state.dataSource[index + 1];
              } else if (index != _this3.touchCurItem.index && (item.position.x._value != item.originLeft || item.position.y._value != item.originTop)) {
                nextItem = _this3.state.dataSource[index];
              } else if (_this3.touchCurItem.index - moveToIndex > 0 && moveToIndex == index + 1 || _this3.touchCurItem.index - moveToIndex < 0 && moveToIndex == index - 1) {
                nextItem = _this3.state.dataSource[index];
              }

              if (nextItem != null) {
                _reactNative.Animated.timing(item.position, {
                  toValue: {
                    x: parseInt(nextItem.originLeft + 0.5),
                    y: parseInt(nextItem.originTop + 0.5)
                  },
                  duration: _this3.props.slideDuration,
                  easing: _reactNative.Easing.out(_reactNative.Easing.quad),
                  useNativeDriver: false
                }).start();
              }
            });
          }
        }
      }
    }, {
      key: "endTouch",
      value: function endTouch(nativeEvent) {
        var _this4 = this;

        if (this.touchCurItem) {
          if (this.props.onDragEnd) {
            this.props.onDragEnd(this.touchCurItem.index, this.touchCurItem.moveToIndex);
          }

          _reactNative.Animated.timing(this.state.dataSource[this.touchCurItem.index].scaleValue, {
            toValue: 1,
            duration: this.props.scaleDuration,
            useNativeDriver: false
          }).start(function () {
            _this4.touchCurItem.ref.setNativeProps({
              style: {
                zIndex: defaultZIndex
              }
            });

            _this4.changePosition(_this4.touchCurItem.index, _this4.touchCurItem.moveToIndex);

            _this4.touchCurItem = null;
          });
        }
      }
    }, {
      key: "onPressOut",
      value: function onPressOut() {
        var _this5 = this;

        this.isScaleRecovery = setTimeout(function () {
          if (_this5.isMovePanResponder && !_this5.isHasMove) {
            _this5.endTouch();
          }
        }, 220);
      }
    }, {
      key: "changePosition",
      value: function changePosition(startIndex, endIndex) {
        var _this6 = this;

        if (startIndex == endIndex) {
          var curItem = this.state.dataSource[startIndex];

          if (curItem != null) {
            curItem.position.setValue({
              x: parseInt(curItem.originLeft + 0.5),
              y: parseInt(curItem.originTop + 0.5)
            });
          }

          return;
        }

        var isCommon = true;

        if (startIndex > endIndex) {
          isCommon = false;
          var tempIndex = startIndex;
          startIndex = endIndex;
          endIndex = tempIndex;
        }

        var newDataSource = (0, _toConsumableArray2.default)(this.state.dataSource).map(function (item, index) {
          var newIndex = null;

          if (isCommon) {
            if (endIndex > index && index >= startIndex) {
              newIndex = index + 1;
            } else if (endIndex == index) {
              newIndex = startIndex;
            }
          } else {
            if (endIndex >= index && index > startIndex) {
              newIndex = index - 1;
            } else if (startIndex == index) {
              newIndex = endIndex;
            }
          }

          if (newIndex != null) {
            var newItem = (0, _objectSpread2.default)({}, _this6.state.dataSource[newIndex]);
            newItem.originLeft = item.originLeft;
            newItem.originTop = item.originTop;
            newItem.position = new _reactNative.Animated.ValueXY({
              x: parseInt(item.originLeft + 0.5),
              y: parseInt(item.originTop + 0.5)
            });
            item = newItem;
          }

          return item;
        });
        this.setState({
          dataSource: newDataSource
        }, function () {
          if (_this6.props.onDataChange) {
            _this6.props.onDataChange(_this6.getOriginalData());
          }

          var startItem = _this6.state.dataSource[startIndex];

          _this6.state.dataSource[startIndex].position.setValue({
            x: parseInt(startItem.originLeft + 0.5),
            y: parseInt(startItem.originTop + 0.5)
          });

          var endItem = _this6.state.dataSource[endIndex];

          _this6.state.dataSource[endIndex].position.setValue({
            x: parseInt(endItem.originLeft + 0.5),
            y: parseInt(endItem.originTop + 0.5)
          });
        });
      }
    }, {
      key: "reComplexDataSource",
      value: function reComplexDataSource(isInit, props) {
        var itemWidth = this.state.itemWidth;
        var itemHeight = this.state.itemHeight;
        var rowNum = parseInt(props.parentWidth / itemWidth);
        var dataSource = props.dataSource.map(function (item, index) {
          var newData = {};
          var left = index % rowNum * itemWidth;
          var top = parseInt(index / rowNum) * itemHeight;
          newData.data = item;
          newData.originIndex = index;
          newData.originLeft = left;
          newData.originTop = top;
          newData.position = new _reactNative.Animated.ValueXY({
            x: parseInt(left + 0.5),
            y: parseInt(top + 0.5)
          });
          newData.scaleValue = new _reactNative.Animated.Value(1);
          return newData;
        });

        if (isInit) {
          this.state = {
            dataSource: dataSource,
            height: Math.ceil(dataSource.length / rowNum) * itemHeight
          };
        } else {
          this.setState({
            dataSource: dataSource,
            height: Math.ceil(dataSource.length / rowNum) * itemHeight
          });
        }
      }
    }, {
      key: "getOriginalData",
      value: function getOriginalData() {
        return this.state.dataSource.map(function (item, index) {
          return item.data;
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            width: this.props.parentWidth,
            height: this.state.height
          }]
        }, this._renderItemView());
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextprops, prevState) {
        var itemWidth = nextprops.childrenWidth + nextprops.marginChildrenLeft + nextprops.marginChildrenRight;
        var itemHeight = nextprops.childrenHeight + nextprops.marginChildrenTop + nextprops.marginChildrenBottom;

        if (arrayLength != nextprops.dataSource.length || nextprops.dataSource != prevState.curPropsDataSource || itemWidth !== prevState.itemWidth || itemHeight !== prevState.itemHeight) {
          arrayLength = nextprops.dataSource.length;
          var rowNum = parseInt(nextprops.parentWidth / itemWidth);
          var dataSource = nextprops.dataSource.map(function (item, index) {
            var newData = {};
            var left = index % rowNum * itemWidth;
            var top = parseInt(index / rowNum) * itemHeight;
            newData.data = item;
            newData.originIndex = index;
            newData.originLeft = left;
            newData.originTop = top;
            newData.position = new _reactNative.Animated.ValueXY({
              x: parseInt(left + 0.5),
              y: parseInt(top + 0.5)
            });
            newData.scaleValue = new _reactNative.Animated.Value(1);
            return newData;
          });
          return {
            dataSource: dataSource,
            curPropsDataSource: nextprops.dataSource,
            height: Math.ceil(dataSource.length / rowNum) * itemHeight,
            itemWidth: itemWidth,
            itemHeight: itemHeight
          };
        }

        return null;
      }
    }]);
    return DragSortableView;
  }(_react.Component);

  exports.default = DragSortableView;
  DragSortableView.propTypes = {
    dataSource: PropTypes.array.isRequired,
    parentWidth: PropTypes.number,
    childrenHeight: PropTypes.number.isRequired,
    childrenWidth: PropTypes.number.isRequired,
    marginChildrenTop: PropTypes.number,
    marginChildrenBottom: PropTypes.number,
    marginChildrenLeft: PropTypes.number,
    marginChildrenRight: PropTypes.number,
    sortable: PropTypes.bool,
    onClickItem: PropTypes.func,
    onDragStart: PropTypes.func,
    onDragEnd: PropTypes.func,
    onDataChange: PropTypes.func,
    renderItem: PropTypes.func.isRequired,
    scaleStatus: PropTypes.oneOf(['scale', 'scaleX', 'scaleY']),
    fixedItems: PropTypes.array,
    keyExtractor: PropTypes.func,
    delayLongPress: PropTypes.number,
    isDragFreely: PropTypes.bool,
    onDragging: PropTypes.func,
    maxScale: PropTypes.number,
    minOpacity: PropTypes.number,
    scaleDuration: PropTypes.number,
    slideDuration: PropTypes.number
  };
  DragSortableView.defaultProps = {
    marginChildrenTop: 0,
    marginChildrenBottom: 0,
    marginChildrenLeft: 0,
    marginChildrenRight: 0,
    parentWidth: width,
    sortable: true,
    scaleStatus: 'scale',
    fixedItems: [],
    isDragFreely: false,
    maxScale: 1.1,
    minOpacity: 0.8,
    scaleDuration: 100,
    slideDuration: 300
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexWrap: 'wrap',
      flexDirection: 'row'
    },
    item: {
      position: 'absolute',
      zIndex: defaultZIndex
    }
  });
},10223,[14308,14305,14314,14359,14344,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      NativeModules = _require.NativeModules;

  var ImagePickerManager = NativeModules.ImagePickerManager;
  var DEFAULT_OPTIONS = {
    title: 'Select a Photo',
    cancelButtonTitle: 'Cancel',
    takePhotoButtonTitle: 'Take Photo…',
    chooseFromLibraryButtonTitle: 'Choose from Library…',
    quality: 1.0,
    allowsEditing: false,
    permissionDenied: {
      title: 'Permission denied',
      text: 'To be able to take pictures with your camera and choose images from your library.',
      reTryTitle: 're-try',
      okTitle: 'I\'m sure'
    }
  };
  module.exports = _objectSpread({}, ImagePickerManager, {
    showImagePicker: function showImagePicker(options, callback) {
      if (typeof options === 'function') {
        callback = options;
        options = {};
      }

      return ImagePickerManager.showImagePicker(_objectSpread({}, DEFAULT_OPTIONS, options), callback);
    }
  });
},10226,[14314,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "52b8aedcc174af6a336ed449c9c28f23",
    "name": "move_ic",
    "type": "png"
  });
},10229,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 120,
    "height": 120,
    "scales": [2, 3],
    "hash": "55d578d631749e5464a4ed3b90e689d4",
    "name": "coffee_step3_ic",
    "type": "png"
  });
},10232,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 120,
    "height": 120,
    "scales": [2, 3],
    "hash": "537db2ab13ea522569493c2e5ac8490b",
    "name": "coffee_step4_ic",
    "type": "png"
  });
},10235,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 120,
    "height": 120,
    "scales": [2, 3],
    "hash": "89bb7a69207ae2915228696830f49744",
    "name": "coffee_step5_ic",
    "type": "png"
  });
},10238,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 30,
    "height": 30,
    "scales": [2, 3],
    "hash": "355ed595881b923a013a04e0f8e7054c",
    "name": "evaluate_unsel_ic",
    "type": "png"
  });
},10241,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 16,
    "height": 16,
    "scales": [2, 3],
    "hash": "17f701e55298284d01b245372bfa581c",
    "name": "add_ic",
    "type": "png"
  });
},10244,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "09f85aa6b68b44c1d976b262c6bbee19",
    "name": "camera_btn",
    "type": "png"
  });
},10247,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "b2aef17a19a2be25a089617dada2efd4",
    "name": "pic_btn",
    "type": "png"
  });
},10250,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ui = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[14]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var first_options = _CommonSetting.SETTING_KEYS.first_options,
      second_options = _CommonSetting.SETTING_KEYS.second_options;

  var CommonSetting1 = function (_BaseComponent) {
    (0, _inherits2.default)(CommonSetting1, _BaseComponent);

    function CommonSetting1(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CommonSetting1);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CommonSetting1).call(this, props, context));
      _this.state = {
        sliderValue: 25,
        switchValue: false,
        showDot: [],
        showUpgrade: props.navigation.state.params.showDot,
        licenseUrl: '',
        policyUrl: ''
      };
      return _this;
    }

    (0, _createClass2.default)(CommonSetting1, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var firstOptions = [first_options.FIRMWARE_UPGRADE, first_options.SHARE];
        var secondOptions = [second_options.AUTO_UPGRADE];

        _miot.Service.getServerName().then(function (country) {
          var language = _miot.Resources.getLanguage();

          var countryCode = country.countryCode;

          if (!countryCode) {
            countryCode = 'GB';
          }

          if (!language) {
            language = 'en';
          }

          countryCode = countryCode.toUpperCase();
          language = language.toLowerCase();

          switch (countryCode) {
            case 'CN':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[18]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[19])
                  });
                }

                break;
              }

            case 'CA':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[20]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[21])
                  });
                }

                break;
              }

            case 'ES':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[22]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[23])
                  });
                }

                break;
              }

            case 'PT':
              {
                break;
              }

            case 'NL':
              {
                break;
              }

            case 'FR':
            case 'NG':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[24]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[25])
                  });
                }

                break;
              }

            case 'IT':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[26]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[27])
                  });
                }

                break;
              }

            case 'CH':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[28]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[29])
                  });
                }

                break;
              }

            case 'NO':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[30]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[31])
                  });
                }

                break;
              }

            case 'DK':
              {
                break;
              }

            case 'SE':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[32]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[33])
                  });
                }

                break;
              }

            case 'FI':
              {
                break;
              }

            case 'PL':
              {
                break;
              }

            case 'DE':
            case 'AT':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[34]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[35])
                  });
                }

                break;
              }

            case 'IE':
            case 'GB':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                }

                break;
              }

            case 'UA':
              {
                break;
              }

            case 'BE':
              {
                break;
              }

            case 'HR':
              {
                if (language === 'en') {} else {}

                break;
              }

            case 'CZ':
              {
                if (language === 'en') {} else {}

                break;
              }

            case 'GR':
            case 'CY':
              {
                break;
              }

            case 'BG':
              {
                break;
              }

            case 'LU':
              {
                break;
              }

            case 'HU':
              {
                break;
              }

            case 'LT':
              {
                break;
              }

            case 'RU':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[36]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[37])
                  });
                }

                break;
              }

            case 'BY':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[36]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[37])
                  });
                }

                break;
              }

            case 'JP':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[38]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[39])
                  });
                }

                break;
              }

            case 'KR':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[40]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[41])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[42]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[43])
                  });
                }

                break;
              }

            case 'ID':
              {
                break;
              }

            case 'MY':
              {
                break;
              }

            case 'SG':
              {
                break;
              }

            case 'TH':
              {
                break;
              }

            case 'VN':
              {
                break;
              }

            case 'MM':
              {
                break;
              }

            case 'PK':
            case 'PH':
            case 'AU':
            case 'NZ':
            case 'KE':
              {
                break;
              }

            case 'CL':
            case 'PE':
            case 'MX':
            case 'CO':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[44]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[45])
                  });
                }

                break;
              }

            case 'BR':
              {
                break;
              }

            case 'EG':
            case 'MA':
            case 'AE':
            case 'SA':
            case 'QA':
            case 'OM':
            case 'IQ':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[46]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[47])
                  });
                }

                break;
              }

            case 'IL':
              {
                break;
              }

            case 'TR':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[48]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[49])
                  });
                }

                break;
              }

            case 'TW':
              {
                if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[17])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[50]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[51])
                  });
                }

                break;
              }

            case 'US':
              {
                if (language === 'es') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[44]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[45])
                  });
                } else if (language === 'en') {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[52]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[53])
                  });
                } else {
                  _this2.setState({
                    licenseUrl: _$$_REQUIRE(_dependencyMap[54]),
                    policyUrl: _$$_REQUIRE(_dependencyMap[55])
                  });
                }

                break;
              }

            case 'RO':
              {
                break;
              }

            case 'SK':
              {
                break;
              }

            case 'SI':
              {
                break;
              }

            case 'EE':
              {
                break;
              }

            case 'LV':
              {
                break;
              }

            default:
              {
                _this2.setState({
                  licenseUrl: _$$_REQUIRE(_dependencyMap[16]),
                  policyUrl: _$$_REQUIRE(_dependencyMap[17])
                });
              }
          }
        });

        var extraOptions = {
          showUpgrade: true,
          bleOtaAuthType: 4,
          upgradePageKey: 'FirmwareUpgrade',
          deleteDeviceMessage: _HomeLocalizableString.default.delete_device_tips,
          option: {
            privacyURL: this.state.policyUrl,
            agreementURL: this.state.licenseUrl,
            experiencePlanURL: '',
            hideAgreement: false,
            hideUserExperiencePlan: true
          },
          syncDevice: true
        };
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.ScrollView, {
          showsVerticalScrollIndicator: false
        }, _react.default.createElement(_CommonSetting.CommonSetting, {
          navigation: this.props.navigation,
          firstOptions: firstOptions,
          showDot: this.state.showDot,
          secondOptions: secondOptions,
          extraOptions: extraOptions
        }), _react.default.createElement(_reactNative.View, {
          style: {
            height: 20
          }
        })));
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this._checkUpgrade();
      }
    }, {
      key: "_checkUpgrade",
      value: function _checkUpgrade() {
        var _this3 = this;

        _miot.Service.smarthome.getLatestVersionV2(_miot.Device.deviceID).then(function (newest) {
          _miot.Device.getBluetoothLE().getVersion(true, false).then(function (current) {
            if (newest.version > current) {
              _this3.setState({
                showDot: [first_options.FIRMWARE_UPGRADE]
              });
            } else {
              _this3.setState({
                showDot: []
              });
            }
          }).catch(function (err) {});
        });
      }
    }]);
    return CommonSetting1;
  }(_BaseComponent2.default);

  exports.default = CommonSetting1;

  CommonSetting1.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_ui.TitleBarBlack, {
        title: _HomeLocalizableString.default.setting,
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      })
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: _Styles.default.common.backgroundColor,
      flex: 1
    },
    featureSetting: {
      backgroundColor: '#fff'
    },
    blank: {
      height: 8,
      backgroundColor: _Styles.default.common.backgroundColor,
      borderTopColor: _Styles.default.common.hairlineColor,
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomColor: _Styles.default.common.hairlineColor,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
    },
    titleContainer: {
      height: 32,
      backgroundColor: '#fff',
      justifyContent: 'center',
      paddingLeft: _Styles.default.common.padding
    },
    title: {
      fontSize: 11,
      color: 'rgba(0,0,0,0.5)',
      lineHeight: 14
    }
  });
},10253,[14305,14320,14323,14371,14377,14386,10007,10297,10230,10033,10332,10323,10353,10074,10338,10037,10049,10052,10055,10058,10061,10064,10067,10070,10073,10076,10079,10082,10085,10088,10091,10094,10097,10100,10103,10106,10109,10112,10115,10118,10121,10124,10127,10130,10133,10136,10139,10142,10145,10148,10151,10154,10157,10160,10163,10166]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[9]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _OnlyCloseTitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var WaterFlooding = function (_BaseComponent) {
    (0, _inherits2.default)(WaterFlooding, _BaseComponent);

    function WaterFlooding(props) {
      var _this;

      (0, _classCallCheck2.default)(this, WaterFlooding);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WaterFlooding).call(this, props));
      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        second: 0,
        weight: props.navigation.state.params.weight,
        weightOver: props.navigation.state.params.weightOver,
        negative: props.navigation.state.params.negative,
        unit: props.navigation.state.params.unit,
        coffee_weight: props.navigation.state.params.coffee_weight,
        coffee_ratio: props.navigation.state.params.coffee_ratio,
        recommend_water: props.navigation.state.params.recommend_water,
        finalWeight: 0,
        step: 0,
        stepOneTime: 0,
        stepTwoTime: 0,
        stepThreeTime: 0,
        stepFourTime: 0,
        stepFiveTime: 0,
        stepSixTime: 0,
        lastReceiveWeightTime: 0,
        menZhengWeight: 0,
        stepOneReceiveWeightFirst: false,
        stepFourReceiveWeightFirst: false
      };
      return _this;
    }

    (0, _createClass2.default)(WaterFlooding, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.listener = _reactNative.DeviceEventEmitter.addListener('parseChar', function (message) {
          _this2._parseChar(message);
        });
        this.listener2 = _reactNative.DeviceEventEmitter.addListener('finish', function (message) {
          _this2.props.navigation.goBack();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.listener) {
          this.listener.remove();
        }

        if (this.listener2) {
          this.listener2.remove();
        }

        this._stopTime();

        this._stop5sTime();
      }
    }, {
      key: "_parseChar",
      value: function _parseChar(value) {
        if (value[0] == 0x55 && value[1] == 0xaa) {
          if (value[2] == 0x01) {
            if (value[3] == 0x07) {
              this.setState({
                weightOver: false
              });
              var length = value[4];
              var weightValue = (value[6] & 0xff) << 8 | value[5] & 0xff;
              this.setState({
                weight: weightValue
              });

              if (this.state.weight == 0) {
                this.setState({
                  finalWeight: weightValue
                });
              }

              this.setState({
                negative: (value[7] & 0xf0) >> 4 == 0 ? false : true
              });
              var unit = value[7] & 0x0f;

              if (unit == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (unit == 0x01) {
                this.setState({
                  unit: 'ml'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              } else if (unit == 0x02) {
                this.setState({
                  unit: 'oz'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              } else if (unit == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              }

              if (this.state.step == 0) {
                this.setState({
                  step: 1
                });

                this._startTime();
              } else if (this.state.step == 2) {
                if (this._doValue() > this.state.menZhengWeight) {
                  if (!this.state.stepOneReceiveWeightFirst) {
                    var date = new Date();
                    this.setState({
                      lastReceiveWeightTime: date.getTime()
                    });
                    this.setState({
                      stepOneReceiveWeightFirst: true
                    });
                  } else {
                    var _date = new Date();

                    if (_date.getTime() - this.state.lastReceiveWeightTime > 2000) {
                      this.setState({
                        step: 3
                      });
                      this.setState({
                        stepThreeTime: this.state.second - this.state.stepTwoTime
                      });
                    }
                  }
                } else {}
              } else if (this.state.step == 4) {
                if (this._doValue() > this.state.menZhengWeight) {
                  if (!this.state.stepFourReceiveWeightFirst) {
                    var _date2 = new Date();

                    this.setState({
                      lastReceiveWeightTime: _date2.getTime()
                    });
                    this.setState({
                      stepFourReceiveWeightFirst: true
                    });
                  } else {
                    var _date3 = new Date();

                    if (_date3.getTime() - this.state.lastReceiveWeightTime > 2000) {
                      this.setState({
                        step: 5
                      });
                      this.setState({
                        stepFiveTime: this.state.second - (this.state.stepTwoTime + this.state.stepThreeTime + this.state.stepFourTime)
                      });
                    }
                  }
                } else {}
              }
            } else if (value[3] == 0x08) {
              this.setState({
                weightOver: false
              });
              var _length = value[4];

              var _weightValue = (value[6] & 0xff) << 8 | value[5] & 0xff;

              this.setState({
                weight: _weightValue
              });

              if (this.state.weight == 0) {
                this.setState({
                  finalWeight: _weightValue
                });
              }

              this.setState({
                negative: (value[7] & 0xf0) >> 4 == 0 ? false : true
              });

              var _unit = value[7] & 0x0f;

              if (_unit == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (_unit == 0x01) {
                this.setState({
                  unit: 'ml'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              } else if (_unit == 0x02) {
                this.setState({
                  unit: 'oz'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              } else if (_unit == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });

                _reactNative.DeviceEventEmitter.emit('changeToGUnit');
              }

              if (this.state.step != 0) {
                if (this.state.weight <= 0) {
                  this._stopTime();

                  this.setState({
                    step: 6
                  });
                  var second = this.state.second;
                  var stepOneTime = this.state.stepOneTime;
                  var stepTwoTime = this.state.stepTwoTime;
                  var stepThreeTime = this.state.stepThreeTime;
                  var stepFourTime = this.state.stepFourTime;
                  var stepFiveTime = this.state.stepFiveTime;
                  var stepSixTime = second - (stepTwoTime + stepThreeTime + stepFiveTime + stepFourTime);
                  this.props.navigation.navigate('FinishCoffee', {
                    weight: this.state.finalWeight,
                    negative: this.state.negative,
                    unit: this.state.unit,
                    coffee_weight: this.state.coffee_weight,
                    coffee_ratio: this.state.coffee_ratio,
                    recommend_water: this.state.coffee_ratio * this._doValue(),
                    second: second,
                    stepOneTime: stepOneTime,
                    stepTwoTime: stepTwoTime,
                    stepThreeTime: stepThreeTime,
                    stepFourTime: stepFourTime,
                    stepFiveTime: stepFiveTime,
                    stepSixTime: stepSixTime
                  });
                  return;
                }
              }

              if (this.state.step == 1) {
                this._stop5sTime();

                this._start5sTime();
              } else if (this.state.step == 3) {
                this._stop5sTime();

                this._start5sTime();
              } else if (this.state.step == 5) {
                this._stop5sTime();

                this._start5sTime();
              }
            } else if (value[3] == 0x05) {
              this.setState({
                weight: 0
              });
              this.setState({
                negative: false
              });
            } else if (value[3] == 0x04) {
              var _length2 = value[4];

              if (value[5] == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (value[5] == 0x01) {
                this.setState({
                  unit: 'ml'
                });
              } else if (value[5] == 0x02) {
                this.setState({
                  unit: 'oz'
                });
              } else if (value[5] == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });
              }
            } else if (value[3] == 0x09) {
              var _length3 = value[4];

              if (value[5] == 0x00) {
                this.setState({
                  weightOver: false
                });
              } else if (value[5] == 0x01) {
                this.setState({
                  weightOver: true
                });
              } else if (value[5] == 0x02) {}
            } else if (value[3] == 0x81) {
              var _length4 = value[4];

              var _weightValue2 = (value[6] & 0xff) << 8 | value[5] & 0xff;

              this.setState({
                weight: _weightValue2
              });
              this.setState({
                negative: (value[7] & 0xf0) >> 4 == 0 ? false : true
              });

              var _unit2 = value[7] & 0x0f;

              if (_unit2 == 0x00) {
                this.setState({
                  unit: 'g'
                });
              } else if (_unit2 == 0x01) {
                this.setState({
                  unit: 'ml'
                });
              } else if (_unit2 == 0x02) {
                this.setState({
                  unit: 'oz'
                });
              } else if (_unit2 == 0x03) {
                this.setState({
                  unit: 'lb:oz'
                });
              }

              if (value[8] == 0x00) {
                this.setState({
                  weightOver: false
                });
              } else if (value[8] == 0x01) {
                this.setState({
                  weightOver: true
                });
              } else if (value[8] == 0x02) {}
            }
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fff'
          }
        }, this._coffeeView1(), this._coffeeView2(), this._coffeeView3(), this._coffeeView4());
      }
    }, {
      key: "_coffeeView1",
      value: function _coffeeView1() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.hand_made_coffee), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold',
            marginLeft: 5
          })
        }, "1:", this.state.coffee_ratio));
      }
    }, {
      key: "_coffeeView2",
      value: function _coffeeView2() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 4,
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: 25
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: this._getWeightProportion() >= 1.0 ? _$$_REQUIRE(_dependencyMap[15]) : this._getWeightProportion() >= 0.9 ? _$$_REQUIRE(_dependencyMap[16]) : this._getWeightProportion() >= 0.8 ? _$$_REQUIRE(_dependencyMap[17]) : this._getWeightProportion() >= 0.7 ? _$$_REQUIRE(_dependencyMap[18]) : this._getWeightProportion() >= 0.6 ? _$$_REQUIRE(_dependencyMap[19]) : this._getWeightProportion() >= 0.5 ? _$$_REQUIRE(_dependencyMap[20]) : this._getWeightProportion() >= 0.4 ? _$$_REQUIRE(_dependencyMap[21]) : this._getWeightProportion() >= 0.3 ? _$$_REQUIRE(_dependencyMap[22]) : this._getWeightProportion() >= 0.2 ? _$$_REQUIRE(_dependencyMap[23]) : _$$_REQUIRE(_dependencyMap[24])
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'column',
            alignItems: 'center',
            paddingBottom: 40,
            position: 'absolute',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            width: 220,
            fontSize: 13,
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          })
        }, _HomeLocalizableString.default.recommend_water_flow(this.state.recommend_water)), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 60,
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold'
          })
        }, this.state.negative ? '-' : '', this.state.weight == 0 ? '0.0' : this._doValue()), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 25,
            color: '#3e3833'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold'
          })
        }, "g")));
      }
    }, {
      key: "_doValue",
      value: function _doValue() {
        if (this.state.weight / 10.0 >= 1000) {
          return Math.round(this.state.weight / 10.0);
        } else {
          return this.state.weight / 10.0;
        }
      }
    }, {
      key: "_getWeightProportion",
      value: function _getWeightProportion() {
        return (this._doValue() / this.state.recommend_water).toFixed(1);
      }
    }, {
      key: "_coffeeView3",
      value: function _coffeeView3() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 2,
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: 10
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 100,
            height: 100,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: this.state.step == 0 ? _$$_REQUIRE(_dependencyMap[25]) : this.state.step == 1 ? _$$_REQUIRE(_dependencyMap[25]) : this.state.step == 2 ? _$$_REQUIRE(_dependencyMap[26]) : this.state.step == 3 ? _$$_REQUIRE(_dependencyMap[27]) : this.state.step == 4 ? _$$_REQUIRE(_dependencyMap[27]) : _$$_REQUIRE(_dependencyMap[28])
        }), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          })
        }, this.state.step == 0 ? _HomeLocalizableString.default.count_down_after_add_water : this.state.step == 1 ? '' : this.state.step == 2 ? _HomeLocalizableString.default.steaming : this.state.step == 3 ? _HomeLocalizableString.default.first_time_add_water : this.state.step == 4 ? '' : this.state.step == 5 ? _HomeLocalizableString.default.second_time_add_water : ''));
      }
    }, {
      key: "_coffeeView4",
      value: function _coffeeView4() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 2,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            if (_this3.state.step == 0) {
              return;
            }

            if (_this3.state.step == 6) {
              _this3.setState({
                finalWeight: _this3.state.weight
              });

              _this3._stopTime();

              var step = _this3.state.step;
              step == 6;
              var second = _this3.state.second;
              var stepOneTime = _this3.state.stepOneTime;
              var stepTwoTime = _this3.state.stepTwoTime;
              var stepThreeTime = _this3.state.stepThreeTime;
              var stepFourTime = _this3.state.stepFourTime;
              var stepFiveTime = _this3.state.stepFiveTime;
              var stepSixTime = _this3.state.stepSixTime;
              stepSixTime = second - (stepTwoTime + stepThreeTime + stepFiveTime + stepFourTime);

              _this3.props.navigation.navigate('FinishCoffee', {
                weight: _this3.state.weight,
                negative: _this3.state.negative,
                unit: _this3.state.unit,
                coffee_weight: _this3.state.coffee_weight,
                coffee_ratio: _this3.state.coffee_ratio,
                recommend_water: _this3.state.coffee_ratio * _this3._doValue(),
                second: second,
                stepOneTime: stepOneTime,
                stepTwoTime: stepTwoTime,
                stepThreeTime: stepThreeTime,
                stepFourTime: stepFourTime,
                stepFiveTime: stepFiveTime,
                stepSixTime: stepSixTime
              });
            } else {
              _this3.setState({
                finalWeight: _this3.state.weight
              });

              _this3._stopTime();

              var _second = _this3.state.second;
              var _stepOneTime = _this3.state.stepOneTime;
              var _stepTwoTime = _this3.state.stepTwoTime;
              var _stepThreeTime = _this3.state.stepThreeTime;
              var _stepFourTime = _this3.state.stepFourTime;
              var _stepFiveTime = _this3.state.stepFiveTime;
              var _stepSixTime = _this3.state.stepSixTime;

              if (_this3.state.step == 1) {
                _stepTwoTime = _second - _stepOneTime;
              } else if (_this3.state.step == 2) {
                _stepThreeTime = _second - _stepTwoTime;
              } else if (_this3.state.step == 3) {
                _stepFourTime = _second - (_stepTwoTime + _stepThreeTime);
              } else if (_this3.state.step == 4) {
                _stepFiveTime = _second - (_stepTwoTime + _stepThreeTime + _stepFourTime);
              } else if (_this3.state.step == 5) {
                _stepSixTime = _second - (_stepTwoTime + _stepThreeTime + _stepFiveTime + _stepFourTime);
              }

              _this3.props.navigation.navigate('FinishCoffee', {
                weight: _this3.state.weight,
                negative: _this3.state.negative,
                unit: _this3.state.unit,
                coffee_weight: _this3.state.coffee_weight,
                coffee_ratio: _this3.state.coffee_ratio,
                recommend_water: _this3.state.coffee_ratio * _this3._doValue(),
                second: _second,
                stepOneTime: _stepOneTime,
                stepTwoTime: _stepTwoTime,
                stepThreeTime: _stepThreeTime,
                stepFourTime: _stepFourTime,
                stepFiveTime: _stepFiveTime,
                stepSixTime: _stepSixTime
              });
            }
          },
          style: {
            paddingTop: 15,
            paddingBottom: 15,
            width: '50%',
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 100,
            backgroundColor: this._doValue() >= this.state.recommend_water ? '#ffd33d' : '#ffffff',
            borderColor: '#ffd33d',
            borderWidth: 1,
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 18,
            color: this._doValue() >= this.state.recommend_water ? '#ffffff' : '#ffd33d'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold'
          })
        }, this._addZero(parseInt(this.state.second / 60)), ":", this._addZero(parseInt(this.state.second % 60))), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: this._doValue() >= this.state.recommend_water ? '#ffffff' : '#ffd33d'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginLeft: 10
          })
        }, _HomeLocalizableString.default.end)));
      }
    }, {
      key: "_addZero",
      value: function _addZero(value) {
        if (value < 10) {
          return "0" + value;
        } else {
          return value;
        }
      }
    }, {
      key: "_startTime",
      value: function _startTime() {
        var _this4 = this;

        this._timer = setInterval(function () {
          _this4.setState({
            second: _this4.state.second + 1
          });
        }, 1000);
      }
    }, {
      key: "_stopTime",
      value: function _stopTime() {
        if (this._timer) {
          clearInterval(this._timer);
        }
      }
    }, {
      key: "_start5sTime",
      value: function _start5sTime() {
        var _this5 = this;

        this._5MinTimer = setInterval(function () {
          if (_this5.state.step == 1) {
            _this5.setState({
              menZhengWeight: _this5._doValue()
            });

            _this5.setState({
              step: 2
            });

            _this5.setState({
              stepTwoTime: _this5.state.second
            });
          }

          if (_this5.state.step == 3) {
            _this5.setState({
              step: 4
            });

            _this5.setState({
              stepFourTime: _this5.state.second - (_this5.state.stepTwoTime + _this5.state.stepThreeTime)
            });
          }

          if (_this5.state.step == 5) {
            _this5.setState({
              step: 6
            });
          }

          _this5._stop5sTime();
        }, 2000);
      }
    }, {
      key: "_stop5sTime",
      value: function _stop5sTime() {
        if (this._5MinTimer) {
          clearInterval(this._5MinTimer);
        }
      }
    }]);
    return WaterFlooding;
  }(_BaseComponent2.default);

  exports.default = WaterFlooding;

  WaterFlooding.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_OnlyCloseTitleBar.default, {
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft() {
          navigation.goBack();
        }
      })
    };
  };
},10256,[14305,14314,14320,14323,14371,14377,14374,14386,10007,10074,10297,10033,10037,10719,10259,10265,10268,10271,10274,10277,10280,10283,10286,10289,10292,10295,10232,10235,10238]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _ReportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var titleHeight = 44;
  var imgHeight = 22;

  var OnlyCloseTitleBar = function (_Component) {
    (0, _inherits2.default)(OnlyCloseTitleBar, _Component);

    function OnlyCloseTitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, OnlyCloseTitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(OnlyCloseTitleBar).call(this, props));
      (0, _ReportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(OnlyCloseTitleBar, [{
      key: "render",
      value: function render() {
        _reactNative.StatusBar.setBarStyle('dark-content');

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [styles.titleBarContainer, this.props.style]
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            height: titleHeight,
            alignItems: 'stretch',
            justifyContent: 'center',
            marginLeft: 20
          },
          onPress: this.props.onPressLeft
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 30,
            height: 30,
            resizeMode: 'contain'
          },
          source: _$$_REQUIRE(_dependencyMap[15])
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            height: titleHeight,
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.titleText],
          onPress: this.props.onPressTitle
        }, this.props.title)), _react.default.createElement(_reactNative.Text, {
          style: {
            marginRight: 20,
            color: 'rgba(0,0,0,0)'
          }
        }, "\u6D4B\u8BD5"));
      }
    }]);
    return OnlyCloseTitleBar;
  }(_react.Component);

  exports.default = OnlyCloseTitleBar;
  OnlyCloseTitleBar.propTypes = {
    style: _propTypes.default.any,
    onPressLeft: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    titleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: (_reactNative.StatusBar.currentHeight || 0) + titleHeight
    },
    textContainer: {
      height: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    titleText: {
      color: '#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    subtitleText: {
      color: '#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    leftRightText: {
      flexDirection: 'column',
      backgroundColor: '#0000',
      color: '#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: "center",
      textAlign: "center"
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginLeft: 14,
      marginTop: 8,
      marginBottom: 8,
      marginRight: 14
    },
    dot: {
      position: 'absolute',
      width: 10,
      height: 10,
      resizeMode: 'contain',
      right: 14,
      top: (_reactNative.StatusBar.currentHeight || 0) + 8
    }
  });
},10259,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10918,10318,11025,10977,10200,10262]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8a825e18e6b934ea7e2574c28a8d25de",
    "name": "close_ic",
    "type": "png"
  });
},10262,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "350c0300e48234a872eccbb9505901ac",
    "name": "10",
    "type": "png"
  });
},10265,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "e628a1f6be9bdc938c578ca28d6b1a45",
    "name": "9",
    "type": "png"
  });
},10268,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "8b4f66e7297471a2333f805cb33e5334",
    "name": "8",
    "type": "png"
  });
},10271,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "c09c6b38b3e265c4c2616221f599267c",
    "name": "7",
    "type": "png"
  });
},10274,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "81603c3862c2616bfd0a31f4b1e96a29",
    "name": "6",
    "type": "png"
  });
},10277,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "89481e92e03fd030da10ea3a678f6304",
    "name": "5",
    "type": "png"
  });
},10280,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "520184f0730973eb2cc9034e9968d0ef",
    "name": "4",
    "type": "png"
  });
},10283,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "afcadfa7c66f3c76f534435e5d2c2b67",
    "name": "3",
    "type": "png"
  });
},10286,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "1a897dc3c65f86bf773b09f17596272c",
    "name": "2",
    "type": "png"
  });
},10289,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "abd66ae7cad3af2cb1200debb92182a7",
    "name": "1",
    "type": "png"
  });
},10292,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 120,
    "height": 120,
    "scales": [2, 3],
    "hash": "b47142b84554c7ed9fb58f575cc3ce23",
    "name": "coffee_step2_ic",
    "type": "png"
  });
},10295,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _OnlyCloseTitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _DataHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var FinishCoffee = function (_BaseComponent) {
    (0, _inherits2.default)(FinishCoffee, _BaseComponent);

    function FinishCoffee(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FinishCoffee);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FinishCoffee).call(this, props));
      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        weight: props.navigation.state.params.weight,
        negative: props.navigation.state.params.negative,
        unit: props.navigation.state.params.unit,
        coffee_weight: props.navigation.state.params.coffee_weight,
        coffee_ratio: props.navigation.state.params.coffee_ratio,
        recommend_water: props.navigation.state.params.recommend_water,
        second: props.navigation.state.params.second,
        stepOneTime: props.navigation.state.params.stepOneTime,
        stepTwoTime: props.navigation.state.params.stepTwoTime,
        stepThreeTime: props.navigation.state.params.stepThreeTime,
        stepFourTime: props.navigation.state.params.stepFourTime,
        stepFiveTime: props.navigation.state.params.stepFiveTime,
        stepSixTime: props.navigation.state.params.stepSixTime
      };
      return _this;
    }

    (0, _createClass2.default)(FinishCoffee, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.listener = _reactNative.DeviceEventEmitter.addListener('finish2', function (message) {
          _this2.props.navigation.goBack();
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.listener) {
          this.listener.remove();
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this._coffeeView1(), this._coffeeView2(), this._coffeeView3(), this._coffeeView4());
      }
    }, {
      key: "_addZero",
      value: function _addZero(value) {
        if (value < 10) {
          return "0" + value;
        } else {
          return value;
        }
      }
    }, {
      key: "_coffeeView1",
      value: function _coffeeView1() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, _HomeLocalizableString.default.hand_made_coffee), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            fontWeight: 'bold',
            marginLeft: 5
          })
        }, "1:", this.state.coffee_ratio));
      }
    }, {
      key: "_coffeeView2",
      value: function _coffeeView2() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 4,
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: 25
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 300,
            height: 300,
            resizeMode: 'contain',
            justifyContent: 'center',
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[15])
        }));
      }
    }, {
      key: "_coffeeView3",
      value: function _coffeeView3() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1.5,
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: 10
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          })
        }, _HomeLocalizableString.default.coffee), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginLeft: 5,
            textAlign: 'center'
          })
        }, this.state.coffee_weight, "g"), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center',
            marginLeft: 20
          })
        }, _HomeLocalizableString.default.water), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginLeft: 5,
            textAlign: 'center'
          })
        }, this._doValue(), "g")), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center',
            marginTop: 20
          })
        }, _HomeLocalizableString.default.all_time, parseInt(this.state.second / 60), _HomeLocalizableString.default.min_, this._addZero(parseInt(this.state.second % 60)), _HomeLocalizableString.default.second_));
      }
    }, {
      key: "_doValue",
      value: function _doValue() {
        return this.state.weight / 10.0 > 1000 ? this.state.weight / 10 : this.state.weight / 10.0;
      }
    }, {
      key: "_coffeeView4",
      value: function _coffeeView4() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 2,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this3._createCookbook();
          },
          style: {
            paddingTop: 15,
            paddingBottom: 15,
            width: '50%',
            alignItems: 'center',
            justifyContent: 'center',
            borderRadius: 100,
            borderColor: '#ffb61c',
            borderWidth: 1,
            flexDirection: 'row',
            backgroundColor: '#ffb61c'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 16,
            color: '#fff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            textAlign: 'center'
          })
        }, _HomeLocalizableString.default.create_cookbook)));
      }
    }, {
      key: "_saveClassifyData",
      value: function _saveClassifyData() {
        var _this4 = this;

        var tempArray = [];
        var responseData = [];

        _miot.Host.file.readFile(_DataHelper.default.classifyFileName).then(function (utf8Content) {
          responseData = JSON.parse(_DataHelper.default.hexCharCodeToStr(utf8Content));
          responseData.map(function (item, index) {
            tempArray.push(item);
          });
          var isHaveCoffeeClassify = false;
          tempArray.map(function (item, index) {
            if (item.id == 999) {
              isHaveCoffeeClassify = true;
            }
          });

          if (isHaveCoffeeClassify) {
            return;
          }

          tempArray.push({
            color: "#a8650f",
            name: escape(_HomeLocalizableString.default.coffee),
            id: 999
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miot.Host.file.writeFile(_DataHelper.default.classifyFileName, saveData).then(function (r) {
            _DataHelper.default._uploadClassifyFileNameToFDS();
          }).catch(function (err) {
            _this4.onShowToast(_HomeLocalizableString.default.add_failed);
          });

          _this4.setNewClassifyModalVisible(false);
        }).catch(function (isSuccess) {
          tempArray.push({
            color: "#a8650f",
            name: escape(_HomeLocalizableString.default.coffee),
            id: 999
          });

          var saveData = _DataHelper.default.strToHexCharCode(JSON.stringify(tempArray));

          _miot.Host.file.writeFile(_DataHelper.default.classifyFileName, saveData).then(function (r) {
            _DataHelper.default._uploadClassifyFileNameToFDS();
          }).catch(function (err) {});
        });
      }
    }, {
      key: "_createCookbook",
      value: function _createCookbook() {
        var data = {
          "menuName": _HomeLocalizableString.default.my_coffee,
          "classify": {
            "bgColor": "#a8650f",
            "id": 999,
            "name": escape(_HomeLocalizableString.default.coffee)
          },
          "dataArray": [{
            "value": "1:" + this.state.coffee_ratio,
            "text": escape(_HomeLocalizableString.default.my_coffee_water_radio),
            "unit": ""
          }, {
            "value": this._doValue(),
            "text": escape(_HomeLocalizableString.default.water),
            "unit": "g"
          }, {
            "value": this.state.coffee_weight,
            "text": escape(_HomeLocalizableString.default.coffee2),
            "unit": "g"
          }],
          "timeArray": [{
            "value": parseInt(this.state.second / 60) + "'" + this._addZero(parseInt(this.state.second % 60)) + "'",
            "text": escape(_HomeLocalizableString.default.all_time),
            "time": parseInt(this.state.second)
          }, {
            "value": parseInt((parseInt(this.state.stepOneTime) + parseInt(this.state.stepTwoTime) + parseInt(this.state.stepThreeTime)) / 60) + "'" + this._addZero((this.state.stepOneTime + this.state.stepTwoTime + this.state.stepThreeTime) % 60) + "'",
            "text": escape(_HomeLocalizableString.default.steam),
            "time": parseInt(this.state.stepOneTime) + parseInt(this.state.stepTwoTime) + parseInt(this.state.stepThreeTime)
          }, {
            "value": parseInt((parseInt(this.state.stepFourTime) + parseInt(this.state.stepFiveTime)) / 60) + "'" + this._addZero(parseInt((this.state.stepFourTime + this.state.stepFiveTime) % 60)) + "'",
            "text": escape(_HomeLocalizableString.default.first_add_water),
            "time": parseInt(this.state.stepFourTime) + parseInt(this.state.stepFiveTime)
          }, {
            "value": parseInt(this.state.stepSixTime / 60) + "'" + this._addZero(parseInt(this.state.stepSixTime % 60)) + "'",
            "text": escape(_HomeLocalizableString.default.second_add_water),
            "time": parseInt(this.state.stepSixTime)
          }],
          "evaluateValue": escape(''),
          "time": new Date().getTime()
        };

        _reactNative.DeviceEventEmitter.emit('finish', '');

        _reactNative.DeviceEventEmitter.emit('finish2', '');

        this._saveClassifyData();

        this.props.navigation.navigate('MyCookbook', {
          itemData: data,
          editFlag: false,
          isAddCoffee: true
        });
      }
    }]);
    return FinishCoffee;
  }(_BaseComponent2.default);

  exports.default = FinishCoffee;

  FinishCoffee.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_OnlyCloseTitleBar.default, {
        style: {
          backgroundColor: '#fff'
        },
        onPressLeft: function onPressLeft() {
          _reactNative.DeviceEventEmitter.emit('finish', '');

          navigation.goBack();
        }
      })
    };
  };
},10298,[14305,14314,14320,14323,14371,14377,14374,14386,10007,10297,10033,10037,10259,10074,10046,10301]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 322,
    "height": 342,
    "scales": [2, 3],
    "hash": "a91a37ceb84233bd50316a4e43bf8dea",
    "name": "balance_coffee_done_bg",
    "type": "png"
  });
},10301,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miotSdk = _$$_REQUIRE(_dependencyMap[8]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Preview = function (_BaseComponent) {
    (0, _inherits2.default)(Preview, _BaseComponent);

    function Preview(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Preview);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Preview).call(this, props));
      _this.state = {
        evaluateLevel: 2,
        evaluateArray: [0, 0, 0, 0, 0],
        dataArray: [],
        timeArray: [],
        itemData: _this.props.navigation.state.params.itemData,
        evaluateValue: '',
        menuName: '',
        date: '',
        imageBase64: '',
        setClassifyData: null,
        nickName: ''
      };
      return _this;
    }

    (0, _createClass2.default)(Preview, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        _miotSdk.Service.account.load().then(function (res) {
          _this2.setState({
            nickName: res.nickName
          });
        });

        var itemData = this.state.itemData;
        var dataNotes = itemData.dataArray;
        var tempArray = [];
        dataNotes.map(function (item, index) {
          tempArray.push({
            value: item.value,
            text: unescape(item.text),
            unit: unescape(item.unit)
          });
        });
        var dataCooktime = itemData.timeArray;
        var timeArray = [];
        dataCooktime.map(function (item, index) {
          timeArray.push({
            value: item.value,
            text: unescape(item.text),
            time: item.time
          });
        });
        var classify = null;

        if (itemData.classify != null) {
          classify = {
            name: unescape(itemData.classify.name),
            bgColor: itemData.classify.bgColor,
            id: itemData.classify.id
          };
        }

        var date = new Date(itemData.time);
        this.setState({
          dataArray: tempArray,
          timeArray: timeArray,
          evaluateLevel: itemData.evaluateLevel,
          evaluateValue: itemData.evaluateValue,
          menuName: itemData.menuName,
          date: date.getFullYear() + "." + (date.getMonth() + 1) + "." + date.getDate(),
          imageBase64: itemData.imageBase64,
          setClassifyData: classify
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.ScrollView, {
          ref: function ref(scrollView) {
            _this3.scrollView = scrollView;
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 50,
            marginLeft: 25,
            marginRight: 25,
            marginTop: 10,
            marginBottom: 10,
            backgroundColor: '#fff',
            elevation: 5,
            shadowColor: 'black',
            shadowOffset: {
              width: 0,
              height: 0
            },
            shadowOpacity: _reactNative.Platform.OS == 'ios' ? 0.2 : 1
          }
        }, this._topImageView(), this._view1(), this._view2(), _react.default.createElement(_reactNative.View, {
          style: {
            paddingLeft: 20,
            paddingRight: 20
          }
        }, this.state.timeArray.length > 0 ? this._coffeeTimeView(this.state.timeArray[0].time, this.state.timeArray[1].time, this.state.timeArray[2].time, this.state.timeArray[3].time) : null, this.state.timeArray.length > 0 ? this.state.timeArray.map(function (item, index) {
          return _this3._dataListItemView2(item, index);
        }) : null), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingLeft: 20,
            paddingRight: 20,
            marginTop: 20,
            marginBottom: 20
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            alignItems: 'flex-end'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            marginRight: 3,
            color: '#666'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.nickName), _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center'
          },
          source: _$$_REQUIRE(_dependencyMap[13])
        }))))), this._bottomView());
      }
    }, {
      key: "_dataListItemView2",
      value: function _dataListItemView2(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            backgroundColor: '#f5f5f5',
            borderRadius: 8,
            flexDirection: 'row',
            height: 40,
            marginBottom: 5,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginRight: 10,
            marginLeft: 10
          })
        }, data.value), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, unescape(data.text)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }));
      }
    }, {
      key: "_coffeeTimeView",
      value: function _coffeeTimeView(allTime, time1, time2, time3) {
        return _react.default.createElement(_reactNative.View, {
          style: {
            borderRadius: 8,
            flexDirection: 'row',
            height: 40,
            marginTop: 5,
            marginBottom: 10,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: time1 / allTime,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            borderTopLeftRadius: 18,
            borderBottomLeftRadius: 18,
            borderTopRightRadius: time2 == 0 ? 18 : 0,
            borderBottomRightRadius: time2 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[14])
        })), time2 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time2 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: time3 == 0 ? 18 : 0,
            borderBottomRightRadius: time3 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[15])
        })) : null, time3 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time3 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: 18,
            borderBottomRightRadius: 18,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[16])
        })) : null);
      }
    }, {
      key: "_topImageView",
      value: function _topImageView() {
        var data = this.state.setClassifyData;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1.3
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 50,
            height: this.mScreenWidth - 120
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth - 50,
            height: this.mScreenWidth - 120,
            resizeMode: 'cover'
          },
          source: _$$_REQUIRE(_dependencyMap[17])
        }), _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth - 50,
            height: this.mScreenWidth - 120,
            resizeMode: 'cover',
            position: 'absolute'
          },
          source: this.state.imageBase64 == 'coffee' ? _$$_REQUIRE(_dependencyMap[18]) : this.state.imageBase64
        })), _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: data != null ? data.bgColor : '#443e39',
            borderRadius: 7,
            paddingTop: 3,
            paddingBottom: 3,
            paddingLeft: 10,
            paddingRight: 10,
            position: 'absolute',
            top: 20,
            right: 20
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, data != null ? data.name : _HomeLocalizableString.default.not_classify)));
      }
    }, {
      key: "_view1",
      value: function _view1() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            paddingLeft: 20,
            paddingRight: 20,
            justifyContent: 'center',
            marginTop: 20,
            marginBottom: 20
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            width: this.mScreenWidth / 3,
            fontSize: 18,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, this.state.menuName), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this._evaluateView()), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#999'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 10
          })
        }, this.state.date), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#999'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 10
          })
        }, this.state.evaluateValue));
      }
    }, {
      key: "_view2",
      value: function _view2() {
        var _this4 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            paddingLeft: 20,
            paddingRight: 20
          }
        }, this.state.dataArray.map(function (item, index) {
          return _this4._dataListItemView(item, index);
        }));
      }
    }, {
      key: "_evaluateView",
      value: function _evaluateView() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, this.state.evaluateArray.map(function (item, index) {
          if (index <= _this5.state.evaluateLevel && _this5.state.evaluateLevel != -1) {
            return _react.default.createElement(_reactNative.View, {
              key: index
            }, _react.default.createElement(_reactNative.Image, {
              source: _$$_REQUIRE(_dependencyMap[19])
            }));
          } else {
            return _react.default.createElement(_reactNative.View, {
              key: index
            }, _react.default.createElement(_reactNative.Image, {
              source: _$$_REQUIRE(_dependencyMap[20])
            }));
          }
        }));
      }
    }, {
      key: "_bottomView",
      value: function _bottomView() {
        var _this6 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row',
            position: 'absolute',
            bottom: 0
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this6.props.navigation.goBack();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[21])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            var node = (0, _reactNative.findNodeHandle)(_this6.scrollView);
            var imageName = "screen_" + new Date().getTime() + ".png";

            _miotSdk.Host.file.longScreenShot(node, imageName).then(function (imagePath) {
              _miotSdk.Host.file.saveImageToPhotosAlbum(imageName).then(function (_) {
                _this6.onShowToast(_HomeLocalizableString.default.save_to_photo);
              }).catch(function (result) {
                if (result.code == -100) {
                  _this6.onShowToast(_HomeLocalizableString.default.permission_save);
                }
              });
            }).catch(function (result) {});
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[22])
        })));
      }
    }, {
      key: "_dataListItemView",
      value: function _dataListItemView(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            backgroundColor: '#f5f5f5',
            borderRadius: 8,
            flexDirection: 'row',
            height: 40,
            marginBottom: 5,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginRight: 10,
            marginLeft: 10
          })
        }, data.value), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, data.text.length > 10 ? data.text.slice(0, 10) + "..." : data.text, data.unit != '' ? "(" + unescape(data.unit) + ")" : ''));
      }
    }]);
    return Preview;
  }(_BaseComponent2.default);

  exports.default = Preview;

  Preview.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        backgroundColor: navigation.state.params ? navigation.state.params.backgroundColor : '#ffffff',
        type: _NavigationBar.default.TYPE.LIGHT,
        title: _HomeLocalizableString.default.preview,
        onPressTitle: function onPressTitle(_) {
          return undefined;
        }
      })
    };
  };
},10304,[14305,14314,14320,14323,14371,14377,14386,10007,10074,10297,10033,10037,10719,10307,10232,10235,10238,10187,10184,10196,10241,10211,10310]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 83,
    "height": 16,
    "scales": [2, 3],
    "hash": "72ceb082698cc370f403870a000769f6",
    "name": "app_logo",
    "type": "png"
  });
},10307,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "3c57435cf22fa9b4cad8bae4081a6d6b",
    "name": "download_pic_btn",
    "type": "png"
  });
},10310,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _HomeLocalizableString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _DetailTitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var that;

  var CookbookDetail = function (_BaseComponent) {
    (0, _inherits2.default)(CookbookDetail, _BaseComponent);
    (0, _createClass2.default)(CookbookDetail, [{
      key: "_toEdit",
      value: function _toEdit() {
        this.props.navigation.navigate('MyCookbook', {
          itemData: this.state.itemData,
          editFlag: true,
          isAddCoffee: false
        });
      }
    }]);

    function CookbookDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CookbookDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CookbookDetail).call(this, props));
      that = (0, _assertThisInitialized2.default)(_this);
      _this.state = {
        itemData: _this.props.navigation.state.params.itemData
      };
      return _this;
    }

    (0, _createClass2.default)(CookbookDetail, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;

        this.listenerMenu = _reactNative.DeviceEventEmitter.addListener('refresh_menu', function (message) {
          _this2.props.navigation.goBack();
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var title = this.state.itemData.menuName;
        if (title) this.props.navigation.setParams({
          title: title
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.listenerMenu) {
          this.listenerMenu.remove();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var data = this.state.itemData;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#fff'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.ScrollView, null, this._topView(), this._infoView(), data.timeArray.length > 0 ? this._coffeeTimeView(data.timeArray[0].time, data.timeArray[1].time, data.timeArray[2].time, data.timeArray[3].time) : null, data.timeArray.length > 0 ? data.timeArray.map(function (item, index) {
          return _this3._dataListItemView2(item, index);
        }) : null)), this._bottomView());
      }
    }, {
      key: "_topView",
      value: function _topView() {
        var data = this.state.itemData;
        var classify = data.classify;
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75,
            resizeMode: 'cover'
          },
          source: _$$_REQUIRE(_dependencyMap[13])
        }), data.imageBase64 ? _react.default.createElement(_reactNative.Image, {
          style: {
            width: this.mScreenWidth,
            height: this.mScreenWidth * 0.75,
            resizeMode: 'cover',
            position: 'absolute'
          },
          source: data.imageBase64 == 'coffee' ? _$$_REQUIRE(_dependencyMap[14]) : data.imageBase64
        }) : null), _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: classify != null ? classify.bgColor : '#443e39',
            borderRadius: 7,
            paddingTop: 3,
            paddingBottom: 3,
            paddingLeft: 10,
            paddingRight: 10,
            position: 'absolute',
            top: 20,
            right: 20
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#ffffff'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, classify != null ? unescape(classify.name) : _HomeLocalizableString.default.not_classify)));
      }
    }, {
      key: "_infoView",
      value: function _infoView() {
        var _this4 = this;

        var data = this.state.itemData;
        var date = new Date(parseInt(data.time));
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 40,
            margin: 20
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 22,
            fontWeight: 'bold',
            color: '#000000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, data.menuName), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this._getEvaluateLevelView(parseInt(data.evaluateLevel + 1))), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 5
          })
        }, date.getFullYear() + "." + (date.getMonth() + 1) + "." + date.getDate()), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 12,
            color: '#76726f'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginTop: 10
          })
        }, data.evaluateValue), _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 20
          }
        }, data.dataArray.map(function (item, index) {
          return _this4._dataListItemView(item, index);
        })));
      }
    }, {
      key: "_getEvaluateLevelView",
      value: function _getEvaluateLevelView(level) {
        var array = [];

        for (var i = 0; i < level; i++) {
          array.push(i);
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row'
          }
        }, array.map(function (item, index) {
          return _react.default.createElement(_reactNative.Image, {
            style: {
              width: 25,
              height: 25,
              resizeMode: 'contain'
            },
            key: index,
            source: _$$_REQUIRE(_dependencyMap[15])
          });
        }));
      }
    }, {
      key: "_dataListItemView",
      value: function _dataListItemView(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            width: this.mScreenWidth - 40,
            backgroundColor: '#f5f5f5',
            borderRadius: 8,
            flexDirection: 'row',
            height: 45,
            alignItems: 'center',
            marginBottom: 8
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginRight: 10,
            marginLeft: 10
          })
        }, data.value), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, unescape(data.text).length > 10 ? unescape(data.text).slice(0, 10) + "..." : unescape(data.text), data.unit != '' ? "(" + unescape(data.unit) + ")" : ''), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }));
      }
    }, {
      key: "_dataListItemView2",
      value: function _dataListItemView2(data, index) {
        return _react.default.createElement(_reactNative.View, {
          key: index,
          style: {
            width: this.mScreenWidth - 40,
            backgroundColor: '#f5f5f5',
            marginLeft: 20,
            marginRight: 20,
            borderRadius: 8,
            marginTop: 10,
            flexDirection: 'row',
            height: 60,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }), {
            marginRight: 10,
            marginLeft: 10
          })
        }, data.value), _react.default.createElement(_reactNative.Text, {
          style: (0, _objectSpread2.default)({
            fontSize: 14,
            color: '#000'
          }, _reactNative.Platform.select({
            ios: {},
            android: {
              fontFamily: 'lucida grande'
            }
          }))
        }, unescape(data.text)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }));
      }
    }, {
      key: "_coffeeTimeView",
      value: function _coffeeTimeView(allTime, time1, time2, time3) {
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 40,
            marginLeft: 20,
            marginRight: 20,
            marginTop: -10,
            marginBottom: 10,
            flexDirection: 'row',
            height: 36,
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: time1 / allTime,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            borderTopLeftRadius: 18,
            borderBottomLeftRadius: 18,
            borderTopRightRadius: time2 == 0 ? 18 : 0,
            borderBottomRightRadius: time2 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[16])
        })), time2 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time2 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: time3 == 0 ? 18 : 0,
            borderBottomRightRadius: time3 == 0 ? 18 : 0,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[17])
        })) : null, time3 != 0 ? _react.default.createElement(_reactNative.View, {
          style: {
            flex: time3 / allTime,
            width: this.mScreenWidth - 40,
            backgroundColor: 'rgba(204, 176, 140, 0.3)',
            marginLeft: 5,
            borderTopRightRadius: 18,
            borderBottomRightRadius: 18,
            flexDirection: 'row',
            height: 45,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            alignItems: 'center',
            width: 35,
            height: 35
          },
          source: _$$_REQUIRE(_dependencyMap[18])
        })) : null);
      }
    }, {
      key: "_addDataBtn",
      value: function _addDataBtn() {
        var _this5 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            width: this.mScreenWidth - 40,
            marginLeft: 20,
            marginRight: 20,
            flexDirection: "row",
            marginTop: 15
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this5.setUnitModal1Visible(true);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[19])
        })));
      }
    }, {
      key: "_bottomView",
      value: function _bottomView() {
        var _this6 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            backgroundColor: '#fff',
            paddingBottom: 20,
            paddingTop: 10,
            width: this.mScreenWidth,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 30
          },
          onPress: function onPress() {
            _this6.props.navigation.goBack();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[20])
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this6.props.navigation.navigate('Preview', {
              itemData: _this6.state.itemData
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[21])
        })));
      }
    }]);
    return CookbookDetail;
  }(_BaseComponent2.default);

  exports.default = CookbookDetail;

  CookbookDetail.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_DetailTitleBar.default, {
        style: {
          backgroundColor: '#fff'
        },
        title: navigation.state.params ? navigation.state.params.title ? navigation.state.params.title : _HomeLocalizableString.default.my_cookbook : _HomeLocalizableString.default.my_cookbook,
        onPressEdit: function onPressEdit() {
          that._toEdit();
        }
      })
    };
  };
},10313,[14305,14314,14320,14371,14377,14374,14323,14386,10007,10297,10033,10037,10316,10187,10184,10196,10232,10235,10238,10205,10211,10322]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _ReportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var titleHeight = 44;
  var imgHeight = 22;

  var DetailTitleBar = function (_Component) {
    (0, _inherits2.default)(DetailTitleBar, _Component);

    function DetailTitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DetailTitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DetailTitleBar).call(this, props));
      (0, _ReportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(DetailTitleBar, [{
      key: "render",
      value: function render() {
        _reactNative.StatusBar.setBarStyle('dark-content');

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [styles.titleBarContainer, this.props.style]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            height: titleHeight,
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center',
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.titleText],
          onPress: this.props.onPressTitle
        }, this.props.title)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            height: titleHeight
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: {
            marginRight: 20
          },
          activeOpacity: 1,
          onPress: this.props.onPressEdit
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            resizeMode: 'contain'
          },
          source: _$$_REQUIRE(_dependencyMap[15])
        }))));
      }
    }]);
    return DetailTitleBar;
  }(_react.Component);

  exports.default = DetailTitleBar;
  DetailTitleBar.propTypes = {
    style: _propTypes.default.any,
    onPressLeft: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    titleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: (_reactNative.StatusBar.currentHeight || 0) + titleHeight
    },
    textContainer: {
      height: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    titleText: {
      color: '#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    subtitleText: {
      color: '#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    leftRightText: {
      flexDirection: 'column',
      backgroundColor: '#0000',
      color: '#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: "center",
      textAlign: "center"
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginLeft: 14,
      marginTop: 8,
      marginBottom: 8,
      marginRight: 14
    },
    dot: {
      position: 'absolute',
      width: 10,
      height: 10,
      resizeMode: 'contain',
      right: 14,
      top: (_reactNative.StatusBar.currentHeight || 0) + 8
    }
  });
},10316,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10918,10318,11025,10977,10200,10319]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bad2c2a1b3454cabe2e38a3558cd9c3e",
    "name": "edit_ic",
    "type": "png"
  });
},10319,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/hoto.k_scale.qwcfc/resources",
    "width": 60,
    "height": 60,
    "scales": [2, 3],
    "hash": "30d82f5e25a28d0503810d82440fa6fe",
    "name": "download_btn",
    "type": "png"
  });
},10322,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2;

        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var checkedBigCircleStyle = {
          borderColorChecked: '#32BAC0',
          backgroundColorChecked: '#32BAC0',
          borderColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor,
          backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor
        };

        if (this.props.checkedBigCircleStyle) {
          checkedBigCircleStyle = this.props.checkedBigCircleStyle;
        }

        var _checkedBigCircleStyl = checkedBigCircleStyle,
            borderColorChecked = _checkedBigCircleStyl.borderColorChecked,
            backgroundColorChecked = _checkedBigCircleStyl.backgroundColorChecked,
            borderColor = _checkedBigCircleStyl.borderColor,
            backgroundColor = _checkedBigCircleStyl.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    (0, _extends3.default)(total, (0, _defineProperty2.default)({}, role, role));
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;
  var elementWithoutText = ['image', 'imagebutton'];

  function getAccessibilityConfig(accessibilityConfig) {
    var accessible = accessibilityConfig.accessible,
        accessibilityRole = accessibilityConfig.accessibilityRole,
        accessibilityLabel = accessibilityConfig.accessibilityLabel,
        accessibilityHint = accessibilityConfig.accessibilityHint,
        accessibilityState = accessibilityConfig.accessibilityState,
        accessibilityValue = accessibilityConfig.accessibilityValue;
    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if (elementWithoutText.includes(accessibility.accessibilityRole)) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,14317,14344,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome',
    media: {
      screenType: 'phone'
    }
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native',
          media: (0, _objectSpread2.default)({
            screenType: 'phone'
          }, this.props.media)
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.9)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.10)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)'),
    colorGearBackground: new _DynamicColor.default('#EDEEEF', 'rgba(255,255,255,0.20)'),
    iconViewPress: new _DynamicColor.default('#B0B6B8', '#52595B'),
    iconViewNor: new _DynamicColor.default('#F7F7F7', 'rgba(255,255,255,0.20)'),
    listUnderlayColor: new _DynamicColor.default('#ECECEC', 'rgba(255,255,255,0.20)'),
    barChartItem: new _DynamicColor.default('#FFE4BD', 'rgba(230,142,16,0.3)'),
    barChartItemSelected: new _DynamicColor.default('#FFA626', '#E68E10')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var _this3 = this;

        var value = !this.state.value;
        this.setState({
          value: value
        }, function () {
          _this3.animated();

          if (typeof _this3.props.onValueChange === 'function') {
            _this3.props.onValueChange(value);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3])
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[4]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[5]),
          press: _$$_REQUIRE(_dependencyMap[6]),
          disable: _$$_REQUIRE(_dependencyMap[7])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[8]),
          press: _$$_REQUIRE(_dependencyMap[9]),
          disable: _$$_REQUIRE(_dependencyMap[10])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[11]),
          press: _$$_REQUIRE(_dependencyMap[12]),
          disable: _$$_REQUIRE(_dependencyMap[13])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[14]),
          press: _$$_REQUIRE(_dependencyMap[15]),
          disable: _$$_REQUIRE(_dependencyMap[16])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[17]),
          press: _$$_REQUIRE(_dependencyMap[18]),
          disable: _$$_REQUIRE(_dependencyMap[19])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[20]),
          press: _$$_REQUIRE(_dependencyMap[21]),
          disable: _$$_REQUIRE(_dependencyMap[22])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[23]),
          press: _$$_REQUIRE(_dependencyMap[24]),
          disable: _$$_REQUIRE(_dependencyMap[25])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[26]),
          press: _$$_REQUIRE(_dependencyMap[27]),
          disable: _$$_REQUIRE(_dependencyMap[28])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[29]),
          press: _$$_REQUIRE(_dependencyMap[30]),
          disable: _$$_REQUIRE(_dependencyMap[31])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[32]),
          press: _$$_REQUIRE(_dependencyMap[33]),
          disable: _$$_REQUIRE(_dependencyMap[34])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[35]),
          press: _$$_REQUIRE(_dependencyMap[36]),
          disable: _$$_REQUIRE(_dependencyMap[37])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[38]),
          press: _$$_REQUIRE(_dependencyMap[39]),
          disable: _$$_REQUIRE(_dependencyMap[40])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[41]),
          press: _$$_REQUIRE(_dependencyMap[42]),
          disable: _$$_REQUIRE(_dependencyMap[43])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[44]),
          press: _$$_REQUIRE(_dependencyMap[45]),
          disable: _$$_REQUIRE(_dependencyMap[46])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[47]),
          press: _$$_REQUIRE(_dependencyMap[48]),
          disable: _$$_REQUIRE(_dependencyMap[49])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[50]),
          press: _$$_REQUIRE(_dependencyMap[51]),
          disable: _$$_REQUIRE(_dependencyMap[52])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[53]),
          press: _$$_REQUIRE(_dependencyMap[54]),
          disable: _$$_REQUIRE(_dependencyMap[55])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[56]),
          press: _$$_REQUIRE(_dependencyMap[57]),
          disable: _$$_REQUIRE(_dependencyMap[58])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[59]),
          press: _$$_REQUIRE(_dependencyMap[60]),
          disable: _$$_REQUIRE(_dependencyMap[61])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[62]),
          press: _$$_REQUIRE(_dependencyMap[63]),
          disable: _$$_REQUIRE(_dependencyMap[64])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[65]),
          press: _$$_REQUIRE(_dependencyMap[66]),
          disable: _$$_REQUIRE(_dependencyMap[67])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[68]),
          press: _$$_REQUIRE(_dependencyMap[69]),
          disable: _$$_REQUIRE(_dependencyMap[70])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[71]),
          press: _$$_REQUIRE(_dependencyMap[72]),
          disable: _$$_REQUIRE(_dependencyMap[73])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[74]),
          press: _$$_REQUIRE(_dependencyMap[75]),
          disable: _$$_REQUIRE(_dependencyMap[76])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[77]),
          press: _$$_REQUIRE(_dependencyMap[78]),
          disable: _$$_REQUIRE(_dependencyMap[79])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[80]),
          press: _$$_REQUIRE(_dependencyMap[81]),
          disable: _$$_REQUIRE(_dependencyMap[82])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[83]),
          press: _$$_REQUIRE(_dependencyMap[84]),
          disable: _$$_REQUIRE(_dependencyMap[85])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[86]),
          press: _$$_REQUIRE(_dependencyMap[87]),
          disable: _$$_REQUIRE(_dependencyMap[88])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[89]),
          press: _$$_REQUIRE(_dependencyMap[90]),
          disable: _$$_REQUIRE(_dependencyMap[91])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[92]),
          press: _$$_REQUIRE(_dependencyMap[93]),
          disable: _$$_REQUIRE(_dependencyMap[94])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[95]),
          press: _$$_REQUIRE(_dependencyMap[96]),
          disable: _$$_REQUIRE(_dependencyMap[97])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[98]),
          press: _$$_REQUIRE(_dependencyMap[99]),
          disable: _$$_REQUIRE(_dependencyMap[100])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[101]),
          press: _$$_REQUIRE(_dependencyMap[102]),
          disable: _$$_REQUIRE(_dependencyMap[103])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[104]),
          press: _$$_REQUIRE(_dependencyMap[105]),
          disable: _$$_REQUIRE(_dependencyMap[106])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[107]),
          press: _$$_REQUIRE(_dependencyMap[108]),
          disable: _$$_REQUIRE(_dependencyMap[109])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[110]),
          press: _$$_REQUIRE(_dependencyMap[111]),
          disable: _$$_REQUIRE(_dependencyMap[112])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[113]),
          press: _$$_REQUIRE(_dependencyMap[114]),
          disable: _$$_REQUIRE(_dependencyMap[115])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[116]),
          press: _$$_REQUIRE(_dependencyMap[117]),
          disable: _$$_REQUIRE(_dependencyMap[118])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[119]),
          press: _$$_REQUIRE(_dependencyMap[120]),
          disable: _$$_REQUIRE(_dependencyMap[121])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[122]),
          press: _$$_REQUIRE(_dependencyMap[123]),
          disable: _$$_REQUIRE(_dependencyMap[124])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[125])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[126])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[127]),
        press: _$$_REQUIRE(_dependencyMap[128])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[129]),
        press: _$$_REQUIRE(_dependencyMap[130])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,23260,23263,23266,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23269,23272,23275,23278,23281,23284,23206,23209,23287,23290,23293,23296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.05)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      padModal: {
        borderRadius: 20,
        bottom: null,
        width: MODAL_WIDTH * 0.75,
        position: 'absolute',
        paddingBottom: 30,
        backgroundColor: '#fff',
        marginHorizontal: MODAL_MARGIN
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#F5F5F5', '#333333');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _font = _$$_REQUIRE(_dependencyMap[18]);

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation',
    SAVE: 'save'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('rgba(0,0,0,0.60)', 'rgba(255,255,255,0.50)');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NavigationBar');
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel,
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }, this.props.useOrientation ? {} : {
            width: width
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    useOrientation: _propTypes.default.bool,
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'sans-serif',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    useOrientation: false,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: (0, _objectSpread2.default)({
      fontSize: 18,
      lineHeight: 24,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontPrimary),
    titleView: (0, _objectSpread2.default)({
      fontSize: 16,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 18,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontSecondary),
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22435,22456,22795,22426,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });
  Object.defineProperty(exports, "GearCard", {
    enumerable: true,
    get: function get() {
      return _GearCard.default;
    }
  });
  Object.defineProperty(exports, "ListCard", {
    enumerable: true,
    get: function get() {
      return _ListCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _GearCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
},22861,[14305,14308,22864,22870,22873,22876,23299,23302]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;
        var underlayColor = theme == null ? undefined : theme.listUnderlayColor;
        if (this.props.underlayColor) underlayColor = this.props.underlayColor;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * (this.length - 1);

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,0.9)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,0.3)', 'rgba(255,255,255,0.3)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : '',
            opacity: opacityValue
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          focusable: false,
          style: [styles.text, {
            color: leftTextColorValue
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight,
            opacity: opacityValue
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: rightTextColorValue
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextOffColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextOffColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextOffColor: 'rgba(127, 127, 127, 0.3)',
    leftTextStyle: {},
    rightTextColor: '#999',
    rightTextOffColor: 'rgba(127, 127, 127, 0.3)',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _string = _$$_REQUIRE(_dependencyMap[16]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _utils = _$$_REQUIRE(_dependencyMap[18]);

  var _locale = _$$_REQUIRE(_dependencyMap[19]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[20]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[21]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[22]);

  var _popButton = _$$_REQUIRE(_dependencyMap[23]);

  var _font = _$$_REQUIRE(_dependencyMap[24]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _context$media, _context$media2;

      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      _this.responsiveDialogStyle = ((_context$media = context.media) == null ? undefined : _context$media.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_context$media2 = context.media) == null ? undefined : _context$media2.screenType) === 'tablet' ? _Styles.default.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme,
            media = _this$context.media;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = (media == null ? undefined : media.screenType) === 'tablet' ? _Styles.default.dialog.padModal.width : this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: _this2.props.accessibilityLabel,
            accessibilityHint: _this2.props.accessibilityHint,
            accessibilityValue: {
              min: Array.isArray(_this2.min) ? _this2.min[index] : 0,
              max: Array.isArray(_this2.max) ? _this2.max[index] : 0,
              now: _this2.state.currentArray[index]
            }
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.background, this.responsiveDialogStyle]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {},
    accessible: true
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: (0, _objectSpread2.default)({
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5
    }, _font.FontPrimary),
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14314,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22435,22780,22927,22912,22930,22933,22426,22420,22423,23212,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组',
    selectPlugin: '请选择喜欢的插件样式使用',
    traditionalPlugin: '传统插件',
    standardPlugin: '标准插件',
    recommended: '（推荐使用）',
    changeSteps: '如需更改插件样式，可按照如下步骤操作',
    stepOne: '第一步：点击插件右上角进入更多设置',
    stepTwo: '第二步：在通用设置里找到“标准插件”，\n操作开关即可切换标准插件/传统插件',
    starting: '开始体验',
    switching: '切换中…',
    switchedSucess: '切换成功',
    switchedfail: '切换失败',
    guideFeedback: '意见反馈',
    next: '下一步',
    percentage: '{0}%'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '%{0}'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[12]);

  var _locale = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PopButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this$context$media, _this$context$media2, _this$context$media3;

      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      _this.responsiveContentStyle = ((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? {
        width: width * 0.75
      } : {};
      _this.responsiveDialogStyle = ((_this$context$media2 = _this.context.media) == null ? undefined : _this$context$media2.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_this$context$media3 = _this.context.media) == null ? undefined : _this$context$media3.screenType) === 'tablet' ? _resources.Styles.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevState.visible === false && this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }

        if (prevState.visible === true && this.state.visible === false) {
          var onModalHide = this.props.onModalHide;

          if (typeof onModalHide === 'function') {
            onModalHide();
          }
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            color: theme.colorBlack,
            marginTop: height ? 7 : 10
          }, marginBottom, _font.FontPrimary, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: [styles.content, this.responsiveContentStyle]
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [_resources.Styles.dialog.background, {
            backgroundColor: this.props.hasShade ? theme.colorOverLayerBlack : 'transparent'
          }, this.responsiveDialogStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: this.props.layerDismissAccessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    hasShade: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10297,10033,22453,22906,22420,22423,22933,22426,22891,23215,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [(0, _objectSpread2.default)({
            textAlign: 'left',
            fontSize: 16,
            lineHeight: 22,
            marginLeft: 30
          }, _font.FontPrimary), this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14314,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, _font.FontPrimary, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, _font.FontSecondary, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme,
            _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.listUnderlayColor,
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];
            var selectedIndex;

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];

              if (item) {
                selectedIndexArray.push(i);
                selectedIndex = i;
              }
            }

            if (_this.props.type === TYPE.SINGLE) _this.props.onSelect && _this.props.onSelect([selectedIndex]);
            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      var selectedArray = Array.from({
        length: props.options.length
      }, function (v, i) {
        return props.selectedIndexArray.includes(i);
      });
      _this.state = {
        visible: props.visible,
        selectedArray: selectedArray
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();

            this.props.onSelect && this.props.onSelect([index]);
          }
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          style: this.props.modalStyle,
          useNewTheme: true,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          },
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    canDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    },
    canDismiss: true
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: props.noInputDisButton
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: this.props.noInputDisButton
          });
        } else if (!prevProps.visible && this.props.visible) {
          this.textInputArray = [];

          for (var i = 0; i < ((_this$props$inputs = this.props.inputs) == null ? undefined : _this$props$inputs.length) || 0; i++) {
            var _this$props$inputs;

            var input = this.props.inputs[i];

            if (input !== undefined) {
              this.textInputArray.push(input.defaultValue || '');
            }
          }

          if (this.props.noInputDisButton) {
            var result = this.isInputArrayEmpty(this.textInputArray);
            if (result !== this.state.disButton) this.setState({
              disButton: result
            });
          }
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "isInputArrayEmpty",
      value: function isInputArrayEmpty(arr) {
        for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _element = _ref;
          if (_element === '' || typeof _element === undefined || _element === null) return true;
        }

        return false;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;

        if (this.props.noInputDisButton) {
          var result = this.isInputArrayEmpty(this.textInputArray);
          if (result !== this.state.disButton) this.setState({
            disButton: result
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        var _this$context$theme;

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWarn
          }],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          borderColor: input.borderColor,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$context$theme2;

          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, {
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
            }, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var buttons = this.buttons;

        if (this.props.noInputDisButton && buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          canDismiss: this.props.canDismiss,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: this.props.noInputDisButton
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string,
    noInputDisButton: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误',
    noInputDisButton: false,
    canDismiss: true
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    },
    inputWarnText: {
      alignSelf: 'flex-start',
      marginHorizontal: 19,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this,
            _this$context$theme,
            _this$context$theme2;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, {
                color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
              }, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, {
                color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
              }, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this,
            _this$context$theme3;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          style: this.props.modalStyle,
          onModalHide: this.props.onModalHide,
          canDismiss: this.props.canDismiss,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    canDismiss: true,
    extra: {}
  };
  MessageDialog.TYPE = TYPE;
  MessageDialog.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontSecondary),
    subText: (0, _objectSpread2.default)({
      fontSize: 12,
      lineHeight: 16
    }, _font.FontSecondary),
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this$context$theme;

        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var _this3$context$theme3, _this3$context$theme4;

          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            var _this3$context$theme2;

            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, {
                color: (_this3$context$theme2 = _this3.context.theme) == null ? undefined : _this3$context$theme2.colorBlack1
              }, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, {
              backgroundColor: (_this3$context$theme3 = _this3.context.theme) == null ? undefined : _this3$context$theme3.colorBtnGrayNor,
              borderColor: (_this3$context$theme4 = _this3.context.theme) == null ? undefined : _this3$context$theme4.colorBtnGrayNor
            }, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this,
            _this$context$theme2;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
          }, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          style: this.props.modalStyle,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          canDismiss: this.props.canDismiss,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    },
    canDismiss: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      borderRadius: 10,
      borderWidth: 2,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _index = _$$_REQUIRE(_dependencyMap[17]);

  var _string = _$$_REQUIRE(_dependencyMap[18]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.responsiveProgressWidth = (((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 54;
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme,
            _this$context$theme2,
            _this$context$theme3;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 350);
        }

        var progressText = (0, _string.formatString)(_index.Locale.of(this.context.language).percentage, Math.round(this.props.progress * 100));
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        var unfilledColor = (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor;

        if (this.props.unfilledColor) {
          unfilledColor = this.props.unfilledColor;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: unfilledColor,
          width: this.responsiveProgressWidth,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423,22933,22927]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      _this.iconMargin = ~~(((((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 80 - 192) / 3);
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this,
            _this$context$theme;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: _this3.iconMargin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    canDismiss: true,
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[18]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;

        if (_reactNative.Platform.OS === 'android') {
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: this.props.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? (0, _objectSpread2.default)({}, _font.FontPrimary) : (0, _objectSpread2.default)({}, _font.FontPrimary), {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            flex: 1
          }, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary), this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, _font.FontSecondary), this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    underlayColor: _resources.Styles.common.underlayColor
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23041,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, _font.FontPrimary, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, _font.FontSecondary, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          this.setState({
            value: value,
            valueStr: this.format(value)
          });
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontSecondary = exports.FontPrimary = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontPrimary = {
    fontFamily: 'sans-serif-medium',
    fontWeight: _reactNative.Platform.OS === 'ios' ? '500' : 'normal'
  };
  exports.FontPrimary = FontPrimary;
  var FontSecondary = {
    fontFamily: 'sans-serif',
    fontWeight: 'normal'
  };
  exports.FontSecondary = FontSecondary;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _font = _$$_REQUIRE(_dependencyMap[21]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress ? true : this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, _font.FontPrimary, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.imageContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel || this.props.message,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, _font.FontPrimary, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23041,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$slice$split = color.slice(1).split(''),
        _color$slice$split2 = (0, _slicedToArray2.default)(_color$slice$split, 6),
        r1 = _color$slice$split2[0],
        r2 = _color$slice$split2[1],
        g1 = _color$slice$split2[2],
        g2 = _color$slice$split2[3],
        b1 = _color$slice$split2[4],
        b2 = _color$slice$split2[5];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Icons = _$$_REQUIRE(_dependencyMap[11]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _switch = _$$_REQUIRE(_dependencyMap[13]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _font = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            onPress = _this$props2.onPress;

        if (disabled || !onSwitch && !onPress || actionName !== 'activate') {
          return;
        }

        if (onSwitch) {
          onSwitch(!switchOn);
          return;
        }

        onPress();
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            themeColor = _this$props3.themeColor,
            themeBackgroundColor = _this$props3.themeBackgroundColor,
            underlayColor = _this$props3.underlayColor,
            hasShadow = _this$props3.hasShadow,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconStyle = _this$props3.iconStyle,
            icon = _this$props3.icon,
            iconText = _this$props3.iconText,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            onSwitch = _this$props3.onSwitch,
            switchOn = _this$props3.switchOn,
            disabled = _this$props3.disabled,
            onPress = _this$props3.onPress,
            rightText = _this$props3.rightText,
            rightArrow = _this$props3.rightArrow,
            offColor = _this$props3.offColor,
            iconDisabled = _this$props3.iconDisabled,
            invisible = _this$props3.invisible;
        var opacity = disabled ? 0.3 : 1;
        var finalIcon = icon;

        if (disabled && iconDisabled) {
          finalIcon = iconDisabled;
        }

        if (!finalIcon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, {
          invisible: invisible
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: onSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: onSwitch && !!switchOn
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_react.Fragment, null, finalIcon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: (!switchOn && offColor ? offColor : themeColor) || _Colors.default.green,
            opacity: opacity
          }]
        }, finalIcon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: finalIcon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, (0, _extends2.default)({
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))) : rightText || rightArrow ? _react.default.createElement(_react.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.rightArrow, {
            opacity: opacity
          }],
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    }, _font.FontSecondary),
    titleContainer: {
      flex: 1
    },
    title: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999',
      marginTop: (0, _sizes.adjustSize)(12)
    }, _font.FontSecondary),
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    }, _font.FontSecondary),
    rightArrow: {
      height: (0, _sizes.adjustSize)(72),
      width: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    }
  });
},23077,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23041,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: "" + index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal,
            invisible = _this$props2.invisible;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible',
            opacity: invisible ? 0 : 1
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.propTypes = {
    containerStyle: _propTypes.default.any,
    separatorStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    invisible: _propTypes.default.bool
  };
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false,
    invisible: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(33),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _styles = _$$_REQUIRE(_dependencyMap[15]);

  var Size72 = (0, _sizes.adjustSize)(72);
  var Size120 = (0, _sizes.adjustSize)(120);
  var Size168 = (0, _sizes.adjustSize)(168);
  var Size150 = (0, _sizes.adjustSize)(150);
  var Size138 = (0, _sizes.adjustSize)(138);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "renderTouchableList",
      value: function renderTouchableList() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor,
            titleIsTouchable = _this$props2.titleIsTouchable;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;

        if (titleIsTouchable) {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: [horizontal ? _styles.Styles.containerHorizontal : null, _styles.Styles.listContainer],
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null])
          }, icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return this.renderTouchableList();
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.propTypes = {
    sizeLevel: _propTypes.default.oneOf([0, 1, 2, 3]),
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    disabled: _propTypes.default.bool,
    showHighlight: _propTypes.default.bool,
    selected: _propTypes.default.bool,
    horizontal: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    title: _propTypes.default.string,
    titleIsTouchable: _propTypes.default.bool,
    icon: _propTypes.default.any,
    iconSelected: _propTypes.default.any,
    iconText: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '#F7F7F7',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: _fns.NOOP,
    title: '',
    titleIsTouchable: false,
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23137,22420,23098]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#999999'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#999999'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    },
    listContainer: {
      alignItems: 'center'
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLabel: this.props.accessibilityLabel || progress
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel || speedLevel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Source0 = _$$_REQUIRE(_dependencyMap[15]);

  var Source1 = _$$_REQUIRE(_dependencyMap[16]);

  var Source2 = _$$_REQUIRE(_dependencyMap[17]);

  var Source3 = _$$_REQUIRE(_dependencyMap[18]);

  var Source4 = _$$_REQUIRE(_dependencyMap[19]);

  var Source5 = _$$_REQUIRE(_dependencyMap[20]);

  var Source6 = _$$_REQUIRE(_dependencyMap[21]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            showLargeTitle = _this$props.showLargeTitle,
            subtitle = _this$props.subtitle,
            showSubtitle = _this$props.showSubtitle,
            unit = _this$props.unit,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.container1
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' '), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unitTransparent
        }, "" + unit) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.titlesContainer
        }, showLargeTitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.titleLarge
        }, title) : null, showLargeTitle ? null : _react.default.createElement(_reactNative.Text, {
          style: Styles.titleSmall
        }, title), showSubtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unit
        }, "" + unit) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' ')));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    showLargeTitle: _propTypes.default.bool,
    subtitle: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    unit: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0),
        isLoading: true
      };

      _this.onLayout = function () {
        _this.setState({
          isLoading: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.loop(_reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000),
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.timer = setTimeout(function () {
          _this2.startAnimation();
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var translateX = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        var randomTranslateY = getRandomBetween(_sizes.window.height * 0.8, _sizes.window.height);
        var translateY = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [randomTranslateY, 0]
        });

        if (this.state.isLoading) {
          return _react.default.createElement(_reactNative.View, {
            onLayout: this.onLayout,
            style: [StylesDot.container, {
              width: width,
              height: height
            }]
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            transform: [{
              translateX: translateX
            }, {
              translateY: translateY
            }]
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;
        var gradientProps = {
          useAngel: this.props.useAngel,
          angel: this.props.angel,
          angelCenter: this.props.angelCenter,
          locations: this.props.locations,
          colors: this.props.colors
        };

        if (!on) {
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps));
        } else {
          var dots = this.getDots();
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps), dots);
        }
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    useAngel: _propTypes.default.bool,
    angel: _propTypes.default.number,
    angelCenter: _propTypes.default.object,
    locations: _propTypes.default.array,
    colors: _propTypes.default.array
  };
  Background.defaultProps = {
    on: false,
    themeColor: null,
    useAngel: true,
    angel: 180,
    angelCenter: {
      x: 0.5,
      y: 0.5
    },
    locations: [0, 1],
    colors: ["#FFAC6A", "rgba(247,247,247,0.25)"]
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195),
      flexDirection: 'column',
      justifyContent: 'center'
    },
    container1: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    titleLarge: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(240),
      textAlign: 'center',
      color: '#000000'
    },
    titlesContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    titlesContainerHeightHolder: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(282),
      textAlign: 'center',
      color: 'transparent'
    },
    titleSmall: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(120),
      textAlign: 'center',
      color: '#000000'
    },
    unitTransparent: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: 'transparent'
    },
    unit: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: '#000000'
    },
    subtitlePlaceHolder: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: 'transparent'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: "100%",
      position: 'absolute',
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,14299,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _colors = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled,
            maxNumberInRow = _this$props2.maxNumberInRow,
            hideTitleLeastNumber = _this$props2.hideTitleLeastNumber;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        var isHorizontal = itemCount === 2 ? _this.props.isHorizontal : false;
        var hasSeparator = itemCount === 2;
        var newArray = [];
        var index = 0;

        while (index < items.length) {
          newArray.push(items.slice(index, index += maxNumberInRow));
        }

        return newArray.map(function (array, index1) {
          return _react.default.createElement(_reactNative.View, {
            key: index1,
            style: [Styles.selectors, itemCount === 2 && !isHorizontal ? {
              justifyContent: 'space-evenly'
            } : {}]
          }, array.map(function (item, index2) {
            var realIndex = index2 + maxNumberInRow * index1;
            var selected = selectedIndexs.indexOf(realIndex) !== -1;
            var numInOneRow = itemCount > maxNumberInRow ? maxNumberInRow : itemCount;
            var hideTitle = items.findIndex(function (item) {
              return item;
            }) === -1 || numInOneRow >= 5 && _this.context.language !== 'zh' || itemCount >= hideTitleLeastNumber;
            return _react.default.createElement(_react.Fragment, {
              key: index2 + maxNumberInRow * index1
            }, hasSeparator && realIndex > 0 ? _react.default.createElement(_reactNative.View, {
              style: Styles.separator
            }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              horizontal: isHorizontal,
              themeColor: themeColor,
              disabled: disabled || switchDisabled,
              selected: selected,
              title: hideTitle ? '' : item.title,
              icon: item.icon,
              iconSelected: item.iconSelected,
              iconText: item.title || '',
              onPress: function onPress() {
                _this.select(realIndex);
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: _this.props.accessible,
              accessibilityLabel: item.accessibilityLabel,
              accessibilityHint: item.accessibilityHint
            }))));
          }), itemCount > maxNumberInRow && itemCount % maxNumberInRow !== 0 && index1 === parseInt(itemCount / maxNumberInRow) ? Array.apply(null, Array(maxNumberInRow - itemCount % maxNumberInRow)).map(function (item, index) {
            return _react.default.createElement(_reactNative.View, {
              style: {
                opacity: 0
              },
              key: index
            }, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              disabled: true
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            }))));
          }) : null);
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : 2;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            title = _this$props4.title,
            subtitle = _this$props4.subtitle,
            items = _this$props4.items,
            hasShadow = _this$props4.hasShadow,
            showSwitch = _this$props4.showSwitch,
            disabled = _this$props4.disabled,
            switchOn = _this$props4.switchOn,
            themeColor = _this$props4.themeColor,
            onSwitch = _this$props4.onSwitch,
            maxNumberInRow = _this$props4.maxNumberInRow,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? alwaysShowSelectors ? _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors()) : null : _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    maxNumberInRow: _propTypes.default.number,
    hideTitleLeastNumber: _propTypes.default.number,
    isHorizontal: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true,
    maxNumberInRow: 4,
    isHorizontal: true,
    hideTitleLeastNumber: 1000
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)',
      flex: 1
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14344,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fonts = _$$_REQUIRE(_dependencyMap[16]);

  var _colors = _$$_REQUIRE(_dependencyMap[17]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[18]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "showSelector",
      value: function showSelector() {
        var _this$props4 = this.props,
            showSwitch = _this$props4.showSwitch,
            switchOn = _this$props4.switchOn,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (showSwitch && !switchOn) {
          return !!alwaysShowSelectors;
        } else {
          return true;
        }
      }
    }, {
      key: "minimumTrackTintColor",
      value: function minimumTrackTintColor() {
        var _this$props5 = this.props,
            showSwitch = _this$props5.showSwitch,
            switchOn = _this$props5.switchOn,
            disabled = _this$props5.disabled,
            themeColor = _this$props5.themeColor,
            offColor = _this$props5.offColor;

        if (showSwitch && !switchOn) {
          return (offColor ? offColor : themeColor) || _colors.ColorGreen;
        } else {
          return (disabled && offColor ? offColor : themeColor) || _colors.ColorGreen;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            options = _this$props6.options,
            disabled = _this$props6.disabled,
            switchDisabled = _this$props6.switchDisabled,
            themeColor = _this$props6.themeColor,
            offColor = _this$props6.offColor,
            showSwitch = _this$props6.showSwitch,
            switchOn = _this$props6.switchOn,
            onSwitch = _this$props6.onSwitch,
            initValue = _this$props6.initValue,
            title = _this$props6.title,
            subtitle = _this$props6.subtitle,
            hasShadow = _this$props6.hasShadow,
            min = _this$props6.min,
            max = _this$props6.max,
            step = _this$props6.step,
            contentType = _this$props6.contentType,
            showEndText = _this$props6.showEndText,
            alwaysShowSelectors = _this$props6.alwaysShowSelectors;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, this.showSelector() ? _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: this.minimumTrackTintColor(),
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.sliderAccessibilityLabel,
          accessibilityHint: this.props.sliderAccessibilityHint
        })))) : null));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    sliderAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    sliderAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '#EDEEEF',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel || this.props.position + "%",
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.titleAccessibilityLabel || title,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.textAccessibilityLabel || text,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string,
      textAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      titleAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            titleIsTouchable: _this.props.titleIsTouchable,
            selected: _this.props.activeIndex === index,
            showHighlight: _this.props.activeIndex === -1,
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    activeIndex: _propTypes.default.number,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    titleIsTouchable: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    activeIndex: -1,
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    titleIsTouchable: false,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var _font = _$$_REQUIRE(_dependencyMap[8]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < (str == null ? undefined : str.length); i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 306,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 147,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 80,
      fontSize: 13,
      textAlignVertical: 'center'
    }, _font.FontPrimary)
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14314,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _font = _$$_REQUIRE(_dependencyMap[10]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      fontSize: 13,
      lineHeight: 18
    }, _font.FontPrimary)
  });
},23218,[14308,14305,14314,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: props.type === TYPE.SECURE,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var greenBorder = this.props.borderColor ? this.props.borderColor : String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor);
        var borderColor = isFocused && this._notNull(inputValue) ? greenBorder : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: (0, _objectSpread2.default)({
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16
          }, _font.FontPrimary),
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f13fb08b174c97de0f063b5406edcd19",
    "name": "save_n_dark",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a997ade362625254db11517feb4b57cd",
    "name": "save_p_dark",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7db694f5552517986af48ade14af5dee",
    "name": "save_d_dark",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5ec1f8035bdf49848568663eab32f910",
    "name": "save_n_light",
    "type": "png"
  });
},23278,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dc06f34ea6451e550d102bfb79af7f49",
    "name": "save_p_light",
    "type": "png"
  });
},23281,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9e9264292f6e90aa0a56465fe7227563",
    "name": "save_d_light",
    "type": "png"
  });
},23284,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23287,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23290,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23293,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23296,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 12;
  var cardWidth = width - 24;
  var radiusValue = 12;
  var cardPadding = 20;
  var tabHeight = 46;
  var dotSize = 39;
  var CARD_EXCESS_PADDING = 6;
  var MAX_TAB_SHOW_COUNT = 5;
  var CARD_TYPE = {
    TAB: 'tab',
    SLIDER: 'slider',
    DOT: 'dot'
  };
  Object.freeze(CARD_TYPE);

  var GearCard = function (_Component) {
    (0, _inherits2.default)(GearCard, _Component);

    function GearCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GearCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GearCard).call(this, props));

      _this.onPressButton = function (index) {
        var _this$props = _this.props,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange;

        _this.setState({
          gearValue: index
        }, function () {
          _this.AnimatedMoveGreenTab(index);

          if (onPress) {
            onPress(index);
          }

          if (typeof onValueChange === 'function') {
            onValueChange(index);
          }
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabledSwitch = _this$props2.disabledSwitch,
            switchValue = _this$props2.switchValue;

        if (disabledSwitch) {
          return;
        }

        var gearValue = _this.state.gearValue;
        var toValue = gearValue;

        if (actionName === 'activate' && _this.props.onSwitchValueChange) {
          _this.props.onSwitchValueChange(!switchValue);

          return;
        }

        if (actionName === 'increment') {
          toValue++;
        }

        if (actionName === 'decrement') {
          toValue--;
        }

        _this._onSliderValueChange(toValue, function () {
          _this.props.onSlidingComplete(toValue);
        });
      };

      if (!props.options || !(props.options instanceof Array) || props.options.length < 2) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      if (props.maxDotShowCount > 9) {
        throw new Error('maxDotShowCount cannot exceed 9');
      }

      _this.getCorrectLayout(props);

      _this.state = {
        gearValue: _this.props.sliderProps.value
      };
      _this.currentIndex = new _reactNative.Animated.Value(props.currentIndex);
      return _this;
    }

    (0, _createClass2.default)(GearCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.AnimatedMoveGreenTab(this.props.currentIndex);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.options !== this.props.options) {
          this.getCorrectLayout(nextProps);
        }
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout(props) {
        var cardType = props.cardType,
            maxDotShowCount = props.maxDotShowCount;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(props.options.length, maxShowCount);
        var cardLength = cardWidth - 40 - CARD_EXCESS_PADDING;

        if (props.cardType === CARD_TYPE.DOT) {
          cardLength += CARD_EXCESS_PADDING;
          this.buttonWidth = Math.floor(cardLength / length) > dotSize ? dotSize : Math.floor(cardLength / length);
          this.dotSize = this.buttonWidth === dotSize ? dotSize : this.buttonWidth;
          this.leftMargin = 0;
          this.margin = (cardLength - this.buttonWidth * length) / (length - 1);
          return;
        }

        this.buttonWidth = Math.floor(cardLength / length) - 10;
        this.tabWidth = this.buttonWidth;
        this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
        this.margin = (cardLength - this.buttonWidth * length) / (length - 1);

        if (length === maxShowCount) {
          this.tabWidth = this.buttonWidth > 72 ? this.buttonWidth : 72;
          this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
          this.margin = (cardLength - this.buttonWidth * length - this.leftMargin * 2 + CARD_EXCESS_PADDING) / (length - 1);
        }
      }
    }, {
      key: "renderUpView",
      value: function renderUpView() {
        if (!!this.props.title || this.props.showSwitch) {
          var _this$context$theme, _this$context$theme2;

          var unlimitedHeightEnable = this.props.unlimitedHeightEnable;
          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.upViewContainer, unlimitedHeightEnable || !this.props.allowFontScaling ? {
              height: undefined
            } : {}]
          }, !this.props.onSwitchValueChange ? (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          }) : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledSwitch,
              checked: this.props.switchValue
            }
          }), {
            accessibilityActions: !this.props.onSwitchValueChange ? [] : [{
              name: 'activate'
            }],
            onAccessibilityAction: !this.props.onSwitchValueChange ? null : this.onAccessibilityAction
          }), _react.default.createElement(_reactNative.View, {
            style: styles.titleViewStyle
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            allowFontScaling: this.props.allowFontScaling,
            numberOfLines: this.props.titleNumberOfLines,
            ellipsizeMode: "tail",
            style: [styles.titleStyle, unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
            }, this.props.titleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.View, {
            style: styles.gearStyle
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorCol]
          }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: this.props.subtitleNumberOfLines,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling,
            style: [unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, (0, _objectSpread2.default)({
              fontSize: 12,
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
            }, _font.FontSecondary), this.props.subtitleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.subtitle)) : null), this.props.showSwitch ? _react.default.createElement(_reactNative.View, {
            style: styles.right
          }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
            style: this.props.switchStyle,
            value: this.props.switchValue,
            disabled: this.props.disabledSwitch,
            tintColor: this.props.tintColor,
            onTintColor: this.props.onTintColor,
            onValueChange: this.props.onSwitchValueChange
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })))) : null);
        }

        return null;
      }
    }, {
      key: "renderAnimatedView",
      value: function renderAnimatedView() {
        var _this$props$options, _this$props$options2;

        var isTab;
        if (this.props.cardType === CARD_TYPE.TAB) isTab = true;else if (this.props.cardType === CARD_TYPE.DOT && ((_this$props$options = this.props.options) == null ? undefined : _this$props$options.length) < 10 && ((_this$props$options2 = this.props.options) == null ? undefined : _this$props$options2.length) > 1) isTab = false;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            height: isTab ? tabHeight : this.dotSize,
            borderRadius: isTab ? 23 : this.dotSize / 2,
            width: isTab ? this.tabWidth : this.dotSize,
            backgroundColor: this.props.animatedGearBackgroundColor || this.context.theme.colorPrimary,
            position: 'absolute',
            transform: [{
              translateX: this.currentIndex.interpolate(this.getLeftInterpolate())
            }],
            opacity: this.props.disabledGear ? 0.3 : 1,
            top: isTab ? 3 : 23 - this.dotSize / 2
          }
        });
      }
    }, {
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        if (this.props.cardType === CARD_TYPE.SLIDER) {
          var _this$context$theme3, _this$context$theme4, _this$context$theme5;

          var sliderProps = this.props.sliderProps;
          var sliderStyle = this.props.sliderStyle || {
            minimumTrackTintColor: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary,
            maximumTrackTintColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGearBackground,
            thumbTintColor: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorWhite2
          };
          return _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            options: this.props.options,
            value: this.state.gearValue,
            containerStyle: {
              height: 46,
              marginTop: 8
            },
            showEndText: sliderProps.showEndText,
            onValueChange: function onValueChange(value) {
              return _this2._onSliderValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2.props.onSlidingComplete(value);
            },
            minimumTrackTintColor: sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: sliderStyle.maximumTrackTintColor,
            blockStyle: {
              backgroundColor: sliderStyle.thumbTintColor
            },
            disabled: this.props.disabledGear
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: this.props.accessibilityLabel,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledGear
            },
            accessibilityValue: {
              value: this.state.gearValue
            }
          }), {
            accessibilityActions: [{
              name: 'increment'
            }, {
              name: 'decrement'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }));
        }

        var _this$props3 = this.props,
            cardType = _this$props3.cardType,
            maxDotShowCount = _this$props3.maxDotShowCount,
            optionGearBackgroundColor = _this$props3.optionGearBackgroundColor;
        var viewStyle = {};

        if (this.props.cardType === CARD_TYPE.TAB) {
          viewStyle = [styles.gearTabContainer, {
            backgroundColor: optionGearBackgroundColor || this.context.theme.colorGearBackground
          }];
        } else {
          viewStyle = [styles.gearDotContainer, {
            backgroundColor: optionGearBackgroundColor || 'transparent'
          }];
        }

        var _this$context$theme6 = this.context.theme,
            colorGrayLight = _this$context$theme6.colorGrayLight,
            colorWhite2 = _this$context$theme6.colorWhite2;
        var scrollViewWidth = this.props.options.length * (this.buttonWidth + this.margin) + 2 * this.leftMargin;
        var newScrollViewWidth = cardType === CARD_TYPE.TAB ? scrollViewWidth - CARD_EXCESS_PADDING : scrollViewWidth;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var gearTabContainerStyle = this.props.options.length <= maxShowCount ? {
          flex: 1
        } : {
          width: newScrollViewWidth
        };
        return _react.default.createElement(_reactNative.ScrollView, {
          alwaysBounceHorizontal: false,
          contentContainerStyle: gearTabContainerStyle,
          horizontal: true,
          showsHorizontalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [viewStyle, gearTabContainerStyle]
        }, this.renderAnimatedView(), _react.default.createElement(_reactNative.View, {
          style: [this.props.disabledGear ? {
            opacity: 0.3
          } : {}, styles.gearStyle]
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            key: option,
            onPress: function onPress() {
              return _this2.onPressButton(index);
            },
            activeOpacity: 1,
            disabled: _this2.props.disabledGear,
            style: [styles.textContainer, {
              width: _this2.buttonWidth
            }, index == 0 ? {
              marginLeft: _this2.leftMargin
            } : {
              marginLeft: _this2.margin
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.tab,
            accessibilityLabel: option,
            accessibilityHint: option,
            accessibilityState: {
              disabled: _this2.props.disabledGear,
              selected: index === _this2.state.gearValue
            }
          })), _react.default.createElement(_reactNative.Animated.Text, {
            ellipsizeMode: "tail",
            style: [styles.gearText, _this2.props.gearTextStyle, {
              color: _this2.state.gearValue === index ? colorWhite2 : colorGrayLight
            }]
          }, option));
        }))));
      }
    }, {
      key: "AnimatedMoveGreenTab",
      value: function AnimatedMoveGreenTab(index) {
        _reactNative.Animated.timing(this.currentIndex, {
          toValue: index,
          duration: this.props.duration,
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "getLeftInterpolate",
      value: function getLeftInterpolate() {
        var _this3 = this;

        var _this$props4 = this.props,
            cardType = _this$props4.cardType,
            maxDotShowCount = _this$props4.maxDotShowCount,
            options = _this$props4.options;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(options.length, maxShowCount);
        var inputRange = Array.from({
          length: length
        }).map(function (_value, idx) {
          return idx;
        });
        var outputRange = inputRange.map(function (i) {
          var value = i * (_this3.buttonWidth + _this3.margin) + _this3.leftMargin;

          if (_this3.props.cardType === CARD_TYPE.TAB && length === 5) {
            value -= (_this3.tabWidth - _this3.buttonWidth) / 2;
          }

          return value;
        });
        return {
          inputRange: inputRange,
          outputRange: outputRange
        };
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.innerView
        }, this.renderUpView(), this.renderGear());
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        var cardHeight = 143;
        if (!this.props.title && !this.props.showSwitch) cardHeight = 95;
        if (this.props.unlimitedHeightEnable) cardHeight = undefined;

        var cardStyle = _reactNative.StyleSheet.flatten([{
          width: cardWidth,
          height: cardHeight,
          borderRadius: radiusValue
        }, this.props.cardStyle]);

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          cardStyle: cardStyle,
          showShadow: false,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "_onSliderValueChange",
      value: function _onSliderValueChange(value) {
        var _this4 = this;

        this.setState({
          gearValue: value
        }, function () {
          if (typeof _this4.props.onValueChange === 'function') {
            _this4.props.onValueChange(value);
          }
        });

        if (this.props.onSliderValueChange) {
          this.props.onSliderValueChange(value);
        }
      }
    }]);
    return GearCard;
  }(_react.Component);

  GearCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.DOT, CARD_TYPE.SLIDER, CARD_TYPE.TAB]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    gearTextStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    showSwitch: _propTypes.default.bool,
    switchStyle: _propTypes.default.object,
    disabledSwitch: _propTypes.default.bool,
    disabledGear: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    options: _propTypes.default.array,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    duration: _propTypes.default.number,
    currentIndex: _propTypes.default.number,
    sliderProps: _propTypes.default.object,
    sliderStyle: _propTypes.default.object,
    onSliderValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    maxDotShowCount: _propTypes.default.number,
    onValueChange: _propTypes.default.func,
    optionGearBackgroundColor: _propTypes.default.string,
    animatedGearBackgroundColor: _propTypes.default.string
  };
  GearCard.defaultProps = {
    cardType: CARD_TYPE.TAB,
    duration: 200,
    currentIndex: 0,
    showSwitch: false,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    disabledSwitch: false,
    disabledGear: false,
    sliderProps: {
      value: 0,
      showDots: 0,
      showEndText: true
    },
    maxDotShowCount: 9
  };
  GearCard.contextType = _configProvider.ConfigContext;
  GearCard.CARD_TYPE = CARD_TYPE;

  var styles = _reactNative.StyleSheet.create({
    innerView: {
      marginHorizontal: cardPadding,
      marginTop: 14,
      marginBottom: 17,
      flex: 1
    },
    upViewContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      marginBottom: 18
    },
    gearTabContainer: {
      height: 52,
      flexDirection: 'row',
      borderRadius: 26,
      marginBottom: 13,
      marginTop: 8
    },
    gearDotContainer: {
      height: 46,
      flexDirection: 'row',
      alignItems: 'center',
      marginTop: 8,
      marginBottom: 13
    },
    titleStyle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 19
    }, _font.FontPrimary),
    textContainer: {
      height: tabHeight,
      justifyContent: 'center',
      alignItems: 'center'
    },
    gearText: (0, _objectSpread2.default)({
      fontSize: 13
    }, _font.FontSecondary),
    right: {
      alignItems: 'flex-end',
      maxWidth: 70,
      marginLeft: 20
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 10,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    dotView: {
      top: 21,
      height: 4,
      width: 4,
      borderRadius: 2,
      backgroundColor: '#999999',
      position: 'absolute'
    },
    gearStyle: {
      flexDirection: 'row',
      flex: 1,
      alignItems: 'center'
    },
    titleViewStyle: {
      flexDirection: 'row',
      flex: 1,
      marginRight: 10
    }
  });

  var _default = GearCard;
  exports.default = _default;
},23299,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22864,22897,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _popButton = _$$_REQUIRE(_dependencyMap[16]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var radiusValue = 12;
  var cardHeight = 89;
  var marginHor = 20;
  var iconViewLength = 43;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    ARROW: 'arrow',
    NONE: 'none'
  };
  Object.freeze(TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var ListCard = function (_React$Component) {
    (0, _inherits2.default)(ListCard, _React$Component);

    function ListCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ListCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        if (_this.props.disabled) {
          return;
        }

        if (actionName === 'activate') {
          var _this$props$switchOpt, _this$props$switchOpt2, _this$props$choiceOpt, _this$props$choiceOpt2, _this$props$buttonOpt;

          if (_this.props.type === TYPE.SWITCH) (_this$props$switchOpt = _this.props.switchOption) == null ? undefined : _this$props$switchOpt.onSwitchValueChange(!((_this$props$switchOpt2 = _this.props.switchOption) == null ? undefined : _this$props$switchOpt2.switchValue));else if (_this.props.type === TYPE.CHOICE) (_this$props$choiceOpt = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.onValueChange(!((_this$props$choiceOpt2 = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checked));else if (_this.props.type === TYPE.BUTTON) (_this$props$buttonOpt = _this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.onPress();
        }
      };

      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ListCard, [{
      key: "renderIcon",
      value: function renderIcon() {
        return this.props.icon ? _react.default.createElement(_reactNative.View, {
          style: [styles.iconViewStyle, {
            backgroundColor: this.props.themeColor,
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconStyle,
          source: this.props.icon
        })) : null;
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3;

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            lineHeight: undefined
          };
        }

        var valueStyle = {
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var textViewStyle = {
          flex: 1,
          flexDirection: 'row'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'KMedium'
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        return _react.default.createElement(_reactNative.View, {
          style: [textViewStyle, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleView
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
          }, fontFamily, adaptedFontStyle, this.props.titleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.subtitle, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
          }, adaptedFontStyle, this.props.subtitleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.value && (this.props.type === TYPE.NONE || this.props.type === TYPE.ARROW) ? _react.default.createElement(_reactNative.View, {
          style: styles.valueText
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [styles.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, valueStyle, adaptedFontStyle, this.props.valueStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value)) : null);
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        var _this$props$buttonOpt2, _this$props$buttonOpt3, _this$props$buttonOpt4, _this$props$buttonOpt5, _this$props$buttonOpt6, _this$props$buttonOpt7, _this$props$choiceOpt3, _this$props$choiceOpt4, _this$props$choiceOpt5, _this$props$switchOpt3, _this$props$switchOpt4, _this$props$switchOpt5, _this$props$switchOpt6, _this$props$switchOpt7;

        var component = {};
        if (this.props.type === TYPE.NONE) return null;else if (this.props.type === TYPE.ARROW) component = _react.default.createElement(_reactNative.Image, {
          style: styles.arrowIcon,
          source: _resources.Images.common.right_arrow
        });else if (this.props.type === TYPE.BUTTON) component = _react.default.createElement(_popButton.PopButton, {
          sizeLevel: 'small',
          title: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.title,
          backgroundColor: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.backgroundColor,
          titleStyle: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt4.titleStyle,
          titleColor: (_this$props$buttonOpt5 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt6 = _this$props$buttonOpt5.titleStyle) == null ? undefined : _this$props$buttonOpt6.color,
          disabled: this.props.disabled,
          allowFontScaling: this.props.allowFontScaling,
          onPress: (_this$props$buttonOpt7 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt7.onPress
        });else if (this.props.type === TYPE.CHOICE) component = _react.default.createElement(_Checkbox.default, {
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          disabled: this.props.disabled,
          checked: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.checked,
          checkedColor: (_this$props$choiceOpt4 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt4.checkedColor,
          onValueChange: (_this$props$choiceOpt5 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt5.onValueChange
        });else if (this.props.type === TYPE.SWITCH) component = _react.default.createElement(_Switch.default, {
          style: (_this$props$switchOpt3 = this.props.switchOption) == null ? undefined : _this$props$switchOpt3.switchStyle,
          value: (_this$props$switchOpt4 = this.props.switchOption) == null ? undefined : _this$props$switchOpt4.switchValue,
          disabled: this.props.disabled,
          tintColor: (_this$props$switchOpt5 = this.props.switchOption) == null ? undefined : _this$props$switchOpt5.tintColor,
          onTintColor: (_this$props$switchOpt6 = this.props.switchOption) == null ? undefined : _this$props$switchOpt6.onTintColor,
          onValueChange: (_this$props$switchOpt7 = this.props.switchOption) == null ? undefined : _this$props$switchOpt7.onSwitchValueChange
        });
        return _react.default.createElement(_reactNative.View, {
          style: [styles.right, this.props.type === TYPE.BUTTON ? {
            flex: 1,
            maxWidth: 80
          } : {}]
        }, component);
      }
    }, {
      key: "renderListCard",
      value: function renderListCard() {
        var _this$props$choiceOpt6, _this$props$switchOpt8;

        return _react.default.createElement(_reactNative.View, {
          style: styles.cardView
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.innerView
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: (_this$props$choiceOpt6 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt6.checked,
            value: (_this$props$switchOpt8 = this.props.switchOption) == null ? undefined : _this$props$switchOpt8.switchValue
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.renderIcon(), this.renderText(), this.renderRight()), this.renderSeparator());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4;

        var cardStyle = this.props.cardStyle;
        var defaultCardStyle = {
          height: cardHeight,
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, cardStyle, this.radius, !this.props.allowFontScaling || this.props.unlimitedHeightEnable ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: false,
          onPress: this.props.onPress,
          innerView: this.renderListCard(),
          cardStyle: mixCardStyle,
          disabled: this.props.disabled,
          underlayColor: this.props.cardUnderlayColor || ((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.listUnderlayColor),
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginHorizontal: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListCard;
  }(_react.default.Component);

  ListCard.contextType = _configProvider.ConfigContext;
  ListCard.TYPE = TYPE;
  ListCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;
  ListCard.propTypes = {
    radiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.BOTTOM]),
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.CHOICE, TYPE.BUTTON, TYPE.ARROW, TYPE.NONE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    themeColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    cardUnderlayColor: _propTypes.default.string
  };
  ListCard.defaultProps = {
    type: TYPE.NONE,
    radiusType: CARD_RADIUS_TYPE.ALL,
    themeColor: _resources.Styles.common.MHGreen,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 2,
    valueNumberOfLines: 1,
    allowFontScaling: true,
    unlimitedHeightEnable: false,
    showSeparator: true,
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    cardView: {
      flex: 1,
      justifyContent: 'center'
    },
    innerView: {
      flexDirection: 'row',
      marginHorizontal: marginHor,
      flex: 1,
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20
    },
    title: {
      fontSize: 16,
      lineHeight: 22,
      fontWeight: 'bold'
    },
    subtitle: {
      fontSize: 13,
      lineHeight: 18,
      marginTop: 1
    },
    valueText: {
      marginLeft: 6,
      justifyContent: 'flex-end',
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    titleView: {
      justifyContent: 'center',
      paddingRight: 10
    },
    iconViewStyle: {
      width: iconViewLength,
      height: iconViewLength,
      borderRadius: 21.5,
      alignItems: 'center',
      justifyContent: 'center',
      marginRight: 13
    },
    iconStyle: {
      width: 24,
      height: 24
    },
    arrowIcon: {
      width: 22,
      height: 22
    },
    right: {
      alignItems: 'flex-end'
    }
  });

  var _default = ListCard;
  exports.default = _default;
},23302,[14305,14314,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22450,22864,23212,22786,22426,22420]);
__r(10120);
__r(10001);